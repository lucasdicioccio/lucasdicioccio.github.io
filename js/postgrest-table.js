(() => {
  // output/Affjax/foreign.js
  function _ajax(platformSpecificDriver, timeoutErrorMessageIdent, requestFailedMessageIdent, mkHeader, options2) {
    return function(errback, callback) {
      var xhr = platformSpecificDriver.newXHR();
      var fixedUrl = platformSpecificDriver.fixupUrl(options2.url, xhr);
      xhr.open(options2.method || "GET", fixedUrl, true, options2.username, options2.password);
      if (options2.headers) {
        try {
          for (var i2 = 0, header2; (header2 = options2.headers[i2]) != null; i2++) {
            xhr.setRequestHeader(header2.field, header2.value);
          }
        } catch (e) {
          errback(e);
        }
      }
      var onerror = function(msgIdent) {
        return function() {
          errback(new Error(msgIdent));
        };
      };
      xhr.onerror = onerror(requestFailedMessageIdent);
      xhr.ontimeout = onerror(timeoutErrorMessageIdent);
      xhr.onload = function() {
        callback({
          status: xhr.status,
          statusText: xhr.statusText,
          headers: xhr.getAllResponseHeaders().split("\r\n").filter(function(header3) {
            return header3.length > 0;
          }).map(function(header3) {
            var i3 = header3.indexOf(":");
            return mkHeader(header3.substring(0, i3))(header3.substring(i3 + 2));
          }),
          body: xhr.response
        });
      };
      xhr.responseType = options2.responseType;
      xhr.withCredentials = options2.withCredentials;
      xhr.timeout = options2.timeout;
      xhr.send(options2.content);
      return function(error4, cancelErrback, cancelCallback) {
        try {
          xhr.abort();
        } catch (e) {
          return cancelErrback(e);
        }
        return cancelCallback();
      };
    };
  }

  // output/Data.Functor/foreign.js
  var arrayMap = function(f) {
    return function(arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i2 = 0; i2 < l; i2++) {
        result[i2] = f(arr[i2]);
      }
      return result;
    };
  };

  // output/Control.Semigroupoid/index.js
  var semigroupoidFn = {
    compose: function(f) {
      return function(g) {
        return function(x2) {
          return f(g(x2));
        };
      };
    }
  };
  var compose = function(dict) {
    return dict.compose;
  };
  var composeFlipped = function(dictSemigroupoid) {
    var compose1 = compose(dictSemigroupoid);
    return function(f) {
      return function(g) {
        return compose1(g)(f);
      };
    };
  };

  // output/Control.Category/index.js
  var identity = function(dict) {
    return dict.identity;
  };
  var categoryFn = {
    identity: function(x2) {
      return x2;
    },
    Semigroupoid0: function() {
      return semigroupoidFn;
    }
  };

  // output/Data.Boolean/index.js
  var otherwise = true;

  // output/Data.Function/index.js
  var on = function(f) {
    return function(g) {
      return function(x2) {
        return function(y2) {
          return f(g(x2))(g(y2));
        };
      };
    };
  };
  var flip = function(f) {
    return function(b2) {
      return function(a2) {
        return f(a2)(b2);
      };
    };
  };
  var $$const = function(a2) {
    return function(v) {
      return a2;
    };
  };

  // output/Data.Unit/foreign.js
  var unit = void 0;

  // output/Type.Proxy/index.js
  var $$Proxy = /* @__PURE__ */ function() {
    function $$Proxy2() {
    }
    ;
    $$Proxy2.value = new $$Proxy2();
    return $$Proxy2;
  }();

  // output/Data.Functor/index.js
  var map = function(dict) {
    return dict.map;
  };
  var mapFlipped = function(dictFunctor) {
    var map119 = map(dictFunctor);
    return function(fa) {
      return function(f) {
        return map119(f)(fa);
      };
    };
  };
  var $$void = function(dictFunctor) {
    return map(dictFunctor)($$const(unit));
  };
  var voidLeft = function(dictFunctor) {
    var map119 = map(dictFunctor);
    return function(f) {
      return function(x2) {
        return map119($$const(x2))(f);
      };
    };
  };
  var voidRight = function(dictFunctor) {
    var map119 = map(dictFunctor);
    return function(x2) {
      return map119($$const(x2));
    };
  };
  var functorArray = {
    map: arrayMap
  };

  // output/Data.Semigroup/foreign.js
  var concatString = function(s1) {
    return function(s2) {
      return s1 + s2;
    };
  };
  var concatArray = function(xs) {
    return function(ys) {
      if (xs.length === 0)
        return ys;
      if (ys.length === 0)
        return xs;
      return xs.concat(ys);
    };
  };

  // output/Data.Symbol/index.js
  var reflectSymbol = function(dict) {
    return dict.reflectSymbol;
  };

  // output/Record.Unsafe/foreign.js
  var unsafeGet = function(label5) {
    return function(rec) {
      return rec[label5];
    };
  };

  // output/Data.Semigroup/index.js
  var semigroupString = {
    append: concatString
  };
  var semigroupArray = {
    append: concatArray
  };
  var append = function(dict) {
    return dict.append;
  };
  var semigroupFn = function(dictSemigroup) {
    var append16 = append(dictSemigroup);
    return {
      append: function(f) {
        return function(g) {
          return function(x2) {
            return append16(f(x2))(g(x2));
          };
        };
      }
    };
  };

  // output/Control.Alt/index.js
  var alt = function(dict) {
    return dict.alt;
  };

  // output/Control.Apply/foreign.js
  var arrayApply = function(fs) {
    return function(xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l * k);
      var n = 0;
      for (var i2 = 0; i2 < l; i2++) {
        var f = fs[i2];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };

  // output/Control.Apply/index.js
  var identity2 = /* @__PURE__ */ identity(categoryFn);
  var applyArray = {
    apply: arrayApply,
    Functor0: function() {
      return functorArray;
    }
  };
  var apply = function(dict) {
    return dict.apply;
  };
  var applyFirst = function(dictApply) {
    var apply12 = apply(dictApply);
    var map45 = map(dictApply.Functor0());
    return function(a2) {
      return function(b2) {
        return apply12(map45($$const)(a2))(b2);
      };
    };
  };
  var applySecond = function(dictApply) {
    var apply12 = apply(dictApply);
    var map45 = map(dictApply.Functor0());
    return function(a2) {
      return function(b2) {
        return apply12(map45($$const(identity2))(a2))(b2);
      };
    };
  };
  var lift2 = function(dictApply) {
    var apply12 = apply(dictApply);
    var map45 = map(dictApply.Functor0());
    return function(f) {
      return function(a2) {
        return function(b2) {
          return apply12(map45(f)(a2))(b2);
        };
      };
    };
  };

  // output/Control.Applicative/index.js
  var pure = function(dict) {
    return dict.pure;
  };
  var unless = function(dictApplicative) {
    var pure113 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (!v) {
          return v1;
        }
        ;
        if (v) {
          return pure113(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var when = function(dictApplicative) {
    var pure113 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (v) {
          return v1;
        }
        ;
        if (!v) {
          return pure113(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var liftA1 = function(dictApplicative) {
    var apply6 = apply(dictApplicative.Apply0());
    var pure113 = pure(dictApplicative);
    return function(f) {
      return function(a2) {
        return apply6(pure113(f))(a2);
      };
    };
  };

  // output/Data.Bounded/foreign.js
  var topInt = 2147483647;
  var bottomInt = -2147483648;
  var topChar = String.fromCharCode(65535);
  var bottomChar = String.fromCharCode(0);
  var topNumber = Number.POSITIVE_INFINITY;
  var bottomNumber = Number.NEGATIVE_INFINITY;

  // output/Data.Ord/foreign.js
  var unsafeCompareImpl = function(lt) {
    return function(eq18) {
      return function(gt) {
        return function(x2) {
          return function(y2) {
            return x2 < y2 ? lt : x2 === y2 ? eq18 : gt;
          };
        };
      };
    };
  };
  var ordBooleanImpl = unsafeCompareImpl;
  var ordIntImpl = unsafeCompareImpl;
  var ordNumberImpl = unsafeCompareImpl;
  var ordStringImpl = unsafeCompareImpl;
  var ordCharImpl = unsafeCompareImpl;
  var ordArrayImpl = function(f) {
    return function(xs) {
      return function(ys) {
        var i2 = 0;
        var xlen = xs.length;
        var ylen = ys.length;
        while (i2 < xlen && i2 < ylen) {
          var x2 = xs[i2];
          var y2 = ys[i2];
          var o = f(x2)(y2);
          if (o !== 0) {
            return o;
          }
          i2++;
        }
        if (xlen === ylen) {
          return 0;
        } else if (xlen > ylen) {
          return -1;
        } else {
          return 1;
        }
      };
    };
  };

  // output/Data.Eq/foreign.js
  var refEq = function(r1) {
    return function(r2) {
      return r1 === r2;
    };
  };
  var eqBooleanImpl = refEq;
  var eqIntImpl = refEq;
  var eqNumberImpl = refEq;
  var eqCharImpl = refEq;
  var eqStringImpl = refEq;
  var eqArrayImpl = function(f) {
    return function(xs) {
      return function(ys) {
        if (xs.length !== ys.length)
          return false;
        for (var i2 = 0; i2 < xs.length; i2++) {
          if (!f(xs[i2])(ys[i2]))
            return false;
        }
        return true;
      };
    };
  };

  // output/Data.Eq/index.js
  var eqUnit = {
    eq: function(v) {
      return function(v1) {
        return true;
      };
    }
  };
  var eqString = {
    eq: eqStringImpl
  };
  var eqRowNil = {
    eqRecord: function(v) {
      return function(v1) {
        return function(v2) {
          return true;
        };
      };
    }
  };
  var eqRecord = function(dict) {
    return dict.eqRecord;
  };
  var eqRec = function() {
    return function(dictEqRecord) {
      return {
        eq: eqRecord(dictEqRecord)($$Proxy.value)
      };
    };
  };
  var eqNumber = {
    eq: eqNumberImpl
  };
  var eqInt = {
    eq: eqIntImpl
  };
  var eqChar = {
    eq: eqCharImpl
  };
  var eqBoolean = {
    eq: eqBooleanImpl
  };
  var eq1 = function(dict) {
    return dict.eq1;
  };
  var eq = function(dict) {
    return dict.eq;
  };
  var eq2 = /* @__PURE__ */ eq(eqBoolean);
  var eqArray = function(dictEq) {
    return {
      eq: eqArrayImpl(eq(dictEq))
    };
  };
  var eqRowCons = function(dictEqRecord) {
    var eqRecord1 = eqRecord(dictEqRecord);
    return function() {
      return function(dictIsSymbol) {
        var reflectSymbol2 = reflectSymbol(dictIsSymbol);
        return function(dictEq) {
          var eq33 = eq(dictEq);
          return {
            eqRecord: function(v) {
              return function(ra) {
                return function(rb) {
                  var tail2 = eqRecord1($$Proxy.value)(ra)(rb);
                  var key = reflectSymbol2($$Proxy.value);
                  var get11 = unsafeGet(key);
                  return eq33(get11(ra))(get11(rb)) && tail2;
                };
              };
            }
          };
        };
      };
    };
  };
  var notEq = function(dictEq) {
    var eq33 = eq(dictEq);
    return function(x2) {
      return function(y2) {
        return eq2(eq33(x2)(y2))(false);
      };
    };
  };

  // output/Data.Ordering/index.js
  var LT = /* @__PURE__ */ function() {
    function LT2() {
    }
    ;
    LT2.value = new LT2();
    return LT2;
  }();
  var GT = /* @__PURE__ */ function() {
    function GT2() {
    }
    ;
    GT2.value = new GT2();
    return GT2;
  }();
  var EQ = /* @__PURE__ */ function() {
    function EQ2() {
    }
    ;
    EQ2.value = new EQ2();
    return EQ2;
  }();
  var eqOrdering = {
    eq: function(v) {
      return function(v1) {
        if (v instanceof LT && v1 instanceof LT) {
          return true;
        }
        ;
        if (v instanceof GT && v1 instanceof GT) {
          return true;
        }
        ;
        if (v instanceof EQ && v1 instanceof EQ) {
          return true;
        }
        ;
        return false;
      };
    }
  };

  // output/Data.Ring/foreign.js
  var intSub = function(x2) {
    return function(y2) {
      return x2 - y2 | 0;
    };
  };
  var numSub = function(n1) {
    return function(n2) {
      return n1 - n2;
    };
  };

  // output/Data.Semiring/foreign.js
  var intAdd = function(x2) {
    return function(y2) {
      return x2 + y2 | 0;
    };
  };
  var intMul = function(x2) {
    return function(y2) {
      return x2 * y2 | 0;
    };
  };
  var numAdd = function(n1) {
    return function(n2) {
      return n1 + n2;
    };
  };
  var numMul = function(n1) {
    return function(n2) {
      return n1 * n2;
    };
  };

  // output/Data.Semiring/index.js
  var zero = function(dict) {
    return dict.zero;
  };
  var semiringNumber = {
    add: numAdd,
    zero: 0,
    mul: numMul,
    one: 1
  };
  var semiringInt = {
    add: intAdd,
    zero: 0,
    mul: intMul,
    one: 1
  };
  var one = function(dict) {
    return dict.one;
  };
  var mul = function(dict) {
    return dict.mul;
  };
  var add = function(dict) {
    return dict.add;
  };

  // output/Data.Ring/index.js
  var sub = function(dict) {
    return dict.sub;
  };
  var ringNumber = {
    sub: numSub,
    Semiring0: function() {
      return semiringNumber;
    }
  };
  var ringInt = {
    sub: intSub,
    Semiring0: function() {
      return semiringInt;
    }
  };
  var negate = function(dictRing) {
    var sub1 = sub(dictRing);
    var zero2 = zero(dictRing.Semiring0());
    return function(a2) {
      return sub1(zero2)(a2);
    };
  };

  // output/Data.Ord/index.js
  var eqRec2 = /* @__PURE__ */ eqRec();
  var notEq2 = /* @__PURE__ */ notEq(eqOrdering);
  var ordUnit = {
    compare: function(v) {
      return function(v1) {
        return EQ.value;
      };
    },
    Eq0: function() {
      return eqUnit;
    }
  };
  var ordString = /* @__PURE__ */ function() {
    return {
      compare: ordStringImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqString;
      }
    };
  }();
  var ordRecordNil = {
    compareRecord: function(v) {
      return function(v1) {
        return function(v2) {
          return EQ.value;
        };
      };
    },
    EqRecord0: function() {
      return eqRowNil;
    }
  };
  var ordNumber = /* @__PURE__ */ function() {
    return {
      compare: ordNumberImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqNumber;
      }
    };
  }();
  var ordInt = /* @__PURE__ */ function() {
    return {
      compare: ordIntImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqInt;
      }
    };
  }();
  var ordChar = /* @__PURE__ */ function() {
    return {
      compare: ordCharImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqChar;
      }
    };
  }();
  var ordBoolean = /* @__PURE__ */ function() {
    return {
      compare: ordBooleanImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqBoolean;
      }
    };
  }();
  var compareRecord = function(dict) {
    return dict.compareRecord;
  };
  var ordRecord = function() {
    return function(dictOrdRecord) {
      var eqRec1 = eqRec2(dictOrdRecord.EqRecord0());
      return {
        compare: compareRecord(dictOrdRecord)($$Proxy.value),
        Eq0: function() {
          return eqRec1;
        }
      };
    };
  };
  var compare1 = function(dict) {
    return dict.compare1;
  };
  var compare = function(dict) {
    return dict.compare;
  };
  var compare2 = /* @__PURE__ */ compare(ordInt);
  var comparing = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(f) {
      return function(x2) {
        return function(y2) {
          return compare33(f(x2))(f(y2));
        };
      };
    };
  };
  var greaterThan = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare33(a1)(a2);
        if (v instanceof GT) {
          return true;
        }
        ;
        return false;
      };
    };
  };
  var greaterThanOrEq = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare33(a1)(a2);
        if (v instanceof LT) {
          return false;
        }
        ;
        return true;
      };
    };
  };
  var lessThan = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare33(a1)(a2);
        if (v instanceof LT) {
          return true;
        }
        ;
        return false;
      };
    };
  };
  var lessThanOrEq = function(dictOrd) {
    var compare33 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare33(a1)(a2);
        if (v instanceof GT) {
          return false;
        }
        ;
        return true;
      };
    };
  };
  var ordArray = function(dictOrd) {
    var compare33 = compare(dictOrd);
    var eqArray2 = eqArray(dictOrd.Eq0());
    return {
      compare: /* @__PURE__ */ function() {
        var toDelta = function(x2) {
          return function(y2) {
            var v = compare33(x2)(y2);
            if (v instanceof EQ) {
              return 0;
            }
            ;
            if (v instanceof LT) {
              return 1;
            }
            ;
            if (v instanceof GT) {
              return -1 | 0;
            }
            ;
            throw new Error("Failed pattern match at Data.Ord (line 79, column 7 - line 82, column 17): " + [v.constructor.name]);
          };
        };
        return function(xs) {
          return function(ys) {
            return compare2(0)(ordArrayImpl(toDelta)(xs)(ys));
          };
        };
      }(),
      Eq0: function() {
        return eqArray2;
      }
    };
  };
  var ordRecordCons = function(dictOrdRecord) {
    var compareRecord1 = compareRecord(dictOrdRecord);
    var eqRowCons2 = eqRowCons(dictOrdRecord.EqRecord0())();
    return function() {
      return function(dictIsSymbol) {
        var reflectSymbol2 = reflectSymbol(dictIsSymbol);
        var eqRowCons1 = eqRowCons2(dictIsSymbol);
        return function(dictOrd) {
          var compare33 = compare(dictOrd);
          var eqRowCons22 = eqRowCons1(dictOrd.Eq0());
          return {
            compareRecord: function(v) {
              return function(ra) {
                return function(rb) {
                  var key = reflectSymbol2($$Proxy.value);
                  var left2 = compare33(unsafeGet(key)(ra))(unsafeGet(key)(rb));
                  var $95 = notEq2(left2)(EQ.value);
                  if ($95) {
                    return left2;
                  }
                  ;
                  return compareRecord1($$Proxy.value)(ra)(rb);
                };
              };
            },
            EqRecord0: function() {
              return eqRowCons22;
            }
          };
        };
      };
    };
  };

  // output/Data.Bounded/index.js
  var top = function(dict) {
    return dict.top;
  };
  var boundedInt = {
    top: topInt,
    bottom: bottomInt,
    Ord0: function() {
      return ordInt;
    }
  };
  var boundedChar = {
    top: topChar,
    bottom: bottomChar,
    Ord0: function() {
      return ordChar;
    }
  };
  var bottom = function(dict) {
    return dict.bottom;
  };

  // output/Data.Show/foreign.js
  var showIntImpl = function(n) {
    return n.toString();
  };
  var showNumberImpl = function(n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
  var showCharImpl = function(c) {
    var code2 = c.charCodeAt(0);
    if (code2 < 32 || code2 === 127) {
      switch (c) {
        case "\x07":
          return "'\\a'";
        case "\b":
          return "'\\b'";
        case "\f":
          return "'\\f'";
        case "\n":
          return "'\\n'";
        case "\r":
          return "'\\r'";
        case "	":
          return "'\\t'";
        case "\v":
          return "'\\v'";
      }
      return "'\\" + code2.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };
  var showStringImpl = function(s) {
    var l = s.length;
    return '"' + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      // eslint-disable-line no-control-regex
      function(c, i2) {
        switch (c) {
          case '"':
          case "\\":
            return "\\" + c;
          case "\x07":
            return "\\a";
          case "\b":
            return "\\b";
          case "\f":
            return "\\f";
          case "\n":
            return "\\n";
          case "\r":
            return "\\r";
          case "	":
            return "\\t";
          case "\v":
            return "\\v";
        }
        var k = i2 + 1;
        var empty8 = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty8;
      }
    ) + '"';
  };
  var showArrayImpl = function(f) {
    return function(xs) {
      var ss = [];
      for (var i2 = 0, l = xs.length; i2 < l; i2++) {
        ss[i2] = f(xs[i2]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  // output/Data.Show/index.js
  var showUnit = {
    show: function(v) {
      return "unit";
    }
  };
  var showString = {
    show: showStringImpl
  };
  var showRecordFields = function(dict) {
    return dict.showRecordFields;
  };
  var showRecord = function() {
    return function() {
      return function(dictShowRecordFields) {
        var showRecordFields1 = showRecordFields(dictShowRecordFields);
        return {
          show: function(record) {
            return "{" + (showRecordFields1($$Proxy.value)(record) + "}");
          }
        };
      };
    };
  };
  var showNumber = {
    show: showNumberImpl
  };
  var showInt = {
    show: showIntImpl
  };
  var showChar = {
    show: showCharImpl
  };
  var showBoolean = {
    show: function(v) {
      if (v) {
        return "true";
      }
      ;
      if (!v) {
        return "false";
      }
      ;
      throw new Error("Failed pattern match at Data.Show (line 29, column 1 - line 31, column 23): " + [v.constructor.name]);
    }
  };
  var show = function(dict) {
    return dict.show;
  };
  var showArray = function(dictShow) {
    return {
      show: showArrayImpl(show(dictShow))
    };
  };
  var showRecordFieldsCons = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function(dictShowRecordFields) {
      var showRecordFields1 = showRecordFields(dictShowRecordFields);
      return function(dictShow) {
        var show111 = show(dictShow);
        return {
          showRecordFields: function(v) {
            return function(record) {
              var tail2 = showRecordFields1($$Proxy.value)(record);
              var key = reflectSymbol2($$Proxy.value);
              var focus3 = unsafeGet(key)(record);
              return " " + (key + (": " + (show111(focus3) + ("," + tail2))));
            };
          }
        };
      };
    };
  };
  var showRecordFieldsConsNil = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function(dictShow) {
      var show111 = show(dictShow);
      return {
        showRecordFields: function(v) {
          return function(record) {
            var key = reflectSymbol2($$Proxy.value);
            var focus3 = unsafeGet(key)(record);
            return " " + (key + (": " + (show111(focus3) + " ")));
          };
        }
      };
    };
  };

  // output/Data.Generic.Rep/index.js
  var from = function(dict) {
    return dict.from;
  };

  // output/Data.Maybe/index.js
  var identity3 = /* @__PURE__ */ identity(categoryFn);
  var Nothing = /* @__PURE__ */ function() {
    function Nothing2() {
    }
    ;
    Nothing2.value = new Nothing2();
    return Nothing2;
  }();
  var Just = /* @__PURE__ */ function() {
    function Just2(value0) {
      this.value0 = value0;
    }
    ;
    Just2.create = function(value0) {
      return new Just2(value0);
    };
    return Just2;
  }();
  var maybe = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nothing) {
          return v;
        }
        ;
        if (v2 instanceof Just) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var isNothing = /* @__PURE__ */ maybe(true)(/* @__PURE__ */ $$const(false));
  var isJust = /* @__PURE__ */ maybe(false)(/* @__PURE__ */ $$const(true));
  var functorMaybe = {
    map: function(v) {
      return function(v1) {
        if (v1 instanceof Just) {
          return new Just(v(v1.value0));
        }
        ;
        return Nothing.value;
      };
    }
  };
  var map2 = /* @__PURE__ */ map(functorMaybe);
  var fromMaybe = function(a2) {
    return maybe(a2)(identity3);
  };
  var fromJust = function() {
    return function(v) {
      if (v instanceof Just) {
        return v.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [v.constructor.name]);
    };
  };
  var eqMaybe = function(dictEq) {
    var eq18 = eq(dictEq);
    return {
      eq: function(x2) {
        return function(y2) {
          if (x2 instanceof Nothing && y2 instanceof Nothing) {
            return true;
          }
          ;
          if (x2 instanceof Just && y2 instanceof Just) {
            return eq18(x2.value0)(y2.value0);
          }
          ;
          return false;
        };
      }
    };
  };
  var applyMaybe = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return map2(v.value0)(v1);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var bindMaybe = {
    bind: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return v1(v.value0);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyMaybe;
    }
  };
  var applicativeMaybe = /* @__PURE__ */ function() {
    return {
      pure: Just.create,
      Apply0: function() {
        return applyMaybe;
      }
    };
  }();
  var altMaybe = {
    alt: function(v) {
      return function(v1) {
        if (v instanceof Nothing) {
          return v1;
        }
        ;
        return v;
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };

  // output/Data.MediaType.Common/index.js
  var applicationJSON = "application/json";
  var applicationFormURLEncoded = "application/x-www-form-urlencoded";

  // output/Affjax.RequestBody/index.js
  var ArrayView = /* @__PURE__ */ function() {
    function ArrayView2(value0) {
      this.value0 = value0;
    }
    ;
    ArrayView2.create = function(value0) {
      return new ArrayView2(value0);
    };
    return ArrayView2;
  }();
  var Blob2 = /* @__PURE__ */ function() {
    function Blob4(value0) {
      this.value0 = value0;
    }
    ;
    Blob4.create = function(value0) {
      return new Blob4(value0);
    };
    return Blob4;
  }();
  var Document = /* @__PURE__ */ function() {
    function Document3(value0) {
      this.value0 = value0;
    }
    ;
    Document3.create = function(value0) {
      return new Document3(value0);
    };
    return Document3;
  }();
  var $$String = /* @__PURE__ */ function() {
    function $$String3(value0) {
      this.value0 = value0;
    }
    ;
    $$String3.create = function(value0) {
      return new $$String3(value0);
    };
    return $$String3;
  }();
  var FormData = /* @__PURE__ */ function() {
    function FormData2(value0) {
      this.value0 = value0;
    }
    ;
    FormData2.create = function(value0) {
      return new FormData2(value0);
    };
    return FormData2;
  }();
  var FormURLEncoded = /* @__PURE__ */ function() {
    function FormURLEncoded2(value0) {
      this.value0 = value0;
    }
    ;
    FormURLEncoded2.create = function(value0) {
      return new FormURLEncoded2(value0);
    };
    return FormURLEncoded2;
  }();
  var Json = /* @__PURE__ */ function() {
    function Json3(value0) {
      this.value0 = value0;
    }
    ;
    Json3.create = function(value0) {
      return new Json3(value0);
    };
    return Json3;
  }();
  var toMediaType = function(v) {
    if (v instanceof FormURLEncoded) {
      return new Just(applicationFormURLEncoded);
    }
    ;
    if (v instanceof Json) {
      return new Just(applicationJSON);
    }
    ;
    return Nothing.value;
  };

  // output/Unsafe.Coerce/foreign.js
  var unsafeCoerce2 = function(x2) {
    return x2;
  };

  // output/Safe.Coerce/index.js
  var coerce = function() {
    return unsafeCoerce2;
  };

  // output/Data.Newtype/index.js
  var coerce2 = /* @__PURE__ */ coerce();
  var wrap = function() {
    return coerce2;
  };
  var unwrap = function() {
    return coerce2;
  };
  var under = function() {
    return function() {
      return function(v) {
        return coerce2;
      };
    };
  };
  var alaF = function() {
    return function() {
      return function() {
        return function() {
          return function(v) {
            return coerce2;
          };
        };
      };
    };
  };

  // output/Affjax.RequestHeader/index.js
  var unwrap2 = /* @__PURE__ */ unwrap();
  var Accept = /* @__PURE__ */ function() {
    function Accept2(value0) {
      this.value0 = value0;
    }
    ;
    Accept2.create = function(value0) {
      return new Accept2(value0);
    };
    return Accept2;
  }();
  var ContentType = /* @__PURE__ */ function() {
    function ContentType2(value0) {
      this.value0 = value0;
    }
    ;
    ContentType2.create = function(value0) {
      return new ContentType2(value0);
    };
    return ContentType2;
  }();
  var RequestHeader = /* @__PURE__ */ function() {
    function RequestHeader2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RequestHeader2.create = function(value0) {
      return function(value1) {
        return new RequestHeader2(value0, value1);
      };
    };
    return RequestHeader2;
  }();
  var value = function(v) {
    if (v instanceof Accept) {
      return unwrap2(v.value0);
    }
    ;
    if (v instanceof ContentType) {
      return unwrap2(v.value0);
    }
    ;
    if (v instanceof RequestHeader) {
      return v.value1;
    }
    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [v.constructor.name]);
  };
  var name = function(v) {
    if (v instanceof Accept) {
      return "Accept";
    }
    ;
    if (v instanceof ContentType) {
      return "Content-Type";
    }
    ;
    if (v instanceof RequestHeader) {
      return v.value0;
    }
    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [v.constructor.name]);
  };

  // output/Affjax.ResponseFormat/index.js
  var identity4 = /* @__PURE__ */ identity(categoryFn);
  var $$ArrayBuffer = /* @__PURE__ */ function() {
    function $$ArrayBuffer2(value0) {
      this.value0 = value0;
    }
    ;
    $$ArrayBuffer2.create = function(value0) {
      return new $$ArrayBuffer2(value0);
    };
    return $$ArrayBuffer2;
  }();
  var Blob3 = /* @__PURE__ */ function() {
    function Blob4(value0) {
      this.value0 = value0;
    }
    ;
    Blob4.create = function(value0) {
      return new Blob4(value0);
    };
    return Blob4;
  }();
  var Document2 = /* @__PURE__ */ function() {
    function Document3(value0) {
      this.value0 = value0;
    }
    ;
    Document3.create = function(value0) {
      return new Document3(value0);
    };
    return Document3;
  }();
  var Json2 = /* @__PURE__ */ function() {
    function Json3(value0) {
      this.value0 = value0;
    }
    ;
    Json3.create = function(value0) {
      return new Json3(value0);
    };
    return Json3;
  }();
  var $$String2 = /* @__PURE__ */ function() {
    function $$String3(value0) {
      this.value0 = value0;
    }
    ;
    $$String3.create = function(value0) {
      return new $$String3(value0);
    };
    return $$String3;
  }();
  var Ignore = /* @__PURE__ */ function() {
    function Ignore2(value0) {
      this.value0 = value0;
    }
    ;
    Ignore2.create = function(value0) {
      return new Ignore2(value0);
    };
    return Ignore2;
  }();
  var toResponseType = function(v) {
    if (v instanceof $$ArrayBuffer) {
      return "arraybuffer";
    }
    ;
    if (v instanceof Blob3) {
      return "blob";
    }
    ;
    if (v instanceof Document2) {
      return "document";
    }
    ;
    if (v instanceof Json2) {
      return "text";
    }
    ;
    if (v instanceof $$String2) {
      return "text";
    }
    ;
    if (v instanceof Ignore) {
      return "";
    }
    ;
    throw new Error("Failed pattern match at Affjax.ResponseFormat (line 44, column 3 - line 50, column 19): " + [v.constructor.name]);
  };
  var toMediaType2 = function(v) {
    if (v instanceof Json2) {
      return new Just(applicationJSON);
    }
    ;
    return Nothing.value;
  };
  var string = /* @__PURE__ */ function() {
    return new $$String2(identity4);
  }();
  var json = /* @__PURE__ */ function() {
    return new Json2(identity4);
  }();
  var ignore = /* @__PURE__ */ function() {
    return new Ignore(identity4);
  }();

  // output/Affjax.ResponseHeader/index.js
  var show2 = /* @__PURE__ */ show(showString);
  var ResponseHeader = /* @__PURE__ */ function() {
    function ResponseHeader2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ResponseHeader2.create = function(value0) {
      return function(value1) {
        return new ResponseHeader2(value0, value1);
      };
    };
    return ResponseHeader2;
  }();
  var showResponseHeader = {
    show: function(v) {
      return "(ResponseHeader " + (show2(v.value0) + (" " + (show2(v.value1) + ")")));
    }
  };

  // output/Control.Bind/foreign.js
  var arrayBind = function(arr) {
    return function(f) {
      var result = [];
      for (var i2 = 0, l = arr.length; i2 < l; i2++) {
        Array.prototype.push.apply(result, f(arr[i2]));
      }
      return result;
    };
  };

  // output/Control.Bind/index.js
  var discard = function(dict) {
    return dict.discard;
  };
  var bindArray = {
    bind: arrayBind,
    Apply0: function() {
      return applyArray;
    }
  };
  var bind = function(dict) {
    return dict.bind;
  };
  var bindFlipped = function(dictBind) {
    return flip(bind(dictBind));
  };
  var composeKleisliFlipped = function(dictBind) {
    var bindFlipped14 = bindFlipped(dictBind);
    return function(f) {
      return function(g) {
        return function(a2) {
          return bindFlipped14(f)(g(a2));
        };
      };
    };
  };
  var composeKleisli = function(dictBind) {
    var bind112 = bind(dictBind);
    return function(f) {
      return function(g) {
        return function(a2) {
          return bind112(f(a2))(g);
        };
      };
    };
  };
  var discardUnit = {
    discard: function(dictBind) {
      return bind(dictBind);
    }
  };

  // output/Data.Either/index.js
  var Left = /* @__PURE__ */ function() {
    function Left2(value0) {
      this.value0 = value0;
    }
    ;
    Left2.create = function(value0) {
      return new Left2(value0);
    };
    return Left2;
  }();
  var Right = /* @__PURE__ */ function() {
    function Right2(value0) {
      this.value0 = value0;
    }
    ;
    Right2.create = function(value0) {
      return new Right2(value0);
    };
    return Right2;
  }();
  var note = function(a2) {
    return maybe(new Left(a2))(Right.create);
  };
  var functorEither = {
    map: function(f) {
      return function(m) {
        if (m instanceof Left) {
          return new Left(m.value0);
        }
        ;
        if (m instanceof Right) {
          return new Right(f(m.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
      };
    }
  };
  var map3 = /* @__PURE__ */ map(functorEither);
  var either = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }
        ;
        if (v2 instanceof Right) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var hush = /* @__PURE__ */ function() {
    return either($$const(Nothing.value))(Just.create);
  }();
  var isLeft = /* @__PURE__ */ either(/* @__PURE__ */ $$const(true))(/* @__PURE__ */ $$const(false));
  var applyEither = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Left) {
          return new Left(v.value0);
        }
        ;
        if (v instanceof Right) {
          return map3(v.value0)(v1);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorEither;
    }
  };
  var bindEither = {
    bind: /* @__PURE__ */ either(function(e) {
      return function(v) {
        return new Left(e);
      };
    })(function(a2) {
      return function(f) {
        return f(a2);
      };
    }),
    Apply0: function() {
      return applyEither;
    }
  };
  var applicativeEither = /* @__PURE__ */ function() {
    return {
      pure: Right.create,
      Apply0: function() {
        return applyEither;
      }
    };
  }();

  // output/Effect/foreign.js
  var pureE = function(a2) {
    return function() {
      return a2;
    };
  };
  var bindE = function(a2) {
    return function(f) {
      return function() {
        return f(a2())();
      };
    };
  };

  // output/Control.Monad/index.js
  var unlessM = function(dictMonad) {
    var bind23 = bind(dictMonad.Bind1());
    var unless2 = unless(dictMonad.Applicative0());
    return function(mb) {
      return function(m) {
        return bind23(mb)(function(b2) {
          return unless2(b2)(m);
        });
      };
    };
  };
  var ap = function(dictMonad) {
    var bind23 = bind(dictMonad.Bind1());
    var pure29 = pure(dictMonad.Applicative0());
    return function(f) {
      return function(a2) {
        return bind23(f)(function(f$prime) {
          return bind23(a2)(function(a$prime) {
            return pure29(f$prime(a$prime));
          });
        });
      };
    };
  };

  // output/Data.EuclideanRing/foreign.js
  var intDegree = function(x2) {
    return Math.min(Math.abs(x2), 2147483647);
  };
  var intDiv = function(x2) {
    return function(y2) {
      if (y2 === 0)
        return 0;
      return y2 > 0 ? Math.floor(x2 / y2) : -Math.floor(x2 / -y2);
    };
  };
  var intMod = function(x2) {
    return function(y2) {
      if (y2 === 0)
        return 0;
      var yy = Math.abs(y2);
      return (x2 % yy + yy) % yy;
    };
  };

  // output/Data.CommutativeRing/index.js
  var commutativeRingInt = {
    Ring0: function() {
      return ringInt;
    }
  };

  // output/Data.EuclideanRing/index.js
  var mod = function(dict) {
    return dict.mod;
  };
  var euclideanRingInt = {
    degree: intDegree,
    div: intDiv,
    mod: intMod,
    CommutativeRing0: function() {
      return commutativeRingInt;
    }
  };
  var div = function(dict) {
    return dict.div;
  };

  // output/Data.Monoid/index.js
  var monoidString = {
    mempty: "",
    Semigroup0: function() {
      return semigroupString;
    }
  };
  var monoidArray = {
    mempty: [],
    Semigroup0: function() {
      return semigroupArray;
    }
  };
  var mempty = function(dict) {
    return dict.mempty;
  };
  var monoidFn = function(dictMonoid) {
    var mempty12 = mempty(dictMonoid);
    var semigroupFn2 = semigroupFn(dictMonoid.Semigroup0());
    return {
      mempty: function(v) {
        return mempty12;
      },
      Semigroup0: function() {
        return semigroupFn2;
      }
    };
  };

  // output/Effect/index.js
  var $runtime_lazy = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var monadEffect = {
    Applicative0: function() {
      return applicativeEffect;
    },
    Bind1: function() {
      return bindEffect;
    }
  };
  var bindEffect = {
    bind: bindE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var applicativeEffect = {
    pure: pureE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
      map: liftA1(applicativeEffect)
    };
  });
  var $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
      apply: ap(monadEffect),
      Functor0: function() {
        return $lazy_functorEffect(0);
      }
    };
  });
  var functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);

  // output/Effect.Exception/foreign.js
  function error(msg) {
    return new Error(msg);
  }
  function message(e) {
    return e.message;
  }
  function throwException(e) {
    return function() {
      throw e;
    };
  }

  // output/Effect.Exception/index.js
  var $$throw = function($4) {
    return throwException(error($4));
  };

  // output/Control.Monad.Error.Class/index.js
  var throwError = function(dict) {
    return dict.throwError;
  };
  var catchError = function(dict) {
    return dict.catchError;
  };
  var $$try = function(dictMonadError) {
    var catchError1 = catchError(dictMonadError);
    var Monad0 = dictMonadError.MonadThrow0().Monad0();
    var map45 = map(Monad0.Bind1().Apply0().Functor0());
    var pure29 = pure(Monad0.Applicative0());
    return function(a2) {
      return catchError1(map45(Right.create)(a2))(function($52) {
        return pure29(Left.create($52));
      });
    };
  };

  // output/Data.Identity/index.js
  var Identity = function(x2) {
    return x2;
  };
  var functorIdentity = {
    map: function(f) {
      return function(m) {
        return f(m);
      };
    }
  };
  var applyIdentity = {
    apply: function(v) {
      return function(v1) {
        return v(v1);
      };
    },
    Functor0: function() {
      return functorIdentity;
    }
  };
  var bindIdentity = {
    bind: function(v) {
      return function(f) {
        return f(v);
      };
    },
    Apply0: function() {
      return applyIdentity;
    }
  };
  var applicativeIdentity = {
    pure: Identity,
    Apply0: function() {
      return applyIdentity;
    }
  };
  var monadIdentity = {
    Applicative0: function() {
      return applicativeIdentity;
    },
    Bind1: function() {
      return bindIdentity;
    }
  };

  // output/Effect.Ref/foreign.js
  var _new = function(val2) {
    return function() {
      return { value: val2 };
    };
  };
  var read = function(ref2) {
    return function() {
      return ref2.value;
    };
  };
  var modifyImpl = function(f) {
    return function(ref2) {
      return function() {
        var t = f(ref2.value);
        ref2.value = t.state;
        return t.value;
      };
    };
  };
  var write = function(val2) {
    return function(ref2) {
      return function() {
        ref2.value = val2;
      };
    };
  };

  // output/Effect.Ref/index.js
  var $$void2 = /* @__PURE__ */ $$void(functorEffect);
  var $$new = _new;
  var modify$prime = modifyImpl;
  var modify = function(f) {
    return modify$prime(function(s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var modify_ = function(f) {
    return function(s) {
      return $$void2(modify(f)(s));
    };
  };

  // output/Control.Monad.Rec.Class/index.js
  var bindFlipped2 = /* @__PURE__ */ bindFlipped(bindEffect);
  var map4 = /* @__PURE__ */ map(functorEffect);
  var Loop = /* @__PURE__ */ function() {
    function Loop2(value0) {
      this.value0 = value0;
    }
    ;
    Loop2.create = function(value0) {
      return new Loop2(value0);
    };
    return Loop2;
  }();
  var Done = /* @__PURE__ */ function() {
    function Done2(value0) {
      this.value0 = value0;
    }
    ;
    Done2.create = function(value0) {
      return new Done2(value0);
    };
    return Done2;
  }();
  var tailRecM = function(dict) {
    return dict.tailRecM;
  };
  var tailRec = function(f) {
    var go2 = function($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
        if (v instanceof Loop) {
          $copy_v = f(v.value0);
          return;
        }
        ;
        if (v instanceof Done) {
          $tco_done = true;
          return v.value0;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 103, column 3 - line 103, column 25): " + [v.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    return function($85) {
      return go2(f($85));
    };
  };
  var monadRecIdentity = {
    tailRecM: function(f) {
      var runIdentity = function(v) {
        return v;
      };
      var $86 = tailRec(function($88) {
        return runIdentity(f($88));
      });
      return function($87) {
        return Identity($86($87));
      };
    },
    Monad0: function() {
      return monadIdentity;
    }
  };
  var monadRecEffect = {
    tailRecM: function(f) {
      return function(a2) {
        var fromDone = function(v) {
          if (v instanceof Done) {
            return v.value0;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 137, column 30 - line 137, column 44): " + [v.constructor.name]);
        };
        return function __do2() {
          var r = bindFlipped2($$new)(f(a2))();
          (function() {
            while (!function __do3() {
              var v = read(r)();
              if (v instanceof Loop) {
                var e = f(v.value0)();
                write(e)(r)();
                return false;
              }
              ;
              if (v instanceof Done) {
                return true;
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 128, column 22 - line 133, column 28): " + [v.constructor.name]);
            }()) {
            }
            ;
            return {};
          })();
          return map4(fromDone)(read(r))();
        };
      };
    },
    Monad0: function() {
      return monadEffect;
    }
  };
  var forever = function(dictMonadRec) {
    var tailRecM1 = tailRecM(dictMonadRec);
    var voidRight2 = voidRight(dictMonadRec.Monad0().Bind1().Apply0().Functor0());
    return function(ma) {
      return tailRecM1(function(u2) {
        return voidRight2(new Loop(u2))(ma);
      })(unit);
    };
  };
  var bifunctorStep = {
    bimap: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Loop) {
            return new Loop(v(v2.value0));
          }
          ;
          if (v2 instanceof Done) {
            return new Done(v1(v2.value0));
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 33, column 1 - line 35, column 34): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    }
  };

  // output/Control.Lazy/index.js
  var $runtime_lazy2 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var defer = function(dict) {
    return dict.defer;
  };
  var fix = function(dictLazy) {
    var defer1 = defer(dictLazy);
    return function(f) {
      var $lazy_go = $runtime_lazy2("go", "Control.Lazy", function() {
        return defer1(function(v) {
          return f($lazy_go(25));
        });
      });
      var go2 = $lazy_go(25);
      return go2;
    };
  };

  // output/Data.HeytingAlgebra/foreign.js
  var boolConj = function(b1) {
    return function(b2) {
      return b1 && b2;
    };
  };
  var boolDisj = function(b1) {
    return function(b2) {
      return b1 || b2;
    };
  };
  var boolNot = function(b2) {
    return !b2;
  };

  // output/Data.HeytingAlgebra/index.js
  var tt = function(dict) {
    return dict.tt;
  };
  var not = function(dict) {
    return dict.not;
  };
  var implies = function(dict) {
    return dict.implies;
  };
  var ff = function(dict) {
    return dict.ff;
  };
  var disj = function(dict) {
    return dict.disj;
  };
  var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a2) {
      return function(b2) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a2))(b2);
      };
    },
    conj: boolConj,
    disj: boolDisj,
    not: boolNot
  };
  var conj = function(dict) {
    return dict.conj;
  };
  var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    var ff1 = ff(dictHeytingAlgebra);
    var tt1 = tt(dictHeytingAlgebra);
    var implies1 = implies(dictHeytingAlgebra);
    var conj1 = conj(dictHeytingAlgebra);
    var disj1 = disj(dictHeytingAlgebra);
    var not1 = not(dictHeytingAlgebra);
    return {
      ff: function(v) {
        return ff1;
      },
      tt: function(v) {
        return tt1;
      },
      implies: function(f) {
        return function(g) {
          return function(a2) {
            return implies1(f(a2))(g(a2));
          };
        };
      },
      conj: function(f) {
        return function(g) {
          return function(a2) {
            return conj1(f(a2))(g(a2));
          };
        };
      },
      disj: function(f) {
        return function(g) {
          return function(a2) {
            return disj1(f(a2))(g(a2));
          };
        };
      },
      not: function(f) {
        return function(a2) {
          return not1(f(a2));
        };
      }
    };
  };

  // output/Data.Tuple/index.js
  var Tuple = /* @__PURE__ */ function() {
    function Tuple2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Tuple2.create = function(value0) {
      return function(value1) {
        return new Tuple2(value0, value1);
      };
    };
    return Tuple2;
  }();
  var snd = function(v) {
    return v.value1;
  };
  var functorTuple = {
    map: function(f) {
      return function(m) {
        return new Tuple(m.value0, f(m.value1));
      };
    }
  };
  var fst = function(v) {
    return v.value0;
  };
  var eqTuple = function(dictEq) {
    var eq18 = eq(dictEq);
    return function(dictEq1) {
      var eq19 = eq(dictEq1);
      return {
        eq: function(x2) {
          return function(y2) {
            return eq18(x2.value0)(y2.value0) && eq19(x2.value1)(y2.value1);
          };
        }
      };
    };
  };
  var ordTuple = function(dictOrd) {
    var compare9 = compare(dictOrd);
    var eqTuple1 = eqTuple(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare15 = compare(dictOrd1);
      var eqTuple22 = eqTuple1(dictOrd1.Eq0());
      return {
        compare: function(x2) {
          return function(y2) {
            var v = compare9(x2.value0)(y2.value0);
            if (v instanceof LT) {
              return LT.value;
            }
            ;
            if (v instanceof GT) {
              return GT.value;
            }
            ;
            return compare15(x2.value1)(y2.value1);
          };
        },
        Eq0: function() {
          return eqTuple22;
        }
      };
    };
  };

  // output/Control.Monad.State.Class/index.js
  var state = function(dict) {
    return dict.state;
  };
  var put = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(s) {
      return state1(function(v) {
        return new Tuple(unit, s);
      });
    };
  };
  var modify_2 = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        return new Tuple(unit, f(s));
      });
    };
  };
  var get = function(dictMonadState) {
    return state(dictMonadState)(function(s) {
      return new Tuple(s, s);
    });
  };

  // output/Effect.Class/index.js
  var monadEffectEffect = {
    liftEffect: /* @__PURE__ */ identity(categoryFn),
    Monad0: function() {
      return monadEffect;
    }
  };
  var liftEffect = function(dict) {
    return dict.liftEffect;
  };

  // output/Control.Monad.Except.Trans/index.js
  var map5 = /* @__PURE__ */ map(functorEither);
  var ExceptT = function(x2) {
    return x2;
  };
  var runExceptT = function(v) {
    return v;
  };
  var mapExceptT = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var functorExceptT = function(dictFunctor) {
    var map119 = map(dictFunctor);
    return {
      map: function(f) {
        return mapExceptT(map119(map5(f)));
      }
    };
  };
  var monadExceptT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeExceptT(dictMonad);
      },
      Bind1: function() {
        return bindExceptT(dictMonad);
      }
    };
  };
  var bindExceptT = function(dictMonad) {
    var bind23 = bind(dictMonad.Bind1());
    var pure29 = pure(dictMonad.Applicative0());
    return {
      bind: function(v) {
        return function(k) {
          return bind23(v)(either(function($187) {
            return pure29(Left.create($187));
          })(function(a2) {
            var v1 = k(a2);
            return v1;
          }));
        };
      },
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var applyExceptT = function(dictMonad) {
    var functorExceptT1 = functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadExceptT(dictMonad)),
      Functor0: function() {
        return functorExceptT1;
      }
    };
  };
  var applicativeExceptT = function(dictMonad) {
    return {
      pure: function() {
        var $188 = pure(dictMonad.Applicative0());
        return function($189) {
          return ExceptT($188(Right.create($189)));
        };
      }(),
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var monadThrowExceptT = function(dictMonad) {
    var monadExceptT1 = monadExceptT(dictMonad);
    return {
      throwError: function() {
        var $198 = pure(dictMonad.Applicative0());
        return function($199) {
          return ExceptT($198(Left.create($199)));
        };
      }(),
      Monad0: function() {
        return monadExceptT1;
      }
    };
  };
  var altExceptT = function(dictSemigroup) {
    var append10 = append(dictSemigroup);
    return function(dictMonad) {
      var Bind1 = dictMonad.Bind1();
      var bind23 = bind(Bind1);
      var pure29 = pure(dictMonad.Applicative0());
      var functorExceptT1 = functorExceptT(Bind1.Apply0().Functor0());
      return {
        alt: function(v) {
          return function(v1) {
            return bind23(v)(function(rm) {
              if (rm instanceof Right) {
                return pure29(new Right(rm.value0));
              }
              ;
              if (rm instanceof Left) {
                return bind23(v1)(function(rn) {
                  if (rn instanceof Right) {
                    return pure29(new Right(rn.value0));
                  }
                  ;
                  if (rn instanceof Left) {
                    return pure29(new Left(append10(rm.value0)(rn.value0)));
                  }
                  ;
                  throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [rn.constructor.name]);
                });
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [rm.constructor.name]);
            });
          };
        },
        Functor0: function() {
          return functorExceptT1;
        }
      };
    };
  };

  // output/Control.Monad.Except/index.js
  var unwrap3 = /* @__PURE__ */ unwrap();
  var runExcept = function($3) {
    return unwrap3(runExceptT($3));
  };

  // output/Data.Argonaut.Core/foreign.js
  function id(x2) {
    return x2;
  }
  var jsonNull = null;
  function stringify(j) {
    return JSON.stringify(j);
  }
  function stringifyWithIndent(i2) {
    return function(j) {
      return JSON.stringify(j, null, i2);
    };
  }
  function isArray(a2) {
    return Object.prototype.toString.call(a2) === "[object Array]";
  }
  function _caseJson(isNull2, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null)
      return isNull2();
    else if (typeof j === "boolean")
      return isBool(j);
    else if (typeof j === "number")
      return isNum(j);
    else if (typeof j === "string")
      return isStr(j);
    else if (Object.prototype.toString.call(j) === "[object Array]")
      return isArr(j);
    else
      return isObj(j);
  }
  function _compare(EQ2, GT2, LT2, a2, b2) {
    if (a2 == null) {
      if (b2 == null)
        return EQ2;
      else
        return LT2;
    } else if (typeof a2 === "boolean") {
      if (typeof b2 === "boolean") {
        if (a2 === b2)
          return EQ2;
        else if (a2 === false)
          return LT2;
        else
          return GT2;
      } else if (b2 == null)
        return GT2;
      else
        return LT2;
    } else if (typeof a2 === "number") {
      if (typeof b2 === "number") {
        if (a2 === b2)
          return EQ2;
        else if (a2 < b2)
          return LT2;
        else
          return GT2;
      } else if (b2 == null)
        return GT2;
      else if (typeof b2 === "boolean")
        return GT2;
      else
        return LT2;
    } else if (typeof a2 === "string") {
      if (typeof b2 === "string") {
        if (a2 === b2)
          return EQ2;
        else if (a2 < b2)
          return LT2;
        else
          return GT2;
      } else if (b2 == null)
        return GT2;
      else if (typeof b2 === "boolean")
        return GT2;
      else if (typeof b2 === "number")
        return GT2;
      else
        return LT2;
    } else if (isArray(a2)) {
      if (isArray(b2)) {
        for (var i2 = 0; i2 < Math.min(a2.length, b2.length); i2++) {
          var ca = _compare(EQ2, GT2, LT2, a2[i2], b2[i2]);
          if (ca !== EQ2)
            return ca;
        }
        if (a2.length === b2.length)
          return EQ2;
        else if (a2.length < b2.length)
          return LT2;
        else
          return GT2;
      } else if (b2 == null)
        return GT2;
      else if (typeof b2 === "boolean")
        return GT2;
      else if (typeof b2 === "number")
        return GT2;
      else if (typeof b2 === "string")
        return GT2;
      else
        return LT2;
    } else {
      if (b2 == null)
        return GT2;
      else if (typeof b2 === "boolean")
        return GT2;
      else if (typeof b2 === "number")
        return GT2;
      else if (typeof b2 === "string")
        return GT2;
      else if (isArray(b2))
        return GT2;
      else {
        var akeys = Object.keys(a2);
        var bkeys = Object.keys(b2);
        if (akeys.length < bkeys.length)
          return LT2;
        else if (akeys.length > bkeys.length)
          return GT2;
        var keys3 = akeys.concat(bkeys).sort();
        for (var j = 0; j < keys3.length; j++) {
          var k = keys3[j];
          if (a2[k] === void 0)
            return LT2;
          else if (b2[k] === void 0)
            return GT2;
          var ck = _compare(EQ2, GT2, LT2, a2[k], b2[k]);
          if (ck !== EQ2)
            return ck;
        }
        return EQ2;
      }
    }
  }

  // output/Foreign.Object/foreign.js
  function _copyST(m) {
    return function() {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  }
  var empty = {};
  function runST(f) {
    return f();
  }
  function all(f) {
    return function(m) {
      for (var k in m) {
        if (hasOwnProperty.call(m, k) && !f(k)(m[k]))
          return false;
      }
      return true;
    };
  }
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  function toArrayWithKey(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
  var keys = Object.keys || toArrayWithKey(function(k) {
    return function() {
      return k;
    };
  });

  // output/Control.Monad.ST.Internal/foreign.js
  var map_ = function(f) {
    return function(a2) {
      return function() {
        return f(a2());
      };
    };
  };
  var pure_ = function(a2) {
    return function() {
      return a2;
    };
  };
  var bind_ = function(a2) {
    return function(f) {
      return function() {
        return f(a2())();
      };
    };
  };
  var foreach = function(as) {
    return function(f) {
      return function() {
        for (var i2 = 0, l = as.length; i2 < l; i2++) {
          f(as[i2])();
        }
      };
    };
  };

  // output/Control.Monad.ST.Internal/index.js
  var $runtime_lazy3 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var functorST = {
    map: map_
  };
  var monadST = {
    Applicative0: function() {
      return applicativeST;
    },
    Bind1: function() {
      return bindST;
    }
  };
  var bindST = {
    bind: bind_,
    Apply0: function() {
      return $lazy_applyST(0);
    }
  };
  var applicativeST = {
    pure: pure_,
    Apply0: function() {
      return $lazy_applyST(0);
    }
  };
  var $lazy_applyST = /* @__PURE__ */ $runtime_lazy3("applyST", "Control.Monad.ST.Internal", function() {
    return {
      apply: ap(monadST),
      Functor0: function() {
        return functorST;
      }
    };
  });

  // output/Data.Array/foreign.js
  var replicateFill = function(count, value17) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value17);
  };
  var replicatePolyfill = function(count, value17) {
    var result = [];
    var n = 0;
    for (var i2 = 0; i2 < count; i2++) {
      result[n++] = value17;
    }
    return result;
  };
  var replicateImpl = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
  var fromFoldableImpl = /* @__PURE__ */ function() {
    function Cons3(head6, tail2) {
      this.head = head6;
      this.tail = tail2;
    }
    var emptyList = {};
    function curryCons(head6) {
      return function(tail2) {
        return new Cons3(head6, tail2);
      };
    }
    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }
    return function(foldr5, xs) {
      return listToArray(foldr5(curryCons)(emptyList)(xs));
    };
  }();
  var length = function(xs) {
    return xs.length;
  };
  var unconsImpl = function(empty8, next, xs) {
    return xs.length === 0 ? empty8({}) : next(xs[0])(xs.slice(1));
  };
  var indexImpl = function(just, nothing, xs, i2) {
    return i2 < 0 || i2 >= xs.length ? nothing : just(xs[i2]);
  };
  var findIndexImpl = function(just, nothing, f, xs) {
    for (var i2 = 0, l = xs.length; i2 < l; i2++) {
      if (f(xs[i2]))
        return just(i2);
    }
    return nothing;
  };
  var _deleteAt = function(just, nothing, i2, l) {
    if (i2 < 0 || i2 >= l.length)
      return nothing;
    var l1 = l.slice();
    l1.splice(i2, 1);
    return just(l1);
  };
  var _updateAt = function(just, nothing, i2, a2, l) {
    if (i2 < 0 || i2 >= l.length)
      return nothing;
    var l1 = l.slice();
    l1[i2] = a2;
    return just(l1);
  };
  var sortByImpl = /* @__PURE__ */ function() {
    function mergeFromTo(compare9, fromOrdering, xs1, xs2, from3, to2) {
      var mid;
      var i2;
      var j;
      var k;
      var x2;
      var y2;
      var c;
      mid = from3 + (to2 - from3 >> 1);
      if (mid - from3 > 1)
        mergeFromTo(compare9, fromOrdering, xs2, xs1, from3, mid);
      if (to2 - mid > 1)
        mergeFromTo(compare9, fromOrdering, xs2, xs1, mid, to2);
      i2 = from3;
      j = mid;
      k = from3;
      while (i2 < mid && j < to2) {
        x2 = xs2[i2];
        y2 = xs2[j];
        c = fromOrdering(compare9(x2)(y2));
        if (c > 0) {
          xs1[k++] = y2;
          ++j;
        } else {
          xs1[k++] = x2;
          ++i2;
        }
      }
      while (i2 < mid) {
        xs1[k++] = xs2[i2++];
      }
      while (j < to2) {
        xs1[k++] = xs2[j++];
      }
    }
    return function(compare9, fromOrdering, xs) {
      var out;
      if (xs.length < 2)
        return xs;
      out = xs.slice(0);
      mergeFromTo(compare9, fromOrdering, out, xs.slice(0), 0, xs.length);
      return out;
    };
  }();
  var sliceImpl = function(s, e, l) {
    return l.slice(s, e);
  };
  var zipWithImpl = function(f, xs, ys) {
    var l = xs.length < ys.length ? xs.length : ys.length;
    var result = new Array(l);
    for (var i2 = 0; i2 < l; i2++) {
      result[i2] = f(xs[i2])(ys[i2]);
    }
    return result;
  };
  var unsafeIndexImpl = function(xs, n) {
    return xs[n];
  };

  // output/Data.Array.ST/foreign.js
  function unsafeFreezeThawImpl(xs) {
    return xs;
  }
  var unsafeFreezeImpl = unsafeFreezeThawImpl;
  function copyImpl(xs) {
    return xs.slice();
  }
  var thawImpl = copyImpl;
  var pushImpl = function(a2, xs) {
    return xs.push(a2);
  };

  // output/Control.Monad.ST.Uncurried/foreign.js
  var runSTFn1 = function runSTFn12(fn) {
    return function(a2) {
      return function() {
        return fn(a2);
      };
    };
  };
  var runSTFn2 = function runSTFn22(fn) {
    return function(a2) {
      return function(b2) {
        return function() {
          return fn(a2, b2);
        };
      };
    };
  };

  // output/Data.Array.ST/index.js
  var unsafeFreeze = /* @__PURE__ */ runSTFn1(unsafeFreezeImpl);
  var thaw = /* @__PURE__ */ runSTFn1(thawImpl);
  var withArray = function(f) {
    return function(xs) {
      return function __do2() {
        var result = thaw(xs)();
        f(result)();
        return unsafeFreeze(result)();
      };
    };
  };
  var push = /* @__PURE__ */ runSTFn2(pushImpl);

  // output/Data.Foldable/foreign.js
  var foldrArray = function(f) {
    return function(init3) {
      return function(xs) {
        var acc = init3;
        var len = xs.length;
        for (var i2 = len - 1; i2 >= 0; i2--) {
          acc = f(xs[i2])(acc);
        }
        return acc;
      };
    };
  };
  var foldlArray = function(f) {
    return function(init3) {
      return function(xs) {
        var acc = init3;
        var len = xs.length;
        for (var i2 = 0; i2 < len; i2++) {
          acc = f(acc)(xs[i2]);
        }
        return acc;
      };
    };
  };

  // output/Control.Plus/index.js
  var empty2 = function(dict) {
    return dict.empty;
  };

  // output/Data.Bifunctor/index.js
  var bimap = function(dict) {
    return dict.bimap;
  };

  // output/Data.Maybe.First/index.js
  var First = function(x2) {
    return x2;
  };
  var semigroupFirst = {
    append: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return v;
        }
        ;
        return v1;
      };
    }
  };
  var monoidFirst = /* @__PURE__ */ function() {
    return {
      mempty: Nothing.value,
      Semigroup0: function() {
        return semigroupFirst;
      }
    };
  }();

  // output/Data.Monoid.Conj/index.js
  var Conj = function(x2) {
    return x2;
  };
  var semigroupConj = function(dictHeytingAlgebra) {
    var conj2 = conj(dictHeytingAlgebra);
    return {
      append: function(v) {
        return function(v1) {
          return conj2(v)(v1);
        };
      }
    };
  };
  var monoidConj = function(dictHeytingAlgebra) {
    var semigroupConj1 = semigroupConj(dictHeytingAlgebra);
    return {
      mempty: tt(dictHeytingAlgebra),
      Semigroup0: function() {
        return semigroupConj1;
      }
    };
  };

  // output/Data.Monoid.Disj/index.js
  var Disj = function(x2) {
    return x2;
  };
  var semigroupDisj = function(dictHeytingAlgebra) {
    var disj2 = disj(dictHeytingAlgebra);
    return {
      append: function(v) {
        return function(v1) {
          return disj2(v)(v1);
        };
      }
    };
  };
  var monoidDisj = function(dictHeytingAlgebra) {
    var semigroupDisj1 = semigroupDisj(dictHeytingAlgebra);
    return {
      mempty: ff(dictHeytingAlgebra),
      Semigroup0: function() {
        return semigroupDisj1;
      }
    };
  };

  // output/Data.Monoid.Endo/index.js
  var Endo = function(x2) {
    return x2;
  };
  var semigroupEndo = function(dictSemigroupoid) {
    var compose2 = compose(dictSemigroupoid);
    return {
      append: function(v) {
        return function(v1) {
          return compose2(v)(v1);
        };
      }
    };
  };
  var monoidEndo = function(dictCategory) {
    var semigroupEndo1 = semigroupEndo(dictCategory.Semigroupoid0());
    return {
      mempty: identity(dictCategory),
      Semigroup0: function() {
        return semigroupEndo1;
      }
    };
  };

  // output/Data.Foldable/index.js
  var identity5 = /* @__PURE__ */ identity(categoryFn);
  var alaF2 = /* @__PURE__ */ alaF()()()();
  var foldr = function(dict) {
    return dict.foldr;
  };
  var traverse_ = function(dictApplicative) {
    var applySecond7 = applySecond(dictApplicative.Apply0());
    var pure29 = pure(dictApplicative);
    return function(dictFoldable) {
      var foldr22 = foldr(dictFoldable);
      return function(f) {
        return foldr22(function($454) {
          return applySecond7(f($454));
        })(pure29(unit));
      };
    };
  };
  var for_ = function(dictApplicative) {
    var traverse_14 = traverse_(dictApplicative);
    return function(dictFoldable) {
      return flip(traverse_14(dictFoldable));
    };
  };
  var foldl = function(dict) {
    return dict.foldl;
  };
  var intercalate = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictMonoid) {
      var append10 = append(dictMonoid.Semigroup0());
      var mempty9 = mempty(dictMonoid);
      return function(sep) {
        return function(xs) {
          var go2 = function(v) {
            return function(v1) {
              if (v.init) {
                return {
                  init: false,
                  acc: v1
                };
              }
              ;
              return {
                init: false,
                acc: append10(v.acc)(append10(sep)(v1))
              };
            };
          };
          return foldl22(go2)({
            init: true,
            acc: mempty9
          })(xs).acc;
        };
      };
    };
  };
  var length2 = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictSemiring) {
      var add1 = add(dictSemiring);
      var one2 = one(dictSemiring);
      return foldl22(function(c) {
        return function(v) {
          return add1(one2)(c);
        };
      })(zero(dictSemiring));
    };
  };
  var product = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictSemiring) {
      return foldl22(mul(dictSemiring))(one(dictSemiring));
    };
  };
  var sum = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictSemiring) {
      return foldl22(add(dictSemiring))(zero(dictSemiring));
    };
  };
  var foldableMaybe = {
    foldr: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v2 instanceof Just) {
            return v(v2.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldl: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v2 instanceof Just) {
            return v(v1)(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty9 = mempty(dictMonoid);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            return mempty9;
          }
          ;
          if (v1 instanceof Just) {
            return v(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldMapDefaultR = function(dictFoldable) {
    var foldr22 = foldr(dictFoldable);
    return function(dictMonoid) {
      var append10 = append(dictMonoid.Semigroup0());
      var mempty9 = mempty(dictMonoid);
      return function(f) {
        return foldr22(function(x2) {
          return function(acc) {
            return append10(f(x2))(acc);
          };
        })(mempty9);
      };
    };
  };
  var foldableArray = {
    foldr: foldrArray,
    foldl: foldlArray,
    foldMap: function(dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
    }
  };
  var foldMap = function(dict) {
    return dict.foldMap;
  };
  var fold = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    return function(dictMonoid) {
      return foldMap2(dictMonoid)(identity5);
    };
  };
  var find = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(p2) {
      var go2 = function(v) {
        return function(v1) {
          if (v instanceof Nothing && p2(v1)) {
            return new Just(v1);
          }
          ;
          return v;
        };
      };
      return foldl22(go2)(Nothing.value);
    };
  };
  var any = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
      return alaF2(Disj)(foldMap2(monoidDisj(dictHeytingAlgebra)));
    };
  };
  var elem = function(dictFoldable) {
    var any1 = any(dictFoldable)(heytingAlgebraBoolean);
    return function(dictEq) {
      var $462 = eq(dictEq);
      return function($463) {
        return any1($462($463));
      };
    };
  };
  var or = function(dictFoldable) {
    var any1 = any(dictFoldable);
    return function(dictHeytingAlgebra) {
      return any1(dictHeytingAlgebra)(identity5);
    };
  };
  var all2 = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
      return alaF2(Conj)(foldMap2(monoidConj(dictHeytingAlgebra)));
    };
  };
  var and = function(dictFoldable) {
    var all1 = all2(dictFoldable);
    return function(dictHeytingAlgebra) {
      return all1(dictHeytingAlgebra)(identity5);
    };
  };

  // output/Data.Function.Uncurried/foreign.js
  var mkFn3 = function(fn) {
    return function(a2, b2, c) {
      return fn(a2)(b2)(c);
    };
  };
  var mkFn5 = function(fn) {
    return function(a2, b2, c, d, e) {
      return fn(a2)(b2)(c)(d)(e);
    };
  };
  var runFn2 = function(fn) {
    return function(a2) {
      return function(b2) {
        return fn(a2, b2);
      };
    };
  };
  var runFn3 = function(fn) {
    return function(a2) {
      return function(b2) {
        return function(c) {
          return fn(a2, b2, c);
        };
      };
    };
  };
  var runFn4 = function(fn) {
    return function(a2) {
      return function(b2) {
        return function(c) {
          return function(d) {
            return fn(a2, b2, c, d);
          };
        };
      };
    };
  };
  var runFn5 = function(fn) {
    return function(a2) {
      return function(b2) {
        return function(c) {
          return function(d) {
            return function(e) {
              return fn(a2, b2, c, d, e);
            };
          };
        };
      };
    };
  };

  // output/Data.FunctorWithIndex/foreign.js
  var mapWithIndexArray = function(f) {
    return function(xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i2 = 0; i2 < l; i2++) {
        result[i2] = f(i2)(xs[i2]);
      }
      return result;
    };
  };

  // output/Data.Const/index.js
  var Const = function(x2) {
    return x2;
  };
  var functorConst = {
    map: function(f) {
      return function(m) {
        return m;
      };
    }
  };
  var applyConst = function(dictSemigroup) {
    var append16 = append(dictSemigroup);
    return {
      apply: function(v) {
        return function(v1) {
          return append16(v)(v1);
        };
      },
      Functor0: function() {
        return functorConst;
      }
    };
  };
  var applicativeConst = function(dictMonoid) {
    var mempty9 = mempty(dictMonoid);
    var applyConst1 = applyConst(dictMonoid.Semigroup0());
    return {
      pure: function(v) {
        return mempty9;
      },
      Apply0: function() {
        return applyConst1;
      }
    };
  };

  // output/Data.FunctorWithIndex/index.js
  var mapWithIndex = function(dict) {
    return dict.mapWithIndex;
  };
  var functorWithIndexArray = {
    mapWithIndex: mapWithIndexArray,
    Functor0: function() {
      return functorArray;
    }
  };

  // output/Data.Traversable/foreign.js
  var traverseArrayImpl = /* @__PURE__ */ function() {
    function array1(a2) {
      return [a2];
    }
    function array2(a2) {
      return function(b2) {
        return [a2, b2];
      };
    }
    function array3(a2) {
      return function(b2) {
        return function(c) {
          return [a2, b2, c];
        };
      };
    }
    function concat2(xs) {
      return function(ys) {
        return xs.concat(ys);
      };
    }
    return function(apply6) {
      return function(map45) {
        return function(pure29) {
          return function(f) {
            return function(array) {
              function go2(bot, top3) {
                switch (top3 - bot) {
                  case 0:
                    return pure29([]);
                  case 1:
                    return map45(array1)(f(array[bot]));
                  case 2:
                    return apply6(map45(array2)(f(array[bot])))(f(array[bot + 1]));
                  case 3:
                    return apply6(apply6(map45(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                  default:
                    var pivot = bot + Math.floor((top3 - bot) / 4) * 2;
                    return apply6(map45(concat2)(go2(bot, pivot)))(go2(pivot, top3));
                }
              }
              return go2(0, array.length);
            };
          };
        };
      };
    };
  }();

  // output/Data.Traversable/index.js
  var identity6 = /* @__PURE__ */ identity(categoryFn);
  var traverse = function(dict) {
    return dict.traverse;
  };
  var sequenceDefault = function(dictTraversable) {
    var traverse22 = traverse(dictTraversable);
    return function(dictApplicative) {
      return traverse22(dictApplicative)(identity6);
    };
  };
  var traversableArray = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      return traverseArrayImpl(apply(Apply0))(map(Apply0.Functor0()))(pure(dictApplicative));
    },
    sequence: function(dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
    },
    Functor0: function() {
      return functorArray;
    },
    Foldable1: function() {
      return foldableArray;
    }
  };

  // output/Data.Unfoldable/foreign.js
  var unfoldrArrayImpl = function(isNothing2) {
    return function(fromJust6) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value17 = b2;
              while (true) {
                var maybe2 = f(value17);
                if (isNothing2(maybe2))
                  return result;
                var tuple = fromJust6(maybe2);
                result.push(fst2(tuple));
                value17 = snd2(tuple);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/foreign.js
  var unfoldr1ArrayImpl = function(isNothing2) {
    return function(fromJust6) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value17 = b2;
              while (true) {
                var tuple = f(value17);
                result.push(fst2(tuple));
                var maybe2 = snd2(tuple);
                if (isNothing2(maybe2))
                  return result;
                value17 = fromJust6(maybe2);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/index.js
  var fromJust2 = /* @__PURE__ */ fromJust();
  var unfoldable1Array = {
    unfoldr1: /* @__PURE__ */ unfoldr1ArrayImpl(isNothing)(fromJust2)(fst)(snd)
  };

  // output/Data.Unfoldable/index.js
  var fromJust3 = /* @__PURE__ */ fromJust();
  var unfoldr = function(dict) {
    return dict.unfoldr;
  };
  var unfoldableArray = {
    unfoldr: /* @__PURE__ */ unfoldrArrayImpl(isNothing)(fromJust3)(fst)(snd),
    Unfoldable10: function() {
      return unfoldable1Array;
    }
  };

  // output/Data.Array/index.js
  var fromJust4 = /* @__PURE__ */ fromJust();
  var append2 = /* @__PURE__ */ append(semigroupArray);
  var zipWith = /* @__PURE__ */ runFn3(zipWithImpl);
  var zip = /* @__PURE__ */ function() {
    return zipWith(Tuple.create);
  }();
  var updateAt = /* @__PURE__ */ function() {
    return runFn5(_updateAt)(Just.create)(Nothing.value);
  }();
  var unsafeIndex = function() {
    return runFn2(unsafeIndexImpl);
  };
  var unsafeIndex1 = /* @__PURE__ */ unsafeIndex();
  var uncons = /* @__PURE__ */ function() {
    return runFn3(unconsImpl)($$const(Nothing.value))(function(x2) {
      return function(xs) {
        return new Just({
          head: x2,
          tail: xs
        });
      };
    });
  }();
  var toUnfoldable = function(dictUnfoldable) {
    var unfoldr3 = unfoldr(dictUnfoldable);
    return function(xs) {
      var len = length(xs);
      var f = function(i2) {
        if (i2 < len) {
          return new Just(new Tuple(unsafeIndex1(xs)(i2), i2 + 1 | 0));
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Array (line 163, column 3 - line 165, column 26): " + [i2.constructor.name]);
      };
      return unfoldr3(f)(0);
    };
  };
  var sortBy = function(comp) {
    return runFn3(sortByImpl)(comp)(function(v) {
      if (v instanceof GT) {
        return 1;
      }
      ;
      if (v instanceof EQ) {
        return 0;
      }
      ;
      if (v instanceof LT) {
        return -1 | 0;
      }
      ;
      throw new Error("Failed pattern match at Data.Array (line 897, column 38 - line 900, column 11): " + [v.constructor.name]);
    });
  };
  var sortWith = function(dictOrd) {
    var comparing2 = comparing(dictOrd);
    return function(f) {
      return sortBy(comparing2(f));
    };
  };
  var sort = function(dictOrd) {
    var compare9 = compare(dictOrd);
    return function(xs) {
      return sortBy(compare9)(xs);
    };
  };
  var snoc = function(xs) {
    return function(x2) {
      return withArray(push(x2))(xs)();
    };
  };
  var slice = /* @__PURE__ */ runFn3(sliceImpl);
  var take = function(n) {
    return function(xs) {
      var $152 = n < 1;
      if ($152) {
        return [];
      }
      ;
      return slice(0)(n)(xs);
    };
  };
  var singleton2 = function(a2) {
    return [a2];
  };
  var $$null = function(xs) {
    return length(xs) === 0;
  };
  var index = /* @__PURE__ */ function() {
    return runFn4(indexImpl)(Just.create)(Nothing.value);
  }();
  var modifyAt = function(i2) {
    return function(f) {
      return function(xs) {
        var go2 = function(x2) {
          return updateAt(i2)(f(x2))(xs);
        };
        return maybe(Nothing.value)(go2)(index(xs)(i2));
      };
    };
  };
  var fromFoldable = function(dictFoldable) {
    return runFn2(fromFoldableImpl)(foldr(dictFoldable));
  };
  var findIndex = /* @__PURE__ */ function() {
    return runFn4(findIndexImpl)(Just.create)(Nothing.value);
  }();
  var elemIndex = function(dictEq) {
    var eq24 = eq(dictEq);
    return function(x2) {
      return findIndex(function(v) {
        return eq24(v)(x2);
      });
    };
  };
  var notElem2 = function(dictEq) {
    var elemIndex1 = elemIndex(dictEq);
    return function(a2) {
      return function(arr) {
        return isNothing(elemIndex1(a2)(arr));
      };
    };
  };
  var elem2 = function(dictEq) {
    var elemIndex1 = elemIndex(dictEq);
    return function(a2) {
      return function(arr) {
        return isJust(elemIndex1(a2)(arr));
      };
    };
  };
  var deleteAt = /* @__PURE__ */ function() {
    return runFn4(_deleteAt)(Just.create)(Nothing.value);
  }();
  var deleteBy = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2.length === 0) {
          return [];
        }
        ;
        return maybe(v2)(function(i2) {
          return fromJust4(deleteAt(i2)(v2));
        })(findIndex(v(v1))(v2));
      };
    };
  };
  var cons = function(x2) {
    return function(xs) {
      return append2([x2])(xs);
    };
  };
  var some = function(dictAlternative) {
    var apply12 = apply(dictAlternative.Applicative0().Apply0());
    var map310 = map(dictAlternative.Plus1().Alt0().Functor0());
    return function(dictLazy) {
      var defer5 = defer(dictLazy);
      return function(v) {
        return apply12(map310(cons)(v))(defer5(function(v1) {
          return many(dictAlternative)(dictLazy)(v);
        }));
      };
    };
  };
  var many = function(dictAlternative) {
    var alt11 = alt(dictAlternative.Plus1().Alt0());
    var pure113 = pure(dictAlternative.Applicative0());
    return function(dictLazy) {
      return function(v) {
        return alt11(some(dictAlternative)(dictLazy)(v))(pure113([]));
      };
    };
  };
  var concatMap = /* @__PURE__ */ flip(/* @__PURE__ */ bind(bindArray));
  var mapMaybe = function(f) {
    return concatMap(function() {
      var $189 = maybe([])(singleton2);
      return function($190) {
        return $189(f($190));
      };
    }());
  };
  var catMaybes = /* @__PURE__ */ mapMaybe(/* @__PURE__ */ identity(categoryFn));

  // output/Data.FoldableWithIndex/index.js
  var foldrWithIndex = function(dict) {
    return dict.foldrWithIndex;
  };
  var foldlWithIndex = function(dict) {
    return dict.foldlWithIndex;
  };
  var foldMapWithIndex = function(dict) {
    return dict.foldMapWithIndex;
  };

  // output/Foreign.Object.ST/foreign.js
  var newImpl = function() {
    return {};
  };
  function poke2(k) {
    return function(v) {
      return function(m) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }
  var deleteImpl = function(k) {
    return function(m) {
      return function() {
        delete m[k];
        return m;
      };
    };
  };

  // output/Foreign.Object/index.js
  var sortWith2 = /* @__PURE__ */ sortWith(ordString);
  var bindFlipped3 = /* @__PURE__ */ bindFlipped(bindST);
  var $$void3 = /* @__PURE__ */ $$void(functorST);
  var ordTuple2 = /* @__PURE__ */ ordTuple(ordString);
  var toUnfoldable2 = function(dictUnfoldable) {
    var $89 = toUnfoldable(dictUnfoldable);
    var $90 = toArrayWithKey(Tuple.create);
    return function($91) {
      return $89($90($91));
    };
  };
  var toAscUnfoldable = function(dictUnfoldable) {
    var $92 = toUnfoldable(dictUnfoldable);
    var $93 = sortWith2(fst);
    var $94 = toArrayWithKey(Tuple.create);
    return function($95) {
      return $92($93($94($95)));
    };
  };
  var toAscArray = /* @__PURE__ */ toAscUnfoldable(unfoldableArray);
  var thawST = _copyST;
  var singleton3 = function(k) {
    return function(v) {
      return runST(bindFlipped3(poke2(k)(v))(newImpl));
    };
  };
  var mutate = function(f) {
    return function(m) {
      return runST(function __do2() {
        var s = thawST(m)();
        f(s)();
        return s;
      });
    };
  };
  var lookup = /* @__PURE__ */ function() {
    return runFn4(_lookup)(Nothing.value)(Just.create);
  }();
  var isSubmap = function(dictEq) {
    var eq18 = eq(dictEq);
    return function(m1) {
      return function(m2) {
        var f = function(k) {
          return function(v) {
            return _lookup(false, eq18(v), k, m2);
          };
        };
        return all(f)(m1);
      };
    };
  };
  var insert = function(k) {
    return function(v) {
      return mutate(poke2(k)(v));
    };
  };
  var fromFoldable2 = function(dictFoldable) {
    var fromFoldable12 = fromFoldable(dictFoldable);
    return function(l) {
      return runST(function __do2() {
        var s = newImpl();
        foreach(fromFoldable12(l))(function(v) {
          return $$void3(poke2(v.value0)(v.value1)(s));
        })();
        return s;
      });
    };
  };
  var eqObject = function(dictEq) {
    var isSubmap1 = isSubmap(dictEq);
    return {
      eq: function(m1) {
        return function(m2) {
          return isSubmap1(m1)(m2) && isSubmap1(m2)(m1);
        };
      }
    };
  };
  var ordObject = function(dictOrd) {
    var compare9 = compare(ordArray(ordTuple2(dictOrd)));
    var eqObject1 = eqObject(dictOrd.Eq0());
    return {
      compare: function(m1) {
        return function(m2) {
          return compare9(toAscArray(m1))(toAscArray(m2));
        };
      },
      Eq0: function() {
        return eqObject1;
      }
    };
  };
  var $$delete = function(k) {
    return mutate(deleteImpl(k));
  };
  var alter = function(f) {
    return function(k) {
      return function(m) {
        var v = f(lookup(k)(m));
        if (v instanceof Nothing) {
          return $$delete(k)(m);
        }
        ;
        if (v instanceof Just) {
          return insert(k)(v.value0)(m);
        }
        ;
        throw new Error("Failed pattern match at Foreign.Object (line 210, column 15 - line 212, column 25): " + [v.constructor.name]);
      };
    };
  };
  var update = function(f) {
    return function(k) {
      return function(m) {
        return alter(maybe(Nothing.value)(f))(k)(m);
      };
    };
  };

  // output/Data.Argonaut.Core/index.js
  var eq3 = /* @__PURE__ */ eq(eqOrdering);
  var verbJsonType = function(def) {
    return function(f) {
      return function(g) {
        return g(def)(f);
      };
    };
  };
  var toJsonType = /* @__PURE__ */ function() {
    return verbJsonType(Nothing.value)(Just.create);
  }();
  var jsonSingletonObject = function(key) {
    return function(val2) {
      return id(singleton3(key)(val2));
    };
  };
  var jsonEmptyObject = /* @__PURE__ */ id(empty);
  var ordJson = {
    compare: function(a2) {
      return function(b2) {
        return _compare(EQ.value, GT.value, LT.value, a2, b2);
      };
    },
    Eq0: function() {
      return eqJson;
    }
  };
  var eqJson = {
    eq: function(j1) {
      return function(j2) {
        return eq3(compare(ordJson)(j1)(j2))(EQ.value);
      };
    }
  };
  var caseJsonString = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), $$const(d), f, $$const(d), $$const(d), j);
      };
    };
  };
  var toString = /* @__PURE__ */ toJsonType(caseJsonString);
  var caseJsonObject = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), $$const(d), $$const(d), $$const(d), f, j);
      };
    };
  };
  var toObject = /* @__PURE__ */ toJsonType(caseJsonObject);
  var caseJsonNumber = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), f, $$const(d), $$const(d), $$const(d), j);
      };
    };
  };
  var toNumber = /* @__PURE__ */ toJsonType(caseJsonNumber);
  var caseJsonBoolean = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), f, $$const(d), $$const(d), $$const(d), $$const(d), j);
      };
    };
  };
  var toBoolean = /* @__PURE__ */ toJsonType(caseJsonBoolean);
  var caseJsonArray = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), $$const(d), $$const(d), f, $$const(d), j);
      };
    };
  };
  var toArray = /* @__PURE__ */ toJsonType(caseJsonArray);
  var caseJson = function(a2) {
    return function(b2) {
      return function(c) {
        return function(d) {
          return function(e) {
            return function(f) {
              return function(json2) {
                return _caseJson(a2, b2, c, d, e, f, json2);
              };
            };
          };
        };
      };
    };
  };

  // output/Data.Argonaut.Parser/foreign.js
  function _jsonParser(fail4, succ, s) {
    try {
      return succ(JSON.parse(s));
    } catch (e) {
      return fail4(e.message);
    }
  }

  // output/Data.Argonaut.Parser/index.js
  var jsonParser = function(j) {
    return _jsonParser(Left.create, Right.create, j);
  };

  // output/Data.String.Common/foreign.js
  var toLower = function(s) {
    return s.toLowerCase();
  };
  var toUpper = function(s) {
    return s.toUpperCase();
  };
  var joinWith = function(s) {
    return function(xs) {
      return xs.join(s);
    };
  };

  // output/Data.String.Common/index.js
  var $$null2 = function(s) {
    return s === "";
  };

  // output/JSURI/foreign.js
  function encodeURIComponent_to_RFC3986(input3) {
    return input3.replace(/[!'()*]/g, function(c) {
      return "%" + c.charCodeAt(0).toString(16);
    });
  }
  function _encodeFormURLComponent(fail4, succeed, input3) {
    try {
      return succeed(encodeURIComponent_to_RFC3986(encodeURIComponent(input3)).replace(/%20/g, "+"));
    } catch (err) {
      return fail4(err);
    }
  }

  // output/JSURI/index.js
  var encodeFormURLComponent = /* @__PURE__ */ function() {
    return runFn3(_encodeFormURLComponent)($$const(Nothing.value))(Just.create);
  }();

  // output/Data.FormURLEncoded/index.js
  var apply2 = /* @__PURE__ */ apply(applyMaybe);
  var map6 = /* @__PURE__ */ map(functorMaybe);
  var traverse2 = /* @__PURE__ */ traverse(traversableArray)(applicativeMaybe);
  var toArray2 = function(v) {
    return v;
  };
  var encode = /* @__PURE__ */ function() {
    var encodePart = function(v) {
      if (v.value1 instanceof Nothing) {
        return encodeFormURLComponent(v.value0);
      }
      ;
      if (v.value1 instanceof Just) {
        return apply2(map6(function(key) {
          return function(val2) {
            return key + ("=" + val2);
          };
        })(encodeFormURLComponent(v.value0)))(encodeFormURLComponent(v.value1.value0));
      }
      ;
      throw new Error("Failed pattern match at Data.FormURLEncoded (line 37, column 16 - line 39, column 114): " + [v.constructor.name]);
    };
    var $37 = map6(joinWith("&"));
    var $38 = traverse2(encodePart);
    return function($39) {
      return $37($38(toArray2($39)));
    };
  }();

  // output/Data.HTTP.Method/index.js
  var OPTIONS = /* @__PURE__ */ function() {
    function OPTIONS2() {
    }
    ;
    OPTIONS2.value = new OPTIONS2();
    return OPTIONS2;
  }();
  var GET = /* @__PURE__ */ function() {
    function GET3() {
    }
    ;
    GET3.value = new GET3();
    return GET3;
  }();
  var HEAD = /* @__PURE__ */ function() {
    function HEAD2() {
    }
    ;
    HEAD2.value = new HEAD2();
    return HEAD2;
  }();
  var POST = /* @__PURE__ */ function() {
    function POST3() {
    }
    ;
    POST3.value = new POST3();
    return POST3;
  }();
  var PUT = /* @__PURE__ */ function() {
    function PUT2() {
    }
    ;
    PUT2.value = new PUT2();
    return PUT2;
  }();
  var DELETE = /* @__PURE__ */ function() {
    function DELETE2() {
    }
    ;
    DELETE2.value = new DELETE2();
    return DELETE2;
  }();
  var TRACE = /* @__PURE__ */ function() {
    function TRACE2() {
    }
    ;
    TRACE2.value = new TRACE2();
    return TRACE2;
  }();
  var CONNECT = /* @__PURE__ */ function() {
    function CONNECT2() {
    }
    ;
    CONNECT2.value = new CONNECT2();
    return CONNECT2;
  }();
  var PROPFIND = /* @__PURE__ */ function() {
    function PROPFIND2() {
    }
    ;
    PROPFIND2.value = new PROPFIND2();
    return PROPFIND2;
  }();
  var PROPPATCH = /* @__PURE__ */ function() {
    function PROPPATCH2() {
    }
    ;
    PROPPATCH2.value = new PROPPATCH2();
    return PROPPATCH2;
  }();
  var MKCOL = /* @__PURE__ */ function() {
    function MKCOL2() {
    }
    ;
    MKCOL2.value = new MKCOL2();
    return MKCOL2;
  }();
  var COPY = /* @__PURE__ */ function() {
    function COPY2() {
    }
    ;
    COPY2.value = new COPY2();
    return COPY2;
  }();
  var MOVE = /* @__PURE__ */ function() {
    function MOVE2() {
    }
    ;
    MOVE2.value = new MOVE2();
    return MOVE2;
  }();
  var LOCK = /* @__PURE__ */ function() {
    function LOCK2() {
    }
    ;
    LOCK2.value = new LOCK2();
    return LOCK2;
  }();
  var UNLOCK = /* @__PURE__ */ function() {
    function UNLOCK2() {
    }
    ;
    UNLOCK2.value = new UNLOCK2();
    return UNLOCK2;
  }();
  var PATCH = /* @__PURE__ */ function() {
    function PATCH2() {
    }
    ;
    PATCH2.value = new PATCH2();
    return PATCH2;
  }();
  var CustomMethod = function(x2) {
    return x2;
  };
  var unCustomMethod = function(v) {
    return v;
  };
  var showMethod = {
    show: function(v) {
      if (v instanceof OPTIONS) {
        return "OPTIONS";
      }
      ;
      if (v instanceof GET) {
        return "GET";
      }
      ;
      if (v instanceof HEAD) {
        return "HEAD";
      }
      ;
      if (v instanceof POST) {
        return "POST";
      }
      ;
      if (v instanceof PUT) {
        return "PUT";
      }
      ;
      if (v instanceof DELETE) {
        return "DELETE";
      }
      ;
      if (v instanceof TRACE) {
        return "TRACE";
      }
      ;
      if (v instanceof CONNECT) {
        return "CONNECT";
      }
      ;
      if (v instanceof PROPFIND) {
        return "PROPFIND";
      }
      ;
      if (v instanceof PROPPATCH) {
        return "PROPPATCH";
      }
      ;
      if (v instanceof MKCOL) {
        return "MKCOL";
      }
      ;
      if (v instanceof COPY) {
        return "COPY";
      }
      ;
      if (v instanceof MOVE) {
        return "MOVE";
      }
      ;
      if (v instanceof LOCK) {
        return "LOCK";
      }
      ;
      if (v instanceof UNLOCK) {
        return "UNLOCK";
      }
      ;
      if (v instanceof PATCH) {
        return "PATCH";
      }
      ;
      throw new Error("Failed pattern match at Data.HTTP.Method (line 43, column 1 - line 59, column 23): " + [v.constructor.name]);
    }
  };
  var print = /* @__PURE__ */ either(/* @__PURE__ */ show(showMethod))(unCustomMethod);
  var parse = function(handleMethod) {
    return function(handleUnknown) {
      return function(s) {
        var v = toUpper(s);
        if (v === "OPTIONS") {
          return handleMethod(OPTIONS.value);
        }
        ;
        if (v === "GET") {
          return handleMethod(GET.value);
        }
        ;
        if (v === "HEAD") {
          return handleMethod(HEAD.value);
        }
        ;
        if (v === "POST") {
          return handleMethod(POST.value);
        }
        ;
        if (v === "PUT") {
          return handleMethod(PUT.value);
        }
        ;
        if (v === "DELETE") {
          return handleMethod(DELETE.value);
        }
        ;
        if (v === "TRACE") {
          return handleMethod(TRACE.value);
        }
        ;
        if (v === "CONNECT") {
          return handleMethod(CONNECT.value);
        }
        ;
        if (v === "PROPFIND") {
          return handleMethod(PROPFIND.value);
        }
        ;
        if (v === "PROPPATCH") {
          return handleMethod(PROPPATCH.value);
        }
        ;
        if (v === "MKCOL") {
          return handleMethod(MKCOL.value);
        }
        ;
        if (v === "COPY") {
          return handleMethod(COPY.value);
        }
        ;
        if (v === "MOVE") {
          return handleMethod(MOVE.value);
        }
        ;
        if (v === "LOCK") {
          return handleMethod(LOCK.value);
        }
        ;
        if (v === "UNLOCK") {
          return handleMethod(UNLOCK.value);
        }
        ;
        if (v === "PATCH") {
          return handleMethod(PATCH.value);
        }
        ;
        return handleUnknown(v);
      };
    };
  };
  var fromString = /* @__PURE__ */ function() {
    return parse(Left.create)(function($34) {
      return Right.create(CustomMethod($34));
    });
  }();

  // output/Data.NonEmpty/index.js
  var NonEmpty = /* @__PURE__ */ function() {
    function NonEmpty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NonEmpty2.create = function(value0) {
      return function(value1) {
        return new NonEmpty2(value0, value1);
      };
    };
    return NonEmpty2;
  }();
  var singleton4 = function(dictPlus) {
    var empty8 = empty2(dictPlus);
    return function(a2) {
      return new NonEmpty(a2, empty8);
    };
  };

  // output/Data.List.Types/index.js
  var identity7 = /* @__PURE__ */ identity(categoryFn);
  var Nil = /* @__PURE__ */ function() {
    function Nil3() {
    }
    ;
    Nil3.value = new Nil3();
    return Nil3;
  }();
  var Cons = /* @__PURE__ */ function() {
    function Cons3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Cons3.create = function(value0) {
      return function(value1) {
        return new Cons3(value0, value1);
      };
    };
    return Cons3;
  }();
  var NonEmptyList = function(x2) {
    return x2;
  };
  var toList = function(v) {
    return new Cons(v.value0, v.value1);
  };
  var listMap = function(f) {
    var chunkedRevMap = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {
            $tco_var_v = new Cons(v1, v);
            $copy_v1 = v1.value1.value1.value1;
            return;
          }
          ;
          var unrolledMap = function(v2) {
            if (v2 instanceof Cons && (v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil)) {
              return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));
            }
            ;
            if (v2 instanceof Cons && v2.value1 instanceof Nil) {
              return new Cons(f(v2.value0), Nil.value);
            }
            ;
            return Nil.value;
          };
          var reverseUnrolledMap = function($copy_v2) {
            return function($copy_v3) {
              var $tco_var_v2 = $copy_v2;
              var $tco_done1 = false;
              var $tco_result2;
              function $tco_loop2(v2, v3) {
                if (v2 instanceof Cons && (v2.value0 instanceof Cons && (v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons))) {
                  $tco_var_v2 = v2.value1;
                  $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));
                  return;
                }
                ;
                $tco_done1 = true;
                return v3;
              }
              ;
              while (!$tco_done1) {
                $tco_result2 = $tco_loop2($tco_var_v2, $copy_v3);
              }
              ;
              return $tco_result2;
            };
          };
          $tco_done = true;
          return reverseUnrolledMap(v)(unrolledMap(v1));
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return chunkedRevMap(Nil.value);
  };
  var functorList = {
    map: listMap
  };
  var foldableList = {
    foldr: function(f) {
      return function(b2) {
        var rev3 = function() {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return v;
                }
                ;
                if (v1 instanceof Cons) {
                  $tco_var_v = new Cons(v1.value0, v);
                  $copy_v1 = v1.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [v.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(Nil.value);
        }();
        var $284 = foldl(foldableList)(flip(f))(b2);
        return function($285) {
          return $284(rev3($285));
        };
      };
    },
    foldl: function(f) {
      var go2 = function($copy_b) {
        return function($copy_v) {
          var $tco_var_b = $copy_b;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(b2, v) {
            if (v instanceof Nil) {
              $tco_done1 = true;
              return b2;
            }
            ;
            if (v instanceof Cons) {
              $tco_var_b = f(b2)(v.value0);
              $copy_v = v.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_b, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    },
    foldMap: function(dictMonoid) {
      var append23 = append(dictMonoid.Semigroup0());
      var mempty9 = mempty(dictMonoid);
      return function(f) {
        return foldl(foldableList)(function(acc) {
          var $286 = append23(acc);
          return function($287) {
            return $286(f($287));
          };
        })(mempty9);
      };
    }
  };
  var foldl2 = /* @__PURE__ */ foldl(foldableList);
  var foldr2 = /* @__PURE__ */ foldr(foldableList);
  var foldableWithIndexList = {
    foldrWithIndex: function(f) {
      return function(b2) {
        return function(xs) {
          var v = function() {
            var rev3 = foldl2(function(v1) {
              return function(a2) {
                return new Tuple(v1.value0 + 1 | 0, new Cons(a2, v1.value1));
              };
            });
            return rev3(new Tuple(0, Nil.value))(xs);
          }();
          return snd(foldl2(function(v1) {
            return function(a2) {
              return new Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a2)(v1.value1));
            };
          })(new Tuple(v.value0, b2))(v.value1));
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(acc) {
        var $288 = foldl2(function(v) {
          return function(a2) {
            return new Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a2));
          };
        })(new Tuple(0, acc));
        return function($289) {
          return snd($288($289));
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      var append23 = append(dictMonoid.Semigroup0());
      var mempty9 = mempty(dictMonoid);
      return function(f) {
        return foldlWithIndex(foldableWithIndexList)(function(i2) {
          return function(acc) {
            var $290 = append23(acc);
            var $291 = f(i2);
            return function($292) {
              return $290($291($292));
            };
          };
        })(mempty9);
      };
    },
    Foldable0: function() {
      return foldableList;
    }
  };
  var foldrWithIndex1 = /* @__PURE__ */ foldrWithIndex(foldableWithIndexList);
  var functorWithIndexList = {
    mapWithIndex: function(f) {
      return foldrWithIndex1(function(i2) {
        return function(x2) {
          return function(acc) {
            return new Cons(f(i2)(x2), acc);
          };
        };
      })(Nil.value);
    },
    Functor0: function() {
      return functorList;
    }
  };
  var semigroupList = {
    append: function(xs) {
      return function(ys) {
        return foldr2(Cons.create)(ys)(xs);
      };
    }
  };
  var append1 = /* @__PURE__ */ append(semigroupList);
  var monoidList = /* @__PURE__ */ function() {
    return {
      mempty: Nil.value,
      Semigroup0: function() {
        return semigroupList;
      }
    };
  }();
  var semigroupNonEmptyList = {
    append: function(v) {
      return function(as$prime) {
        return new NonEmpty(v.value0, append1(v.value1)(toList(as$prime)));
      };
    }
  };
  var traversableList = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      var map119 = map(Apply0.Functor0());
      var lift22 = lift2(Apply0);
      var pure113 = pure(dictApplicative);
      return function(f) {
        var $301 = map119(foldl2(flip(Cons.create))(Nil.value));
        var $302 = foldl2(function(acc) {
          var $304 = lift22(flip(Cons.create))(acc);
          return function($305) {
            return $304(f($305));
          };
        })(pure113(Nil.value));
        return function($303) {
          return $301($302($303));
        };
      };
    },
    sequence: function(dictApplicative) {
      return traverse(traversableList)(dictApplicative)(identity7);
    },
    Functor0: function() {
      return functorList;
    },
    Foldable1: function() {
      return foldableList;
    }
  };
  var unfoldable1List = {
    unfoldr1: function(f) {
      return function(b2) {
        var go2 = function($copy_source) {
          return function($copy_memo) {
            var $tco_var_source = $copy_source;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(source3, memo) {
              var v = f(source3);
              if (v.value1 instanceof Just) {
                $tco_var_source = v.value1.value0;
                $copy_memo = new Cons(v.value0, memo);
                return;
              }
              ;
              if (v.value1 instanceof Nothing) {
                $tco_done = true;
                return foldl2(flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
              }
              ;
              throw new Error("Failed pattern match at Data.List.Types (line 135, column 22 - line 137, column 61): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_source, $copy_memo);
            }
            ;
            return $tco_result;
          };
        };
        return go2(b2)(Nil.value);
      };
    }
  };
  var unfoldableList = {
    unfoldr: function(f) {
      return function(b2) {
        var go2 = function($copy_source) {
          return function($copy_memo) {
            var $tco_var_source = $copy_source;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(source3, memo) {
              var v = f(source3);
              if (v instanceof Nothing) {
                $tco_done = true;
                return foldl2(flip(Cons.create))(Nil.value)(memo);
              }
              ;
              if (v instanceof Just) {
                $tco_var_source = v.value0.value1;
                $copy_memo = new Cons(v.value0.value0, memo);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.List.Types (line 142, column 22 - line 144, column 52): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_source, $copy_memo);
            }
            ;
            return $tco_result;
          };
        };
        return go2(b2)(Nil.value);
      };
    },
    Unfoldable10: function() {
      return unfoldable1List;
    }
  };
  var eq1List = {
    eq1: function(dictEq) {
      var eq18 = eq(dictEq);
      return function(xs) {
        return function(ys) {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              return function($copy_v2) {
                var $tco_var_v = $copy_v;
                var $tco_var_v1 = $copy_v1;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v, v1, v2) {
                  if (!v2) {
                    $tco_done = true;
                    return false;
                  }
                  ;
                  if (v instanceof Nil && v1 instanceof Nil) {
                    $tco_done = true;
                    return v2;
                  }
                  ;
                  if (v instanceof Cons && v1 instanceof Cons) {
                    $tco_var_v = v.value1;
                    $tco_var_v1 = v1.value1;
                    $copy_v2 = v2 && eq18(v1.value0)(v.value0);
                    return;
                  }
                  ;
                  $tco_done = true;
                  return false;
                }
                ;
                while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                }
                ;
                return $tco_result;
              };
            };
          };
          return go2(xs)(ys)(true);
        };
      };
    }
  };
  var eq12 = /* @__PURE__ */ eq1(eq1List);
  var eqList = function(dictEq) {
    return {
      eq: eq12(dictEq)
    };
  };
  var ord1List = {
    compare1: function(dictOrd) {
      var compare9 = compare(dictOrd);
      return function(xs) {
        return function(ys) {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                if (v instanceof Nil && v1 instanceof Nil) {
                  $tco_done = true;
                  return EQ.value;
                }
                ;
                if (v instanceof Nil) {
                  $tco_done = true;
                  return LT.value;
                }
                ;
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return GT.value;
                }
                ;
                if (v instanceof Cons && v1 instanceof Cons) {
                  var v2 = compare9(v.value0)(v1.value0);
                  if (v2 instanceof EQ) {
                    $tco_var_v = v.value1;
                    $copy_v1 = v1.value1;
                    return;
                  }
                  ;
                  $tco_done = true;
                  return v2;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 60, column 5 - line 60, column 20): " + [v.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(xs)(ys);
        };
      };
    },
    Eq10: function() {
      return eq1List;
    }
  };
  var compare12 = /* @__PURE__ */ compare1(ord1List);
  var ordList = function(dictOrd) {
    var eqList1 = eqList(dictOrd.Eq0());
    return {
      compare: compare12(dictOrd),
      Eq0: function() {
        return eqList1;
      }
    };
  };
  var altList = {
    alt: append1,
    Functor0: function() {
      return functorList;
    }
  };
  var plusList = /* @__PURE__ */ function() {
    return {
      empty: Nil.value,
      Alt0: function() {
        return altList;
      }
    };
  }();

  // output/Data.List.Internal/index.js
  var Leaf = /* @__PURE__ */ function() {
    function Leaf3() {
    }
    ;
    Leaf3.value = new Leaf3();
    return Leaf3;
  }();
  var Two = /* @__PURE__ */ function() {
    function Two2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Two2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Two2(value0, value1, value22);
        };
      };
    };
    return Two2;
  }();
  var Three = /* @__PURE__ */ function() {
    function Three2(value0, value1, value22, value32, value42) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
    }
    ;
    Three2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return new Three2(value0, value1, value22, value32, value42);
            };
          };
        };
      };
    };
    return Three2;
  }();
  var TwoLeft = /* @__PURE__ */ function() {
    function TwoLeft2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TwoLeft2.create = function(value0) {
      return function(value1) {
        return new TwoLeft2(value0, value1);
      };
    };
    return TwoLeft2;
  }();
  var TwoRight = /* @__PURE__ */ function() {
    function TwoRight2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TwoRight2.create = function(value0) {
      return function(value1) {
        return new TwoRight2(value0, value1);
      };
    };
    return TwoRight2;
  }();
  var ThreeLeft = /* @__PURE__ */ function() {
    function ThreeLeft2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    ThreeLeft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new ThreeLeft2(value0, value1, value22, value32);
          };
        };
      };
    };
    return ThreeLeft2;
  }();
  var ThreeMiddle = /* @__PURE__ */ function() {
    function ThreeMiddle2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    ThreeMiddle2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new ThreeMiddle2(value0, value1, value22, value32);
          };
        };
      };
    };
    return ThreeMiddle2;
  }();
  var ThreeRight = /* @__PURE__ */ function() {
    function ThreeRight2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    ThreeRight2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new ThreeRight2(value0, value1, value22, value32);
          };
        };
      };
    };
    return ThreeRight2;
  }();
  var KickUp = /* @__PURE__ */ function() {
    function KickUp2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    KickUp2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new KickUp2(value0, value1, value22);
        };
      };
    };
    return KickUp2;
  }();
  var fromZipper = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v instanceof Nil) {
          $tco_done = true;
          return v1;
        }
        ;
        if (v instanceof Cons) {
          if (v.value0 instanceof TwoLeft) {
            $tco_var_v = v.value1;
            $copy_v1 = new Two(v1, v.value0.value0, v.value0.value1);
            return;
          }
          ;
          if (v.value0 instanceof TwoRight) {
            $tco_var_v = v.value1;
            $copy_v1 = new Two(v.value0.value0, v.value0.value1, v1);
            return;
          }
          ;
          if (v.value0 instanceof ThreeLeft) {
            $tco_var_v = v.value1;
            $copy_v1 = new Three(v1, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3);
            return;
          }
          ;
          if (v.value0 instanceof ThreeMiddle) {
            $tco_var_v = v.value1;
            $copy_v1 = new Three(v.value0.value0, v.value0.value1, v1, v.value0.value2, v.value0.value3);
            return;
          }
          ;
          if (v.value0 instanceof ThreeRight) {
            $tco_var_v = v.value1;
            $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v1);
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List.Internal (line 25, column 3 - line 30, column 76): " + [v.value0.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Data.List.Internal (line 22, column 1 - line 22, column 63): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  var insertAndLookupBy = function(comp) {
    return function(k) {
      return function(orig) {
        var up = function($copy_v) {
          return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
              if (v instanceof Nil) {
                $tco_done = true;
                return new Two(v1.value0, v1.value1, v1.value2);
              }
              ;
              if (v instanceof Cons) {
                if (v.value0 instanceof TwoLeft) {
                  $tco_done = true;
                  return fromZipper(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v.value0.value0, v.value0.value1));
                }
                ;
                if (v.value0 instanceof TwoRight) {
                  $tco_done = true;
                  return fromZipper(v.value1)(new Three(v.value0.value0, v.value0.value1, v1.value0, v1.value1, v1.value2));
                }
                ;
                if (v.value0 instanceof ThreeLeft) {
                  $tco_var_v = v.value1;
                  $copy_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2), v.value0.value0, new Two(v.value0.value1, v.value0.value2, v.value0.value3));
                  return;
                }
                ;
                if (v.value0 instanceof ThreeMiddle) {
                  $tco_var_v = v.value1;
                  $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v1.value0), v1.value1, new Two(v1.value2, v.value0.value2, v.value0.value3));
                  return;
                }
                ;
                if (v.value0 instanceof ThreeRight) {
                  $tco_var_v = v.value1;
                  $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2), v.value0.value3, new Two(v1.value0, v1.value1, v1.value2));
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Internal (line 58, column 5 - line 63, column 90): " + [v.value0.constructor.name, v1.constructor.name]);
              }
              ;
              throw new Error("Failed pattern match at Data.List.Internal (line 55, column 3 - line 55, column 50): " + [v.constructor.name, v1.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $copy_v1);
            }
            ;
            return $tco_result;
          };
        };
        var down = function($copy_v) {
          return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(v, v1) {
              if (v1 instanceof Leaf) {
                $tco_done1 = true;
                return {
                  found: false,
                  result: up(v)(new KickUp(Leaf.value, k, Leaf.value))
                };
              }
              ;
              if (v1 instanceof Two) {
                var v2 = comp(k)(v1.value1);
                if (v2 instanceof EQ) {
                  $tco_done1 = true;
                  return {
                    found: true,
                    result: orig
                  };
                }
                ;
                if (v2 instanceof LT) {
                  $tco_var_v = new Cons(new TwoLeft(v1.value1, v1.value2), v);
                  $copy_v1 = v1.value0;
                  return;
                }
                ;
                $tco_var_v = new Cons(new TwoRight(v1.value0, v1.value1), v);
                $copy_v1 = v1.value2;
                return;
              }
              ;
              if (v1 instanceof Three) {
                var v2 = comp(k)(v1.value1);
                if (v2 instanceof EQ) {
                  $tco_done1 = true;
                  return {
                    found: true,
                    result: orig
                  };
                }
                ;
                var v3 = comp(k)(v1.value3);
                if (v3 instanceof EQ) {
                  $tco_done1 = true;
                  return {
                    found: true,
                    result: orig
                  };
                }
                ;
                if (v2 instanceof LT) {
                  $tco_var_v = new Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4), v);
                  $copy_v1 = v1.value0;
                  return;
                }
                ;
                if (v2 instanceof GT && v3 instanceof LT) {
                  $tco_var_v = new Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value3, v1.value4), v);
                  $copy_v1 = v1.value2;
                  return;
                }
                ;
                $tco_var_v = new Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3), v);
                $copy_v1 = v1.value4;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.List.Internal (line 38, column 3 - line 38, column 81): " + [v.constructor.name, v1.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_v, $copy_v1);
            }
            ;
            return $tco_result;
          };
        };
        return down(Nil.value)(orig);
      };
    };
  };
  var emptySet = /* @__PURE__ */ function() {
    return Leaf.value;
  }();

  // output/Data.List/index.js
  var map7 = /* @__PURE__ */ map(functorMaybe);
  var bimap2 = /* @__PURE__ */ bimap(bifunctorStep);
  var foldl3 = /* @__PURE__ */ foldl(foldableList);
  var identity8 = /* @__PURE__ */ identity(categoryFn);
  var uncons2 = function(v) {
    if (v instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v instanceof Cons) {
      return new Just({
        head: v.value0,
        tail: v.value1
      });
    }
    ;
    throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v.constructor.name]);
  };
  var toUnfoldable3 = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function(xs) {
      return map7(function(rec) {
        return new Tuple(rec.head, rec.tail);
      })(uncons2(xs));
    });
  };
  var singleton5 = function(a2) {
    return new Cons(a2, Nil.value);
  };
  var reverse2 = /* @__PURE__ */ function() {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return v;
          }
          ;
          if (v1 instanceof Cons) {
            $tco_var_v = new Cons(v1.value0, v);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  }();
  var $$null3 = function(v) {
    if (v instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var nubBy = function(p2) {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        return function($copy_v2) {
          var $tco_var_v = $copy_v;
          var $tco_var_v1 = $copy_v1;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v, v1, v2) {
            if (v2 instanceof Nil) {
              $tco_done = true;
              return v1;
            }
            ;
            if (v2 instanceof Cons) {
              var v3 = insertAndLookupBy(p2)(v2.value0)(v);
              if (v3.found) {
                $tco_var_v = v3.result;
                $tco_var_v1 = v1;
                $copy_v2 = v2.value1;
                return;
              }
              ;
              $tco_var_v = v3.result;
              $tco_var_v1 = new Cons(v2.value0, v1);
              $copy_v2 = v2.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List (line 673, column 5 - line 673, column 23): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
          }
          ;
          return $tco_result;
        };
      };
    };
    var $445 = go2(emptySet)(Nil.value);
    return function($446) {
      return reverse2($445($446));
    };
  };
  var nub = function(dictOrd) {
    return nubBy(compare(dictOrd));
  };
  var mapMaybe2 = function(f) {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return reverse2(v);
          }
          ;
          if (v1 instanceof Cons) {
            var v2 = f(v1.value0);
            if (v2 instanceof Nothing) {
              $tco_var_v = v;
              $copy_v1 = v1.value1;
              return;
            }
            ;
            if (v2 instanceof Just) {
              $tco_var_v = new Cons(v2.value0, v);
              $copy_v1 = v1.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List (line 419, column 5 - line 421, column 32): " + [v2.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 417, column 3 - line 417, column 27): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  };
  var manyRec = function(dictMonadRec) {
    var bind112 = bind(dictMonadRec.Monad0().Bind1());
    var tailRecM5 = tailRecM(dictMonadRec);
    return function(dictAlternative) {
      var Alt0 = dictAlternative.Plus1().Alt0();
      var alt11 = alt(Alt0);
      var map119 = map(Alt0.Functor0());
      var pure29 = pure(dictAlternative.Applicative0());
      return function(p2) {
        var go2 = function(acc) {
          return bind112(alt11(map119(Loop.create)(p2))(pure29(new Done(unit))))(function(aa) {
            return pure29(bimap2(function(v) {
              return new Cons(v, acc);
            })(function(v) {
              return reverse2(acc);
            })(aa));
          });
        };
        return tailRecM5(go2)(Nil.value);
      };
    };
  };
  var some2 = function(dictAlternative) {
    var apply6 = apply(dictAlternative.Applicative0().Apply0());
    var map119 = map(dictAlternative.Plus1().Alt0().Functor0());
    return function(dictLazy) {
      var defer5 = defer(dictLazy);
      return function(v) {
        return apply6(map119(Cons.create)(v))(defer5(function(v1) {
          return many2(dictAlternative)(dictLazy)(v);
        }));
      };
    };
  };
  var many2 = function(dictAlternative) {
    var alt11 = alt(dictAlternative.Plus1().Alt0());
    var pure29 = pure(dictAlternative.Applicative0());
    return function(dictLazy) {
      return function(v) {
        return alt11(some2(dictAlternative)(dictLazy)(v))(pure29(Nil.value));
      };
    };
  };
  var length3 = /* @__PURE__ */ foldl3(function(acc) {
    return function(v) {
      return acc + 1 | 0;
    };
  })(0);
  var insertBy = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nil) {
          return singleton5(v1);
        }
        ;
        if (v2 instanceof Cons) {
          var v3 = v(v1)(v2.value0);
          if (v3 instanceof GT) {
            return new Cons(v2.value0, insertBy(v)(v1)(v2.value1));
          }
          ;
          return new Cons(v1, v2);
        }
        ;
        throw new Error("Failed pattern match at Data.List (line 216, column 1 - line 216, column 68): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var insert2 = function(dictOrd) {
    return insertBy(compare(dictOrd));
  };
  var index2 = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v instanceof Nil) {
          $tco_done = true;
          return Nothing.value;
        }
        ;
        if (v instanceof Cons && v1 === 0) {
          $tco_done = true;
          return new Just(v.value0);
        }
        ;
        if (v instanceof Cons) {
          $tco_var_v = v.value1;
          $copy_v1 = v1 - 1 | 0;
          return;
        }
        ;
        throw new Error("Failed pattern match at Data.List (line 281, column 1 - line 281, column 44): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  var fromFoldable3 = function(dictFoldable) {
    return foldr(dictFoldable)(Cons.create)(Nil.value);
  };
  var filter = function(p2) {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return reverse2(v);
          }
          ;
          if (v1 instanceof Cons) {
            if (p2(v1.value0)) {
              $tco_var_v = new Cons(v1.value0, v);
              $copy_v1 = v1.value1;
              return;
            }
            ;
            if (otherwise) {
              $tco_var_v = v;
              $copy_v1 = v1.value1;
              return;
            }
            ;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 390, column 3 - line 390, column 27): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  };
  var deleteBy2 = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v2 instanceof Cons && v(v1)(v2.value0)) {
          return v2.value1;
        }
        ;
        if (v2 instanceof Cons) {
          return new Cons(v2.value0, deleteBy2(v)(v1)(v2.value1));
        }
        ;
        throw new Error("Failed pattern match at Data.List (line 732, column 1 - line 732, column 67): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var $$delete2 = function(dictEq) {
    return deleteBy2(eq(dictEq));
  };
  var difference = function(dictEq) {
    return foldl3(flip($$delete2(dictEq)));
  };
  var catMaybes2 = /* @__PURE__ */ mapMaybe2(identity8);

  // output/Partial.Unsafe/foreign.js
  var _unsafePartial = function(f) {
    return f();
  };

  // output/Partial/foreign.js
  var _crashWith = function(msg) {
    throw new Error(msg);
  };

  // output/Partial/index.js
  var crashWith = function() {
    return _crashWith;
  };

  // output/Partial.Unsafe/index.js
  var crashWith2 = /* @__PURE__ */ crashWith();
  var unsafePartial = _unsafePartial;
  var unsafeCrashWith = function(msg) {
    return unsafePartial(function() {
      return crashWith2(msg);
    });
  };

  // output/Data.List.NonEmpty/index.js
  var toList2 = function(v) {
    return new Cons(v.value0, v.value1);
  };
  var singleton6 = /* @__PURE__ */ function() {
    var $200 = singleton4(plusList);
    return function($201) {
      return NonEmptyList($200($201));
    };
  }();
  var head = function(v) {
    return v.value0;
  };
  var cons$prime = function(x2) {
    return function(xs) {
      return new NonEmpty(x2, xs);
    };
  };
  var cons2 = function(y2) {
    return function(v) {
      return new NonEmpty(y2, new Cons(v.value0, v.value1));
    };
  };

  // output/Data.Nullable/foreign.js
  var nullImpl = null;
  function nullable(a2, r, f) {
    return a2 == null ? r : f(a2);
  }
  function notNull(x2) {
    return x2;
  }

  // output/Data.Nullable/index.js
  var toNullable = /* @__PURE__ */ maybe(nullImpl)(notNull);
  var toMaybe = function(n) {
    return nullable(n, Nothing.value, Just.create);
  };

  // output/Effect.Aff/foreign.js
  var Aff = function() {
    var EMPTY = {};
    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt";
    var CONS = "Cons";
    var RESUME = "Resume";
    var RELEASE = "Release";
    var FINALIZER = "Finalizer";
    var FINALIZED = "Finalized";
    var FORKED = "Forked";
    var FIBER = "Fiber";
    var THUNK = "Thunk";
    function Aff2(tag, _1, _2, _3) {
      this.tag = tag;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }
    function AffCtr(tag) {
      var fn = function(_1, _2, _3) {
        return new Aff2(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }
    function nonCanceler2(error4) {
      return new Aff2(PURE, void 0);
    }
    function runEff(eff) {
      try {
        eff();
      } catch (error4) {
        setTimeout(function() {
          throw error4;
        }, 0);
      }
    }
    function runSync(left2, right2, eff) {
      try {
        return right2(eff());
      } catch (error4) {
        return left2(error4);
      }
    }
    function runAsync(left2, eff, k) {
      try {
        return eff(k)();
      } catch (error4) {
        k(left2(error4))();
        return nonCanceler2;
      }
    }
    var Scheduler = function() {
      var limit = 1024;
      var size6 = 0;
      var ix9 = 0;
      var queue = new Array(limit);
      var draining = false;
      function drain() {
        var thunk;
        draining = true;
        while (size6 !== 0) {
          size6--;
          thunk = queue[ix9];
          queue[ix9] = void 0;
          ix9 = (ix9 + 1) % limit;
          thunk();
        }
        draining = false;
      }
      return {
        isDraining: function() {
          return draining;
        },
        enqueue: function(cb) {
          var i2, tmp;
          if (size6 === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }
          queue[(ix9 + size6) % limit] = cb;
          size6++;
          if (!draining) {
            drain();
          }
        }
      };
    }();
    function Supervisor(util) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function(result) {
              return function() {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function() {
          return count === 0;
        },
        killAll: function(killError, cb) {
          return function() {
            if (count === 0) {
              return cb();
            }
            var killCount = 0;
            var kills = {};
            function kill2(fid) {
              kills[fid] = fibers[fid].kill(killError, function(result) {
                return function() {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function() {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }
            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill2(k);
              }
            }
            fibers = {};
            fiberId = 0;
            count = 0;
            return function(error4) {
              return new Aff2(SYNC, function() {
                for (var k2 in kills) {
                  if (kills.hasOwnProperty(k2)) {
                    kills[k2]();
                  }
                }
              });
            };
          };
        }
      };
    }
    var SUSPENDED = 0;
    var CONTINUE = 1;
    var STEP_BIND = 2;
    var STEP_RESULT = 3;
    var PENDING = 4;
    var RETURN = 5;
    var COMPLETED = 6;
    function Fiber(util, supervisor, aff) {
      var runTick = 0;
      var status = SUSPENDED;
      var step4 = aff;
      var fail4 = null;
      var interrupt = null;
      var bhead = null;
      var btail = null;
      var attempts = null;
      var bracketCount = 0;
      var joinId = 0;
      var joins = null;
      var rethrow = true;
      function run3(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp = null;
          result = null;
          attempt = null;
          switch (status) {
            case STEP_BIND:
              status = CONTINUE;
              try {
                step4 = bhead(step4);
                if (btail === null) {
                  bhead = null;
                } else {
                  bhead = btail._1;
                  btail = btail._2;
                }
              } catch (e) {
                status = RETURN;
                fail4 = util.left(e);
                step4 = null;
              }
              break;
            case STEP_RESULT:
              if (util.isLeft(step4)) {
                status = RETURN;
                fail4 = step4;
                step4 = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step4 = util.fromRight(step4);
              }
              break;
            case CONTINUE:
              switch (step4.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff2(CONS, bhead, btail);
                  }
                  bhead = step4._2;
                  status = CONTINUE;
                  step4 = step4._1;
                  break;
                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step4 = util.right(step4._1);
                  } else {
                    status = STEP_BIND;
                    step4 = step4._1;
                  }
                  break;
                case SYNC:
                  status = STEP_RESULT;
                  step4 = runSync(util.left, util.right, step4._1);
                  break;
                case ASYNC:
                  status = PENDING;
                  step4 = runAsync(util.left, step4._1, function(result2) {
                    return function() {
                      if (runTick !== localRunTick) {
                        return;
                      }
                      runTick++;
                      Scheduler.enqueue(function() {
                        if (runTick !== localRunTick + 1) {
                          return;
                        }
                        status = STEP_RESULT;
                        step4 = result2;
                        run3(runTick);
                      });
                    };
                  });
                  return;
                case THROW:
                  status = RETURN;
                  fail4 = util.left(step4._1);
                  step4 = null;
                  break;
                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step4, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step4, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step4 = step4._1;
                  break;
                case BRACKET:
                  bracketCount++;
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step4, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step4, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step4 = step4._1;
                  break;
                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util, supervisor, step4._2);
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
                  if (step4._1) {
                    tmp.run();
                  }
                  step4 = util.right(tmp);
                  break;
                case SEQ:
                  status = CONTINUE;
                  step4 = sequential3(util, supervisor, step4._1);
                  break;
              }
              break;
            case RETURN:
              bhead = null;
              btail = null;
              if (attempts === null) {
                status = COMPLETED;
                step4 = interrupt || fail4 || step4;
              } else {
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;
                switch (attempt.tag) {
                  case CATCH:
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail4) {
                      status = CONTINUE;
                      step4 = attempt._2(util.fromLeft(fail4));
                      fail4 = null;
                    }
                    break;
                  case RESUME:
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail4) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step4 = util.fromRight(step4);
                    }
                    break;
                  case BRACKET:
                    bracketCount--;
                    if (fail4 === null) {
                      result = util.fromRight(step4);
                      attempts = new Aff2(CONS, new Aff2(RELEASE, attempt._2, result), attempts, tmp);
                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step4 = attempt._3(result);
                      }
                    }
                    break;
                  case RELEASE:
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step4, fail4), attempts, interrupt);
                    status = CONTINUE;
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step4 = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                    } else if (fail4) {
                      step4 = attempt._1.failed(util.fromLeft(fail4))(attempt._2);
                    } else {
                      step4 = attempt._1.completed(util.fromRight(step4))(attempt._2);
                    }
                    fail4 = null;
                    bracketCount++;
                    break;
                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step4, fail4), attempts, interrupt);
                    status = CONTINUE;
                    step4 = attempt._1;
                    break;
                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step4 = attempt._1;
                    fail4 = attempt._2;
                    break;
                }
              }
              break;
            case COMPLETED:
              for (var k in joins) {
                if (joins.hasOwnProperty(k)) {
                  rethrow = rethrow && joins[k].rethrow;
                  runEff(joins[k].handler(step4));
                }
              }
              joins = null;
              if (interrupt && fail4) {
                setTimeout(function() {
                  throw util.fromLeft(fail4);
                }, 0);
              } else if (util.isLeft(step4) && rethrow) {
                setTimeout(function() {
                  if (rethrow) {
                    throw util.fromLeft(step4);
                  }
                }, 0);
              }
              return;
            case SUSPENDED:
              status = CONTINUE;
              break;
            case PENDING:
              return;
          }
        }
      }
      function onComplete(join4) {
        return function() {
          if (status === COMPLETED) {
            rethrow = rethrow && join4.rethrow;
            join4.handler(step4)();
            return function() {
            };
          }
          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join4;
          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }
      function kill2(error4, cb) {
        return function() {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function() {
            };
          }
          var canceler = onComplete({
            rethrow: false,
            handler: function() {
              return cb(util.right(void 0));
            }
          })();
          switch (status) {
            case SUSPENDED:
              interrupt = util.left(error4);
              status = COMPLETED;
              step4 = interrupt;
              run3(runTick);
              break;
            case PENDING:
              if (interrupt === null) {
                interrupt = util.left(error4);
              }
              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff2(CONS, new Aff2(FINALIZER, step4(error4)), attempts, interrupt);
                }
                status = RETURN;
                step4 = null;
                fail4 = null;
                run3(++runTick);
              }
              break;
            default:
              if (interrupt === null) {
                interrupt = util.left(error4);
              }
              if (bracketCount === 0) {
                status = RETURN;
                step4 = null;
                fail4 = null;
              }
          }
          return canceler;
        };
      }
      function join3(cb) {
        return function() {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run3(runTick);
          }
          return canceler;
        };
      }
      return {
        kill: kill2,
        join: join3,
        onComplete,
        isSuspended: function() {
          return status === SUSPENDED;
        },
        run: function() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function() {
                run3(runTick);
              });
            } else {
              run3(runTick);
            }
          }
        }
      };
    }
    function runPar(util, supervisor, par, cb) {
      var fiberId = 0;
      var fibers = {};
      var killId = 0;
      var kills = {};
      var early = new Error("[ParAff] Early exit");
      var interrupt = null;
      var root = EMPTY;
      function kill2(error4, par2, cb2) {
        var step4 = par2;
        var head6 = null;
        var tail2 = null;
        var count = 0;
        var kills2 = {};
        var tmp, kid;
        loop:
          while (true) {
            tmp = null;
            switch (step4.tag) {
              case FORKED:
                if (step4._3 === EMPTY) {
                  tmp = fibers[step4._1];
                  kills2[count++] = tmp.kill(error4, function(result) {
                    return function() {
                      count--;
                      if (count === 0) {
                        cb2(result)();
                      }
                    };
                  });
                }
                if (head6 === null) {
                  break loop;
                }
                step4 = head6._2;
                if (tail2 === null) {
                  head6 = null;
                } else {
                  head6 = tail2._1;
                  tail2 = tail2._2;
                }
                break;
              case MAP:
                step4 = step4._2;
                break;
              case APPLY:
              case ALT:
                if (head6) {
                  tail2 = new Aff2(CONS, head6, tail2);
                }
                head6 = step4;
                step4 = step4._1;
                break;
            }
          }
        if (count === 0) {
          cb2(util.right(void 0))();
        } else {
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills2[kid] = kills2[kid]();
          }
        }
        return kills2;
      }
      function join3(result, head6, tail2) {
        var fail4, step4, lhs, rhs, tmp, kid;
        if (util.isLeft(result)) {
          fail4 = result;
          step4 = null;
        } else {
          step4 = result;
          fail4 = null;
        }
        loop:
          while (true) {
            lhs = null;
            rhs = null;
            tmp = null;
            kid = null;
            if (interrupt !== null) {
              return;
            }
            if (head6 === null) {
              cb(fail4 || step4)();
              return;
            }
            if (head6._3 !== EMPTY) {
              return;
            }
            switch (head6.tag) {
              case MAP:
                if (fail4 === null) {
                  head6._3 = util.right(head6._1(util.fromRight(step4)));
                  step4 = head6._3;
                } else {
                  head6._3 = fail4;
                }
                break;
              case APPLY:
                lhs = head6._1._3;
                rhs = head6._2._3;
                if (fail4) {
                  head6._3 = fail4;
                  tmp = true;
                  kid = killId++;
                  kills[kid] = kill2(early, fail4 === lhs ? head6._2 : head6._1, function() {
                    return function() {
                      delete kills[kid];
                      if (tmp) {
                        tmp = false;
                      } else if (tail2 === null) {
                        join3(fail4, null, null);
                      } else {
                        join3(fail4, tail2._1, tail2._2);
                      }
                    };
                  });
                  if (tmp) {
                    tmp = false;
                    return;
                  }
                } else if (lhs === EMPTY || rhs === EMPTY) {
                  return;
                } else {
                  step4 = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                  head6._3 = step4;
                }
                break;
              case ALT:
                lhs = head6._1._3;
                rhs = head6._2._3;
                if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
                  return;
                }
                if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                  fail4 = step4 === lhs ? rhs : lhs;
                  step4 = null;
                  head6._3 = fail4;
                } else {
                  head6._3 = step4;
                  tmp = true;
                  kid = killId++;
                  kills[kid] = kill2(early, step4 === lhs ? head6._2 : head6._1, function() {
                    return function() {
                      delete kills[kid];
                      if (tmp) {
                        tmp = false;
                      } else if (tail2 === null) {
                        join3(step4, null, null);
                      } else {
                        join3(step4, tail2._1, tail2._2);
                      }
                    };
                  });
                  if (tmp) {
                    tmp = false;
                    return;
                  }
                }
                break;
            }
            if (tail2 === null) {
              head6 = null;
            } else {
              head6 = tail2._1;
              tail2 = tail2._2;
            }
          }
      }
      function resolve(fiber) {
        return function(result) {
          return function() {
            delete fibers[fiber._1];
            fiber._3 = result;
            join3(result, fiber._2._1, fiber._2._2);
          };
        };
      }
      function run3() {
        var status = CONTINUE;
        var step4 = par;
        var head6 = null;
        var tail2 = null;
        var tmp, fid;
        loop:
          while (true) {
            tmp = null;
            fid = null;
            switch (status) {
              case CONTINUE:
                switch (step4.tag) {
                  case MAP:
                    if (head6) {
                      tail2 = new Aff2(CONS, head6, tail2);
                    }
                    head6 = new Aff2(MAP, step4._1, EMPTY, EMPTY);
                    step4 = step4._2;
                    break;
                  case APPLY:
                    if (head6) {
                      tail2 = new Aff2(CONS, head6, tail2);
                    }
                    head6 = new Aff2(APPLY, EMPTY, step4._2, EMPTY);
                    step4 = step4._1;
                    break;
                  case ALT:
                    if (head6) {
                      tail2 = new Aff2(CONS, head6, tail2);
                    }
                    head6 = new Aff2(ALT, EMPTY, step4._2, EMPTY);
                    step4 = step4._1;
                    break;
                  default:
                    fid = fiberId++;
                    status = RETURN;
                    tmp = step4;
                    step4 = new Aff2(FORKED, fid, new Aff2(CONS, head6, tail2), EMPTY);
                    tmp = Fiber(util, supervisor, tmp);
                    tmp.onComplete({
                      rethrow: false,
                      handler: resolve(step4)
                    })();
                    fibers[fid] = tmp;
                    if (supervisor) {
                      supervisor.register(tmp);
                    }
                }
                break;
              case RETURN:
                if (head6 === null) {
                  break loop;
                }
                if (head6._1 === EMPTY) {
                  head6._1 = step4;
                  status = CONTINUE;
                  step4 = head6._2;
                  head6._2 = EMPTY;
                } else {
                  head6._2 = step4;
                  step4 = head6;
                  if (tail2 === null) {
                    head6 = null;
                  } else {
                    head6 = tail2._1;
                    tail2 = tail2._2;
                  }
                }
            }
          }
        root = step4;
        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }
      function cancel(error4, cb2) {
        interrupt = util.left(error4);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }
        kills = null;
        var newKills = kill2(error4, root, cb2);
        return function(killError) {
          return new Aff2(ASYNC, function(killCb) {
            return function() {
              for (var kid2 in newKills) {
                if (newKills.hasOwnProperty(kid2)) {
                  newKills[kid2]();
                }
              }
              return nonCanceler2;
            };
          });
        };
      }
      run3();
      return function(killError) {
        return new Aff2(ASYNC, function(killCb) {
          return function() {
            return cancel(killError, killCb);
          };
        });
      };
    }
    function sequential3(util, supervisor, par) {
      return new Aff2(ASYNC, function(cb) {
        return function() {
          return runPar(util, supervisor, par, cb);
        };
      });
    }
    Aff2.EMPTY = EMPTY;
    Aff2.Pure = AffCtr(PURE);
    Aff2.Throw = AffCtr(THROW);
    Aff2.Catch = AffCtr(CATCH);
    Aff2.Sync = AffCtr(SYNC);
    Aff2.Async = AffCtr(ASYNC);
    Aff2.Bind = AffCtr(BIND);
    Aff2.Bracket = AffCtr(BRACKET);
    Aff2.Fork = AffCtr(FORK);
    Aff2.Seq = AffCtr(SEQ);
    Aff2.ParMap = AffCtr(MAP);
    Aff2.ParApply = AffCtr(APPLY);
    Aff2.ParAlt = AffCtr(ALT);
    Aff2.Fiber = Fiber;
    Aff2.Supervisor = Supervisor;
    Aff2.Scheduler = Scheduler;
    Aff2.nonCanceler = nonCanceler2;
    return Aff2;
  }();
  var _pure = Aff.Pure;
  var _throwError = Aff.Throw;
  function _catchError(aff) {
    return function(k) {
      return Aff.Catch(aff, k);
    };
  }
  function _map(f) {
    return function(aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function(value17) {
          return Aff.Pure(f(value17));
        });
      }
    };
  }
  function _bind(aff) {
    return function(k) {
      return Aff.Bind(aff, k);
    };
  }
  function _fork(immediate) {
    return function(aff) {
      return Aff.Fork(immediate, aff);
    };
  }
  var _liftEffect = Aff.Sync;
  function _parAffMap(f) {
    return function(aff) {
      return Aff.ParMap(f, aff);
    };
  }
  function _parAffApply(aff1) {
    return function(aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  }
  var makeAff = Aff.Async;
  function generalBracket(acquire) {
    return function(options2) {
      return function(k) {
        return Aff.Bracket(acquire, options2, k);
      };
    };
  }
  function _makeFiber(util, aff) {
    return function() {
      return Aff.Fiber(util, null, aff);
    };
  }
  var _delay = /* @__PURE__ */ function() {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }
    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }
    return function(right2, ms) {
      return Aff.Async(function(cb) {
        return function() {
          var timer2 = setDelay(ms, cb(right2()));
          return function() {
            return Aff.Sync(function() {
              return right2(clearDelay(ms, timer2));
            });
          };
        };
      });
    };
  }();
  var _sequential = Aff.Seq;

  // output/Data.Profunctor/index.js
  var identity9 = /* @__PURE__ */ identity(categoryFn);
  var profunctorFn = {
    dimap: function(a2b) {
      return function(c2d) {
        return function(b2c) {
          return function($18) {
            return c2d(b2c(a2b($18)));
          };
        };
      };
    }
  };
  var dimap = function(dict) {
    return dict.dimap;
  };
  var lcmap = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function(a2b) {
      return dimap1(a2b)(identity9);
    };
  };
  var rmap = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function(b2c) {
      return dimap1(identity9)(b2c);
    };
  };

  // output/Control.Parallel.Class/index.js
  var sequential = function(dict) {
    return dict.sequential;
  };
  var parallel = function(dict) {
    return dict.parallel;
  };

  // output/Control.Parallel/index.js
  var identity10 = /* @__PURE__ */ identity(categoryFn);
  var parTraverse_ = function(dictParallel) {
    var sequential3 = sequential(dictParallel);
    var parallel4 = parallel(dictParallel);
    return function(dictApplicative) {
      var traverse_7 = traverse_(dictApplicative);
      return function(dictFoldable) {
        var traverse_14 = traverse_7(dictFoldable);
        return function(f) {
          var $51 = traverse_14(function($53) {
            return parallel4(f($53));
          });
          return function($52) {
            return sequential3($51($52));
          };
        };
      };
    };
  };
  var parSequence_ = function(dictParallel) {
    var parTraverse_1 = parTraverse_(dictParallel);
    return function(dictApplicative) {
      var parTraverse_2 = parTraverse_1(dictApplicative);
      return function(dictFoldable) {
        return parTraverse_2(dictFoldable)(identity10);
      };
    };
  };

  // output/Effect.Unsafe/foreign.js
  var unsafePerformEffect = function(f) {
    return f();
  };

  // output/Effect.Aff/index.js
  var $runtime_lazy4 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var pure2 = /* @__PURE__ */ pure(applicativeEffect);
  var $$void4 = /* @__PURE__ */ $$void(functorEffect);
  var map8 = /* @__PURE__ */ map(functorEffect);
  var Canceler = function(x2) {
    return x2;
  };
  var suspendAff = /* @__PURE__ */ _fork(false);
  var functorParAff = {
    map: _parAffMap
  };
  var functorAff = {
    map: _map
  };
  var map1 = /* @__PURE__ */ map(functorAff);
  var forkAff = /* @__PURE__ */ _fork(true);
  var ffiUtil = /* @__PURE__ */ function() {
    var unsafeFromRight = function(v) {
      if (v instanceof Right) {
        return v.value0;
      }
      ;
      if (v instanceof Left) {
        return unsafeCrashWith("unsafeFromRight: Left");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 412, column 21 - line 414, column 54): " + [v.constructor.name]);
    };
    var unsafeFromLeft = function(v) {
      if (v instanceof Left) {
        return v.value0;
      }
      ;
      if (v instanceof Right) {
        return unsafeCrashWith("unsafeFromLeft: Right");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 407, column 20 - line 409, column 55): " + [v.constructor.name]);
    };
    var isLeft2 = function(v) {
      if (v instanceof Left) {
        return true;
      }
      ;
      if (v instanceof Right) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 402, column 12 - line 404, column 21): " + [v.constructor.name]);
    };
    return {
      isLeft: isLeft2,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Left.create,
      right: Right.create
    };
  }();
  var makeFiber = function(aff) {
    return _makeFiber(ffiUtil, aff);
  };
  var launchAff = function(aff) {
    return function __do2() {
      var fiber = makeFiber(aff)();
      fiber.run();
      return fiber;
    };
  };
  var launchAff_ = function($75) {
    return $$void4(launchAff($75));
  };
  var delay = function(v) {
    return _delay(Right.create, v);
  };
  var bracket = function(acquire) {
    return function(completed) {
      return generalBracket(acquire)({
        killed: $$const(completed),
        failed: $$const(completed),
        completed: $$const(completed)
      });
    };
  };
  var applyParAff = {
    apply: _parAffApply,
    Functor0: function() {
      return functorParAff;
    }
  };
  var monadAff = {
    Applicative0: function() {
      return applicativeAff;
    },
    Bind1: function() {
      return bindAff;
    }
  };
  var bindAff = {
    bind: _bind,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var applicativeAff = {
    pure: _pure,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var $lazy_applyAff = /* @__PURE__ */ $runtime_lazy4("applyAff", "Effect.Aff", function() {
    return {
      apply: ap(monadAff),
      Functor0: function() {
        return functorAff;
      }
    };
  });
  var applyAff = /* @__PURE__ */ $lazy_applyAff(73);
  var pure22 = /* @__PURE__ */ pure(applicativeAff);
  var bind1 = /* @__PURE__ */ bind(bindAff);
  var bindFlipped4 = /* @__PURE__ */ bindFlipped(bindAff);
  var $$finally = function(fin) {
    return function(a2) {
      return bracket(pure22(unit))($$const(fin))($$const(a2));
    };
  };
  var parallelAff = {
    parallel: unsafeCoerce2,
    sequential: _sequential,
    Apply0: function() {
      return applyAff;
    },
    Apply1: function() {
      return applyParAff;
    }
  };
  var parallel2 = /* @__PURE__ */ parallel(parallelAff);
  var applicativeParAff = {
    pure: function($76) {
      return parallel2(pure22($76));
    },
    Apply0: function() {
      return applyParAff;
    }
  };
  var monadEffectAff = {
    liftEffect: _liftEffect,
    Monad0: function() {
      return monadAff;
    }
  };
  var liftEffect2 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var effectCanceler = function($77) {
    return Canceler($$const(liftEffect2($77)));
  };
  var joinFiber = function(v) {
    return makeAff(function(k) {
      return map8(effectCanceler)(v.join(k));
    });
  };
  var functorFiber = {
    map: function(f) {
      return function(t) {
        return unsafePerformEffect(makeFiber(map1(f)(joinFiber(t))));
      };
    }
  };
  var killFiber = function(e) {
    return function(v) {
      return bind1(liftEffect2(v.isSuspended))(function(suspended) {
        if (suspended) {
          return liftEffect2($$void4(v.kill(e, $$const(pure2(unit)))));
        }
        ;
        return makeAff(function(k) {
          return map8(effectCanceler)(v.kill(e, k));
        });
      });
    };
  };
  var monadThrowAff = {
    throwError: _throwError,
    Monad0: function() {
      return monadAff;
    }
  };
  var monadErrorAff = {
    catchError: _catchError,
    MonadThrow0: function() {
      return monadThrowAff;
    }
  };
  var $$try2 = /* @__PURE__ */ $$try(monadErrorAff);
  var runAff = function(k) {
    return function(aff) {
      return launchAff(bindFlipped4(function($83) {
        return liftEffect2(k($83));
      })($$try2(aff)));
    };
  };
  var runAff_ = function(k) {
    return function(aff) {
      return $$void4(runAff(k)(aff));
    };
  };
  var monadRecAff = {
    tailRecM: function(k) {
      var go2 = function(a2) {
        return bind1(k(a2))(function(res) {
          if (res instanceof Done) {
            return pure22(res.value0);
          }
          ;
          if (res instanceof Loop) {
            return go2(res.value0);
          }
          ;
          throw new Error("Failed pattern match at Effect.Aff (line 104, column 7 - line 106, column 23): " + [res.constructor.name]);
        });
      };
      return go2;
    },
    Monad0: function() {
      return monadAff;
    }
  };
  var nonCanceler = /* @__PURE__ */ $$const(/* @__PURE__ */ pure22(unit));

  // output/Effect.Aff.Compat/index.js
  var fromEffectFnAff = function(v) {
    return makeAff(function(k) {
      return function __do2() {
        var v1 = v(function($9) {
          return k(Left.create($9))();
        }, function($10) {
          return k(Right.create($10))();
        });
        return function(e) {
          return makeAff(function(k2) {
            return function __do3() {
              v1(e, function($11) {
                return k2(Left.create($11))();
              }, function($12) {
                return k2(Right.create($12))();
              });
              return nonCanceler;
            };
          });
        };
      };
    });
  };

  // output/Foreign/foreign.js
  function typeOf(value17) {
    return typeof value17;
  }
  function tagOf(value17) {
    return Object.prototype.toString.call(value17).slice(8, -1);
  }
  var isArray2 = Array.isArray || function(value17) {
    return Object.prototype.toString.call(value17) === "[object Array]";
  };

  // output/Data.Int/foreign.js
  var fromNumberImpl = function(just) {
    return function(nothing) {
      return function(n) {
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
  var toNumber2 = function(n) {
    return n;
  };
  var fromStringAsImpl = function(just) {
    return function(nothing) {
      return function(radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern2 = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
        return function(s) {
          if (pattern2.test(s)) {
            var i2 = parseInt(s, radix);
            return (i2 | 0) === i2 ? just(i2) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };

  // output/Data.Number/foreign.js
  var isFiniteImpl = isFinite;
  var ceil = Math.ceil;
  var floor = Math.floor;
  var pow = function(n) {
    return function(p2) {
      return Math.pow(n, p2);
    };
  };
  var round = Math.round;

  // output/Data.Int/index.js
  var top2 = /* @__PURE__ */ top(boundedInt);
  var bottom2 = /* @__PURE__ */ bottom(boundedInt);
  var odd = function(x2) {
    return (x2 & 1) !== 0;
  };
  var fromStringAs = /* @__PURE__ */ function() {
    return fromStringAsImpl(Just.create)(Nothing.value);
  }();
  var fromString2 = /* @__PURE__ */ fromStringAs(10);
  var fromNumber = /* @__PURE__ */ function() {
    return fromNumberImpl(Just.create)(Nothing.value);
  }();
  var unsafeClamp = function(x2) {
    if (!isFiniteImpl(x2)) {
      return 0;
    }
    ;
    if (x2 >= toNumber2(top2)) {
      return top2;
    }
    ;
    if (x2 <= toNumber2(bottom2)) {
      return bottom2;
    }
    ;
    if (otherwise) {
      return fromMaybe(0)(fromNumber(x2));
    }
    ;
    throw new Error("Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): " + [x2.constructor.name]);
  };
  var round2 = function($37) {
    return unsafeClamp(round($37));
  };
  var floor2 = function($39) {
    return unsafeClamp(floor($39));
  };
  var ceil2 = function($40) {
    return unsafeClamp(ceil($40));
  };

  // output/Data.String.CodeUnits/foreign.js
  var fromCharArray = function(a2) {
    return a2.join("");
  };
  var toCharArray = function(s) {
    return s.split("");
  };
  var singleton7 = function(c) {
    return c;
  };
  var _toChar = function(just) {
    return function(nothing) {
      return function(s) {
        return s.length === 1 ? just(s) : nothing;
      };
    };
  };
  var length4 = function(s) {
    return s.length;
  };
  var _indexOf = function(just) {
    return function(nothing) {
      return function(x2) {
        return function(s) {
          var i2 = s.indexOf(x2);
          return i2 === -1 ? nothing : just(i2);
        };
      };
    };
  };
  var _lastIndexOf = function(just) {
    return function(nothing) {
      return function(x2) {
        return function(s) {
          var i2 = s.lastIndexOf(x2);
          return i2 === -1 ? nothing : just(i2);
        };
      };
    };
  };
  var take3 = function(n) {
    return function(s) {
      return s.substr(0, n);
    };
  };
  var drop2 = function(n) {
    return function(s) {
      return s.substring(n);
    };
  };
  var splitAt = function(i2) {
    return function(s) {
      return { before: s.substring(0, i2), after: s.substring(i2) };
    };
  };

  // output/Data.String.Unsafe/foreign.js
  var charAt = function(i2) {
    return function(s) {
      if (i2 >= 0 && i2 < s.length)
        return s.charAt(i2);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };

  // output/Data.String.CodeUnits/index.js
  var uncons3 = function(v) {
    if (v === "") {
      return Nothing.value;
    }
    ;
    return new Just({
      head: charAt(0)(v),
      tail: drop2(1)(v)
    });
  };
  var toChar = /* @__PURE__ */ function() {
    return _toChar(Just.create)(Nothing.value);
  }();
  var stripSuffix = function(v) {
    return function(str) {
      var v1 = splitAt(length4(str) - length4(v) | 0)(str);
      var $14 = v1.after === v;
      if ($14) {
        return new Just(v1.before);
      }
      ;
      return Nothing.value;
    };
  };
  var stripPrefix = function(v) {
    return function(str) {
      var v1 = splitAt(length4(v))(str);
      var $20 = v1.before === v;
      if ($20) {
        return new Just(v1.after);
      }
      ;
      return Nothing.value;
    };
  };
  var lastIndexOf = /* @__PURE__ */ function() {
    return _lastIndexOf(Just.create)(Nothing.value);
  }();
  var indexOf = /* @__PURE__ */ function() {
    return _indexOf(Just.create)(Nothing.value);
  }();

  // output/Foreign/index.js
  var show3 = /* @__PURE__ */ show(showString);
  var show1 = /* @__PURE__ */ show(showInt);
  var pure3 = /* @__PURE__ */ pure(applicativeEither);
  var ForeignError = /* @__PURE__ */ function() {
    function ForeignError2(value0) {
      this.value0 = value0;
    }
    ;
    ForeignError2.create = function(value0) {
      return new ForeignError2(value0);
    };
    return ForeignError2;
  }();
  var TypeMismatch = /* @__PURE__ */ function() {
    function TypeMismatch2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TypeMismatch2.create = function(value0) {
      return function(value1) {
        return new TypeMismatch2(value0, value1);
      };
    };
    return TypeMismatch2;
  }();
  var ErrorAtIndex = /* @__PURE__ */ function() {
    function ErrorAtIndex2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ErrorAtIndex2.create = function(value0) {
      return function(value1) {
        return new ErrorAtIndex2(value0, value1);
      };
    };
    return ErrorAtIndex2;
  }();
  var ErrorAtProperty = /* @__PURE__ */ function() {
    function ErrorAtProperty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ErrorAtProperty2.create = function(value0) {
      return function(value1) {
        return new ErrorAtProperty2(value0, value1);
      };
    };
    return ErrorAtProperty2;
  }();
  var unsafeToForeign = unsafeCoerce2;
  var unsafeFromForeign = unsafeCoerce2;
  var renderForeignError = function(v) {
    if (v instanceof ForeignError) {
      return v.value0;
    }
    ;
    if (v instanceof ErrorAtIndex) {
      return "Error at array index " + (show1(v.value0) + (": " + renderForeignError(v.value1)));
    }
    ;
    if (v instanceof ErrorAtProperty) {
      return "Error at property " + (show3(v.value0) + (": " + renderForeignError(v.value1)));
    }
    ;
    if (v instanceof TypeMismatch) {
      return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    }
    ;
    throw new Error("Failed pattern match at Foreign (line 78, column 1 - line 78, column 45): " + [v.constructor.name]);
  };
  var fail = function(dictMonad) {
    var $153 = throwError(monadThrowExceptT(dictMonad));
    return function($154) {
      return $153(singleton6($154));
    };
  };
  var unsafeReadTagged = function(dictMonad) {
    var pure113 = pure(applicativeExceptT(dictMonad));
    var fail1 = fail(dictMonad);
    return function(tag) {
      return function(value17) {
        if (tagOf(value17) === tag) {
          return pure113(unsafeFromForeign(value17));
        }
        ;
        if (otherwise) {
          return fail1(new TypeMismatch(tag, tagOf(value17)));
        }
        ;
        throw new Error("Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): " + [tag.constructor.name, value17.constructor.name]);
      };
    };
  };
  var readBoolean = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("Boolean");
  };
  var readNumber = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("Number");
  };
  var readInt = function(dictMonad) {
    var map45 = map(dictMonad.Bind1().Apply0().Functor0());
    var readNumber1 = readNumber(dictMonad);
    return function(value17) {
      var error4 = new Left(singleton6(new TypeMismatch("Int", tagOf(value17))));
      var fromNumber2 = function() {
        var $155 = maybe(error4)(pure3);
        return function($156) {
          return $155(fromNumber($156));
        };
      }();
      return mapExceptT(map45(either($$const(error4))(fromNumber2)))(readNumber1(value17));
    };
  };
  var readString = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("String");
  };

  // output/Affjax/index.js
  var pure4 = /* @__PURE__ */ pure(/* @__PURE__ */ applicativeExceptT(monadIdentity));
  var fail2 = /* @__PURE__ */ fail(monadIdentity);
  var unsafeReadTagged2 = /* @__PURE__ */ unsafeReadTagged(monadIdentity);
  var alt2 = /* @__PURE__ */ alt(/* @__PURE__ */ altExceptT(semigroupNonEmptyList)(monadIdentity));
  var composeKleisliFlipped2 = /* @__PURE__ */ composeKleisliFlipped(/* @__PURE__ */ bindExceptT(monadIdentity));
  var map9 = /* @__PURE__ */ map(functorMaybe);
  var any2 = /* @__PURE__ */ any(foldableArray)(heytingAlgebraBoolean);
  var eq4 = /* @__PURE__ */ eq(eqString);
  var bindFlipped5 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var map12 = /* @__PURE__ */ map(functorArray);
  var mapFlipped2 = /* @__PURE__ */ mapFlipped(functorAff);
  var $$try3 = /* @__PURE__ */ $$try(monadErrorAff);
  var pure1 = /* @__PURE__ */ pure(applicativeAff);
  var RequestContentError = /* @__PURE__ */ function() {
    function RequestContentError2(value0) {
      this.value0 = value0;
    }
    ;
    RequestContentError2.create = function(value0) {
      return new RequestContentError2(value0);
    };
    return RequestContentError2;
  }();
  var ResponseBodyError = /* @__PURE__ */ function() {
    function ResponseBodyError2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ResponseBodyError2.create = function(value0) {
      return function(value1) {
        return new ResponseBodyError2(value0, value1);
      };
    };
    return ResponseBodyError2;
  }();
  var TimeoutError = /* @__PURE__ */ function() {
    function TimeoutError2() {
    }
    ;
    TimeoutError2.value = new TimeoutError2();
    return TimeoutError2;
  }();
  var RequestFailedError = /* @__PURE__ */ function() {
    function RequestFailedError2() {
    }
    ;
    RequestFailedError2.value = new RequestFailedError2();
    return RequestFailedError2;
  }();
  var XHROtherError = /* @__PURE__ */ function() {
    function XHROtherError2(value0) {
      this.value0 = value0;
    }
    ;
    XHROtherError2.create = function(value0) {
      return new XHROtherError2(value0);
    };
    return XHROtherError2;
  }();
  var request = function(driver2) {
    return function(req) {
      var parseJSON = function(v2) {
        if (v2 === "") {
          return pure4(jsonEmptyObject);
        }
        ;
        return either(function($74) {
          return fail2(ForeignError.create($74));
        })(pure4)(jsonParser(v2));
      };
      var fromResponse = function() {
        if (req.responseFormat instanceof $$ArrayBuffer) {
          return unsafeReadTagged2("ArrayBuffer");
        }
        ;
        if (req.responseFormat instanceof Blob3) {
          return unsafeReadTagged2("Blob");
        }
        ;
        if (req.responseFormat instanceof Document2) {
          return function(x2) {
            return alt2(unsafeReadTagged2("Document")(x2))(alt2(unsafeReadTagged2("XMLDocument")(x2))(unsafeReadTagged2("HTMLDocument")(x2)));
          };
        }
        ;
        if (req.responseFormat instanceof Json2) {
          return composeKleisliFlipped2(function($75) {
            return req.responseFormat.value0(parseJSON($75));
          })(unsafeReadTagged2("String"));
        }
        ;
        if (req.responseFormat instanceof $$String2) {
          return unsafeReadTagged2("String");
        }
        ;
        if (req.responseFormat instanceof Ignore) {
          return $$const(req.responseFormat.value0(pure4(unit)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 274, column 18 - line 283, column 57): " + [req.responseFormat.constructor.name]);
      }();
      var extractContent = function(v2) {
        if (v2 instanceof ArrayView) {
          return new Right(v2.value0(unsafeToForeign));
        }
        ;
        if (v2 instanceof Blob2) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof Document) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof $$String) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof FormData) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof FormURLEncoded) {
          return note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(map9(unsafeToForeign)(encode(v2.value0)));
        }
        ;
        if (v2 instanceof Json) {
          return new Right(unsafeToForeign(stringify(v2.value0)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 235, column 20 - line 250, column 69): " + [v2.constructor.name]);
      };
      var addHeader = function(mh) {
        return function(hs) {
          if (mh instanceof Just && !any2(on(eq4)(name)(mh.value0))(hs)) {
            return snoc(hs)(mh.value0);
          }
          ;
          return hs;
        };
      };
      var headers2 = function(reqContent) {
        return addHeader(map9(ContentType.create)(bindFlipped5(toMediaType)(reqContent)))(addHeader(map9(Accept.create)(toMediaType2(req.responseFormat)))(req.headers));
      };
      var ajaxRequest = function(v2) {
        return {
          method: print(req.method),
          url: req.url,
          headers: map12(function(h) {
            return {
              field: name(h),
              value: value(h)
            };
          })(headers2(req.content)),
          content: v2,
          responseType: toResponseType(req.responseFormat),
          username: toNullable(req.username),
          password: toNullable(req.password),
          withCredentials: req.withCredentials,
          timeout: fromMaybe(0)(map9(function(v1) {
            return v1;
          })(req.timeout))
        };
      };
      var send = function(content3) {
        return mapFlipped2($$try3(fromEffectFnAff(_ajax(driver2, "AffjaxTimeoutErrorMessageIdent", "AffjaxRequestFailedMessageIdent", ResponseHeader.create, ajaxRequest(content3)))))(function(v2) {
          if (v2 instanceof Right) {
            var v1 = runExcept(fromResponse(v2.value0.body));
            if (v1 instanceof Left) {
              return new Left(new ResponseBodyError(head(v1.value0), v2.value0));
            }
            ;
            if (v1 instanceof Right) {
              return new Right({
                headers: v2.value0.headers,
                status: v2.value0.status,
                statusText: v2.value0.statusText,
                body: v1.value0
              });
            }
            ;
            throw new Error("Failed pattern match at Affjax (line 209, column 9 - line 211, column 52): " + [v1.constructor.name]);
          }
          ;
          if (v2 instanceof Left) {
            return new Left(function() {
              var message2 = message(v2.value0);
              var $61 = message2 === "AffjaxTimeoutErrorMessageIdent";
              if ($61) {
                return TimeoutError.value;
              }
              ;
              var $62 = message2 === "AffjaxRequestFailedMessageIdent";
              if ($62) {
                return RequestFailedError.value;
              }
              ;
              return new XHROtherError(v2.value0);
            }());
          }
          ;
          throw new Error("Failed pattern match at Affjax (line 207, column 144 - line 219, column 28): " + [v2.constructor.name]);
        });
      };
      if (req.content instanceof Nothing) {
        return send(toNullable(Nothing.value));
      }
      ;
      if (req.content instanceof Just) {
        var v = extractContent(req.content.value0);
        if (v instanceof Right) {
          return send(toNullable(new Just(v.value0)));
        }
        ;
        if (v instanceof Left) {
          return pure1(new Left(new RequestContentError(v.value0)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 199, column 7 - line 203, column 48): " + [v.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Affjax (line 195, column 3 - line 203, column 48): " + [req.content.constructor.name]);
    };
  };
  var printError = function(v) {
    if (v instanceof RequestContentError) {
      return "There was a problem with the request content: " + v.value0;
    }
    ;
    if (v instanceof ResponseBodyError) {
      return "There was a problem with the response body: " + renderForeignError(v.value0);
    }
    ;
    if (v instanceof TimeoutError) {
      return "There was a problem making the request: timeout";
    }
    ;
    if (v instanceof RequestFailedError) {
      return "There was a problem making the request: request failed";
    }
    ;
    if (v instanceof XHROtherError) {
      return "There was a problem making the request: " + message(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Affjax (line 113, column 14 - line 123, column 66): " + [v.constructor.name]);
  };
  var defaultRequest = /* @__PURE__ */ function() {
    return {
      method: new Left(GET.value),
      url: "/",
      headers: [],
      content: Nothing.value,
      username: Nothing.value,
      password: Nothing.value,
      withCredentials: false,
      responseFormat: ignore,
      timeout: Nothing.value
    };
  }();

  // output/Affjax.Web/foreign.js
  var driver = {
    newXHR: function() {
      return new XMLHttpRequest();
    },
    fixupUrl: function(url) {
      return url || "/";
    }
  };

  // output/DOM.HTML.Indexed.InputType/index.js
  var InputButton = /* @__PURE__ */ function() {
    function InputButton2() {
    }
    ;
    InputButton2.value = new InputButton2();
    return InputButton2;
  }();
  var InputCheckbox = /* @__PURE__ */ function() {
    function InputCheckbox2() {
    }
    ;
    InputCheckbox2.value = new InputCheckbox2();
    return InputCheckbox2;
  }();
  var InputColor = /* @__PURE__ */ function() {
    function InputColor2() {
    }
    ;
    InputColor2.value = new InputColor2();
    return InputColor2;
  }();
  var InputDate = /* @__PURE__ */ function() {
    function InputDate2() {
    }
    ;
    InputDate2.value = new InputDate2();
    return InputDate2;
  }();
  var InputDatetimeLocal = /* @__PURE__ */ function() {
    function InputDatetimeLocal2() {
    }
    ;
    InputDatetimeLocal2.value = new InputDatetimeLocal2();
    return InputDatetimeLocal2;
  }();
  var InputEmail = /* @__PURE__ */ function() {
    function InputEmail2() {
    }
    ;
    InputEmail2.value = new InputEmail2();
    return InputEmail2;
  }();
  var InputFile = /* @__PURE__ */ function() {
    function InputFile2() {
    }
    ;
    InputFile2.value = new InputFile2();
    return InputFile2;
  }();
  var InputHidden = /* @__PURE__ */ function() {
    function InputHidden2() {
    }
    ;
    InputHidden2.value = new InputHidden2();
    return InputHidden2;
  }();
  var InputImage = /* @__PURE__ */ function() {
    function InputImage2() {
    }
    ;
    InputImage2.value = new InputImage2();
    return InputImage2;
  }();
  var InputMonth = /* @__PURE__ */ function() {
    function InputMonth2() {
    }
    ;
    InputMonth2.value = new InputMonth2();
    return InputMonth2;
  }();
  var InputNumber = /* @__PURE__ */ function() {
    function InputNumber2() {
    }
    ;
    InputNumber2.value = new InputNumber2();
    return InputNumber2;
  }();
  var InputPassword = /* @__PURE__ */ function() {
    function InputPassword2() {
    }
    ;
    InputPassword2.value = new InputPassword2();
    return InputPassword2;
  }();
  var InputRadio = /* @__PURE__ */ function() {
    function InputRadio2() {
    }
    ;
    InputRadio2.value = new InputRadio2();
    return InputRadio2;
  }();
  var InputRange = /* @__PURE__ */ function() {
    function InputRange2() {
    }
    ;
    InputRange2.value = new InputRange2();
    return InputRange2;
  }();
  var InputReset = /* @__PURE__ */ function() {
    function InputReset2() {
    }
    ;
    InputReset2.value = new InputReset2();
    return InputReset2;
  }();
  var InputSearch = /* @__PURE__ */ function() {
    function InputSearch2() {
    }
    ;
    InputSearch2.value = new InputSearch2();
    return InputSearch2;
  }();
  var InputSubmit = /* @__PURE__ */ function() {
    function InputSubmit2() {
    }
    ;
    InputSubmit2.value = new InputSubmit2();
    return InputSubmit2;
  }();
  var InputTel = /* @__PURE__ */ function() {
    function InputTel2() {
    }
    ;
    InputTel2.value = new InputTel2();
    return InputTel2;
  }();
  var InputText = /* @__PURE__ */ function() {
    function InputText2() {
    }
    ;
    InputText2.value = new InputText2();
    return InputText2;
  }();
  var InputTime = /* @__PURE__ */ function() {
    function InputTime2() {
    }
    ;
    InputTime2.value = new InputTime2();
    return InputTime2;
  }();
  var InputUrl = /* @__PURE__ */ function() {
    function InputUrl2() {
    }
    ;
    InputUrl2.value = new InputUrl2();
    return InputUrl2;
  }();
  var InputWeek = /* @__PURE__ */ function() {
    function InputWeek2() {
    }
    ;
    InputWeek2.value = new InputWeek2();
    return InputWeek2;
  }();
  var renderInputType = function(v) {
    if (v instanceof InputButton) {
      return "button";
    }
    ;
    if (v instanceof InputCheckbox) {
      return "checkbox";
    }
    ;
    if (v instanceof InputColor) {
      return "color";
    }
    ;
    if (v instanceof InputDate) {
      return "date";
    }
    ;
    if (v instanceof InputDatetimeLocal) {
      return "datetime-local";
    }
    ;
    if (v instanceof InputEmail) {
      return "email";
    }
    ;
    if (v instanceof InputFile) {
      return "file";
    }
    ;
    if (v instanceof InputHidden) {
      return "hidden";
    }
    ;
    if (v instanceof InputImage) {
      return "image";
    }
    ;
    if (v instanceof InputMonth) {
      return "month";
    }
    ;
    if (v instanceof InputNumber) {
      return "number";
    }
    ;
    if (v instanceof InputPassword) {
      return "password";
    }
    ;
    if (v instanceof InputRadio) {
      return "radio";
    }
    ;
    if (v instanceof InputRange) {
      return "range";
    }
    ;
    if (v instanceof InputReset) {
      return "reset";
    }
    ;
    if (v instanceof InputSearch) {
      return "search";
    }
    ;
    if (v instanceof InputSubmit) {
      return "submit";
    }
    ;
    if (v instanceof InputTel) {
      return "tel";
    }
    ;
    if (v instanceof InputText) {
      return "text";
    }
    ;
    if (v instanceof InputTime) {
      return "time";
    }
    ;
    if (v instanceof InputUrl) {
      return "url";
    }
    ;
    if (v instanceof InputWeek) {
      return "week";
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 33, column 19 - line 55, column 22): " + [v.constructor.name]);
  };

  // output/Data.Lazy/foreign.js
  var defer2 = function(thunk) {
    var v = null;
    return function() {
      if (thunk === void 0)
        return v;
      v = thunk();
      thunk = void 0;
      return v;
    };
  };
  var force = function(l) {
    return l();
  };

  // output/Effect.Aff.Class/index.js
  var monadAffAff = {
    liftAff: /* @__PURE__ */ identity(categoryFn),
    MonadEffect0: function() {
      return monadEffectAff;
    }
  };
  var liftAff = function(dict) {
    return dict.liftAff;
  };

  // output/Data.Exists/index.js
  var runExists = unsafeCoerce2;
  var mkExists = unsafeCoerce2;

  // output/Data.Coyoneda/index.js
  var CoyonedaF = /* @__PURE__ */ function() {
    function CoyonedaF2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CoyonedaF2.create = function(value0) {
      return function(value1) {
        return new CoyonedaF2(value0, value1);
      };
    };
    return CoyonedaF2;
  }();
  var unCoyoneda = function(f) {
    return function(v) {
      return runExists(function(v1) {
        return f(v1.value0)(v1.value1);
      })(v);
    };
  };
  var coyoneda = function(k) {
    return function(fi) {
      return mkExists(new CoyonedaF(k, fi));
    };
  };
  var functorCoyoneda = {
    map: function(f) {
      return function(v) {
        return runExists(function(v1) {
          return coyoneda(function($180) {
            return f(v1.value0($180));
          })(v1.value1);
        })(v);
      };
    }
  };
  var liftCoyoneda = /* @__PURE__ */ coyoneda(/* @__PURE__ */ identity(categoryFn));

  // output/Data.Map.Internal/index.js
  var $runtime_lazy5 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var map10 = /* @__PURE__ */ map(functorMaybe);
  var Leaf2 = /* @__PURE__ */ function() {
    function Leaf3() {
    }
    ;
    Leaf3.value = new Leaf3();
    return Leaf3;
  }();
  var Node = /* @__PURE__ */ function() {
    function Node2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    Node2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new Node2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return Node2;
  }();
  var Split = /* @__PURE__ */ function() {
    function Split2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Split2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Split2(value0, value1, value22);
        };
      };
    };
    return Split2;
  }();
  var SplitLast = /* @__PURE__ */ function() {
    function SplitLast2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    SplitLast2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new SplitLast2(value0, value1, value22);
        };
      };
    };
    return SplitLast2;
  }();
  var unsafeNode = function(k, v, l, r) {
    if (l instanceof Leaf2) {
      if (r instanceof Leaf2) {
        return new Node(1, 1, k, v, l, r);
      }
      ;
      if (r instanceof Node) {
        return new Node(1 + r.value0 | 0, 1 + r.value1 | 0, k, v, l, r);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 702, column 5 - line 706, column 39): " + [r.constructor.name]);
    }
    ;
    if (l instanceof Node) {
      if (r instanceof Leaf2) {
        return new Node(1 + l.value0 | 0, 1 + l.value1 | 0, k, v, l, r);
      }
      ;
      if (r instanceof Node) {
        return new Node(1 + function() {
          var $280 = l.value0 > r.value0;
          if ($280) {
            return l.value0;
          }
          ;
          return r.value0;
        }() | 0, (1 + l.value1 | 0) + r.value1 | 0, k, v, l, r);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 708, column 5 - line 712, column 68): " + [r.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 700, column 32 - line 712, column 68): " + [l.constructor.name]);
  };
  var singleton8 = function(k) {
    return function(v) {
      return new Node(1, 1, k, v, Leaf2.value, Leaf2.value);
    };
  };
  var unsafeBalancedNode = /* @__PURE__ */ function() {
    var height8 = function(v) {
      if (v instanceof Leaf2) {
        return 0;
      }
      ;
      if (v instanceof Node) {
        return v.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 757, column 12 - line 759, column 26): " + [v.constructor.name]);
    };
    var rotateLeft = function(k, v, l, rk, rv, rl, rr) {
      if (rl instanceof Node && rl.value0 > height8(rr)) {
        return unsafeNode(rl.value2, rl.value3, unsafeNode(k, v, l, rl.value4), unsafeNode(rk, rv, rl.value5, rr));
      }
      ;
      return unsafeNode(rk, rv, unsafeNode(k, v, l, rl), rr);
    };
    var rotateRight = function(k, v, lk, lv, ll, lr, r) {
      if (lr instanceof Node && height8(ll) <= lr.value0) {
        return unsafeNode(lr.value2, lr.value3, unsafeNode(lk, lv, ll, lr.value4), unsafeNode(k, v, lr.value5, r));
      }
      ;
      return unsafeNode(lk, lv, ll, unsafeNode(k, v, lr, r));
    };
    return function(k, v, l, r) {
      if (l instanceof Leaf2) {
        if (r instanceof Leaf2) {
          return singleton8(k)(v);
        }
        ;
        if (r instanceof Node && r.value0 > 1) {
          return rotateLeft(k, v, l, r.value2, r.value3, r.value4, r.value5);
        }
        ;
        return unsafeNode(k, v, l, r);
      }
      ;
      if (l instanceof Node) {
        if (r instanceof Node) {
          if (r.value0 > (l.value0 + 1 | 0)) {
            return rotateLeft(k, v, l, r.value2, r.value3, r.value4, r.value5);
          }
          ;
          if (l.value0 > (r.value0 + 1 | 0)) {
            return rotateRight(k, v, l.value2, l.value3, l.value4, l.value5, r);
          }
          ;
        }
        ;
        if (r instanceof Leaf2 && l.value0 > 1) {
          return rotateRight(k, v, l.value2, l.value3, l.value4, l.value5, r);
        }
        ;
        return unsafeNode(k, v, l, r);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 717, column 40 - line 738, column 34): " + [l.constructor.name]);
    };
  }();
  var $lazy_unsafeSplit = /* @__PURE__ */ $runtime_lazy5("unsafeSplit", "Data.Map.Internal", function() {
    return function(comp, k, m) {
      if (m instanceof Leaf2) {
        return new Split(Nothing.value, Leaf2.value, Leaf2.value);
      }
      ;
      if (m instanceof Node) {
        var v = comp(k)(m.value2);
        if (v instanceof LT) {
          var v1 = $lazy_unsafeSplit(793)(comp, k, m.value4);
          return new Split(v1.value0, v1.value1, unsafeBalancedNode(m.value2, m.value3, v1.value2, m.value5));
        }
        ;
        if (v instanceof GT) {
          var v1 = $lazy_unsafeSplit(796)(comp, k, m.value5);
          return new Split(v1.value0, unsafeBalancedNode(m.value2, m.value3, m.value4, v1.value1), v1.value2);
        }
        ;
        if (v instanceof EQ) {
          return new Split(new Just(m.value3), m.value4, m.value5);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 791, column 5 - line 799, column 30): " + [v.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 787, column 34 - line 799, column 30): " + [m.constructor.name]);
    };
  });
  var unsafeSplit = /* @__PURE__ */ $lazy_unsafeSplit(786);
  var $lazy_unsafeSplitLast = /* @__PURE__ */ $runtime_lazy5("unsafeSplitLast", "Data.Map.Internal", function() {
    return function(k, v, l, r) {
      if (r instanceof Leaf2) {
        return new SplitLast(k, v, l);
      }
      ;
      if (r instanceof Node) {
        var v1 = $lazy_unsafeSplitLast(779)(r.value2, r.value3, r.value4, r.value5);
        return new SplitLast(v1.value0, v1.value1, unsafeBalancedNode(k, v, l, v1.value2));
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 776, column 37 - line 780, column 57): " + [r.constructor.name]);
    };
  });
  var unsafeSplitLast = /* @__PURE__ */ $lazy_unsafeSplitLast(775);
  var unsafeJoinNodes = function(v, v1) {
    if (v instanceof Leaf2) {
      return v1;
    }
    ;
    if (v instanceof Node) {
      var v2 = unsafeSplitLast(v.value2, v.value3, v.value4, v.value5);
      return unsafeBalancedNode(v2.value0, v2.value1, v2.value2, v1);
    }
    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 764, column 25 - line 768, column 38): " + [v.constructor.name, v1.constructor.name]);
  };
  var $lazy_unsafeUnionWith = /* @__PURE__ */ $runtime_lazy5("unsafeUnionWith", "Data.Map.Internal", function() {
    return function(comp, app, l, r) {
      if (l instanceof Leaf2) {
        return r;
      }
      ;
      if (r instanceof Leaf2) {
        return l;
      }
      ;
      if (r instanceof Node) {
        var v = unsafeSplit(comp, r.value2, l);
        var l$prime = $lazy_unsafeUnionWith(809)(comp, app, v.value1, r.value4);
        var r$prime = $lazy_unsafeUnionWith(810)(comp, app, v.value2, r.value5);
        if (v.value0 instanceof Just) {
          return unsafeBalancedNode(r.value2, app(v.value0.value0)(r.value3), l$prime, r$prime);
        }
        ;
        if (v.value0 instanceof Nothing) {
          return unsafeBalancedNode(r.value2, r.value3, l$prime, r$prime);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 811, column 5 - line 815, column 46): " + [v.value0.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 804, column 42 - line 815, column 46): " + [l.constructor.name, r.constructor.name]);
    };
  });
  var unsafeUnionWith = /* @__PURE__ */ $lazy_unsafeUnionWith(803);
  var unionWith = function(dictOrd) {
    var compare9 = compare(dictOrd);
    return function(app) {
      return function(m1) {
        return function(m2) {
          return unsafeUnionWith(compare9, app, m1, m2);
        };
      };
    };
  };
  var union2 = function(dictOrd) {
    return unionWith(dictOrd)($$const);
  };
  var pop = function(dictOrd) {
    var compare9 = compare(dictOrd);
    return function(k) {
      return function(m) {
        var v = unsafeSplit(compare9, k, m);
        return map10(function(a2) {
          return new Tuple(a2, unsafeJoinNodes(v.value1, v.value2));
        })(v.value0);
      };
    };
  };
  var lookup2 = function(dictOrd) {
    var compare9 = compare(dictOrd);
    return function(k) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Leaf2) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Node) {
            var v1 = compare9(k)(v.value2);
            if (v1 instanceof LT) {
              $copy_v = v.value4;
              return;
            }
            ;
            if (v1 instanceof GT) {
              $copy_v = v.value5;
              return;
            }
            ;
            if (v1 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value3);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 283, column 7 - line 286, column 22): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 280, column 8 - line 286, column 22): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return go2;
    };
  };
  var insertWith = function(dictOrd) {
    var compare9 = compare(dictOrd);
    return function(app) {
      return function(k) {
        return function(v) {
          var go2 = function(v1) {
            if (v1 instanceof Leaf2) {
              return singleton8(k)(v);
            }
            ;
            if (v1 instanceof Node) {
              var v2 = compare9(k)(v1.value2);
              if (v2 instanceof LT) {
                return unsafeBalancedNode(v1.value2, v1.value3, go2(v1.value4), v1.value5);
              }
              ;
              if (v2 instanceof GT) {
                return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go2(v1.value5));
              }
              ;
              if (v2 instanceof EQ) {
                return new Node(v1.value0, v1.value1, k, app(v1.value3)(v), v1.value4, v1.value5);
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 486, column 7 - line 489, column 44): " + [v2.constructor.name]);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 483, column 8 - line 489, column 44): " + [v1.constructor.name]);
          };
          return go2;
        };
      };
    };
  };
  var insert3 = function(dictOrd) {
    var compare9 = compare(dictOrd);
    return function(k) {
      return function(v) {
        var go2 = function(v1) {
          if (v1 instanceof Leaf2) {
            return singleton8(k)(v);
          }
          ;
          if (v1 instanceof Node) {
            var v2 = compare9(k)(v1.value2);
            if (v2 instanceof LT) {
              return unsafeBalancedNode(v1.value2, v1.value3, go2(v1.value4), v1.value5);
            }
            ;
            if (v2 instanceof GT) {
              return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go2(v1.value5));
            }
            ;
            if (v2 instanceof EQ) {
              return new Node(v1.value0, v1.value1, k, v, v1.value4, v1.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 471, column 7 - line 474, column 35): " + [v2.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 468, column 8 - line 474, column 35): " + [v1.constructor.name]);
        };
        return go2;
      };
    };
  };
  var foldableMap = {
    foldr: function(f) {
      return function(z) {
        var $lazy_go = $runtime_lazy5("go", "Data.Map.Internal", function() {
          return function(m$prime, z$prime) {
            if (m$prime instanceof Leaf2) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(172)(m$prime.value4, f(m$prime.value3)($lazy_go(172)(m$prime.value5, z$prime)));
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 169, column 26 - line 172, column 43): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(169);
        return function(m) {
          return go2(m, z);
        };
      };
    },
    foldl: function(f) {
      return function(z) {
        var $lazy_go = $runtime_lazy5("go", "Data.Map.Internal", function() {
          return function(z$prime, m$prime) {
            if (m$prime instanceof Leaf2) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(178)(f($lazy_go(178)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 175, column 26 - line 178, column 43): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(175);
        return function(m) {
          return go2(z, m);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty9 = mempty(dictMonoid);
      var append16 = append(dictMonoid.Semigroup0());
      return function(f) {
        var go2 = function(v) {
          if (v instanceof Leaf2) {
            return mempty9;
          }
          ;
          if (v instanceof Node) {
            return append16(go2(v.value4))(append16(f(v.value3))(go2(v.value5)));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 181, column 10 - line 184, column 28): " + [v.constructor.name]);
        };
        return go2;
      };
    }
  };
  var foldableWithIndexMap = {
    foldrWithIndex: function(f) {
      return function(z) {
        var $lazy_go = $runtime_lazy5("go", "Data.Map.Internal", function() {
          return function(m$prime, z$prime) {
            if (m$prime instanceof Leaf2) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(192)(m$prime.value4, f(m$prime.value2)(m$prime.value3)($lazy_go(192)(m$prime.value5, z$prime)));
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 189, column 26 - line 192, column 45): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(189);
        return function(m) {
          return go2(m, z);
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(z) {
        var $lazy_go = $runtime_lazy5("go", "Data.Map.Internal", function() {
          return function(z$prime, m$prime) {
            if (m$prime instanceof Leaf2) {
              return z$prime;
            }
            ;
            if (m$prime instanceof Node) {
              return $lazy_go(198)(f(m$prime.value2)($lazy_go(198)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 195, column 26 - line 198, column 45): " + [m$prime.constructor.name]);
          };
        });
        var go2 = $lazy_go(195);
        return function(m) {
          return go2(z, m);
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      var mempty9 = mempty(dictMonoid);
      var append16 = append(dictMonoid.Semigroup0());
      return function(f) {
        var go2 = function(v) {
          if (v instanceof Leaf2) {
            return mempty9;
          }
          ;
          if (v instanceof Node) {
            return append16(go2(v.value4))(append16(f(v.value2)(v.value3))(go2(v.value5)));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 201, column 10 - line 204, column 30): " + [v.constructor.name]);
        };
        return go2;
      };
    },
    Foldable0: function() {
      return foldableMap;
    }
  };
  var empty3 = /* @__PURE__ */ function() {
    return Leaf2.value;
  }();
  var fromFoldable4 = function(dictOrd) {
    var insert13 = insert3(dictOrd);
    return function(dictFoldable) {
      return foldl(dictFoldable)(function(m) {
        return function(v) {
          return insert13(v.value0)(v.value1)(m);
        };
      })(empty3);
    };
  };
  var fromFoldableWith = function(dictOrd) {
    var insertWith1 = insertWith(dictOrd);
    return function(dictFoldable) {
      var foldl5 = foldl(dictFoldable);
      return function(f) {
        var f$prime = insertWith1(flip(f));
        return foldl5(function(m) {
          return function(v) {
            return f$prime(v.value0)(v.value1)(m);
          };
        })(empty3);
      };
    };
  };
  var $$delete4 = function(dictOrd) {
    var compare9 = compare(dictOrd);
    return function(k) {
      var go2 = function(v) {
        if (v instanceof Leaf2) {
          return Leaf2.value;
        }
        ;
        if (v instanceof Node) {
          var v1 = compare9(k)(v.value2);
          if (v1 instanceof LT) {
            return unsafeBalancedNode(v.value2, v.value3, go2(v.value4), v.value5);
          }
          ;
          if (v1 instanceof GT) {
            return unsafeBalancedNode(v.value2, v.value3, v.value4, go2(v.value5));
          }
          ;
          if (v1 instanceof EQ) {
            return unsafeJoinNodes(v.value4, v.value5);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 498, column 7 - line 501, column 43): " + [v1.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 8 - line 501, column 43): " + [v.constructor.name]);
      };
      return go2;
    };
  };
  var alter2 = function(dictOrd) {
    var compare9 = compare(dictOrd);
    return function(f) {
      return function(k) {
        return function(m) {
          var v = unsafeSplit(compare9, k, m);
          var v2 = f(v.value0);
          if (v2 instanceof Nothing) {
            return unsafeJoinNodes(v.value1, v.value2);
          }
          ;
          if (v2 instanceof Just) {
            return unsafeBalancedNode(k, v2.value0, v.value1, v.value2);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 514, column 3 - line 518, column 41): " + [v2.constructor.name]);
        };
      };
    };
  };

  // output/Halogen.Data.OrdBox/index.js
  var OrdBox = /* @__PURE__ */ function() {
    function OrdBox2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    OrdBox2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new OrdBox2(value0, value1, value22);
        };
      };
    };
    return OrdBox2;
  }();
  var mkOrdBox = function(dictOrd) {
    return OrdBox.create(eq(dictOrd.Eq0()))(compare(dictOrd));
  };
  var eqOrdBox = {
    eq: function(v) {
      return function(v1) {
        return v.value0(v.value2)(v1.value2);
      };
    }
  };
  var ordOrdBox = {
    compare: function(v) {
      return function(v1) {
        return v.value1(v.value2)(v1.value2);
      };
    },
    Eq0: function() {
      return eqOrdBox;
    }
  };

  // output/Halogen.Data.Slot/index.js
  var ordTuple3 = /* @__PURE__ */ ordTuple(ordString)(ordOrdBox);
  var pop1 = /* @__PURE__ */ pop(ordTuple3);
  var lookup1 = /* @__PURE__ */ lookup2(ordTuple3);
  var insert1 = /* @__PURE__ */ insert3(ordTuple3);
  var pop2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key) {
            return function(v) {
              return pop1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key)))(v);
            };
          };
        };
      };
    };
  };
  var lookup3 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key) {
            return function(v) {
              return lookup1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key)))(v);
            };
          };
        };
      };
    };
  };
  var insert4 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key) {
            return function(val2) {
              return function(v) {
                return insert1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key)))(val2)(v);
              };
            };
          };
        };
      };
    };
  };
  var foreachSlot = function(dictApplicative) {
    var traverse_7 = traverse_(dictApplicative)(foldableMap);
    return function(v) {
      return function(k) {
        return traverse_7(function($54) {
          return k($54);
        })(v);
      };
    };
  };
  var empty4 = empty3;

  // output/DOM.HTML.Indexed.ScopeValue/index.js
  var ScopeRow = /* @__PURE__ */ function() {
    function ScopeRow2() {
    }
    ;
    ScopeRow2.value = new ScopeRow2();
    return ScopeRow2;
  }();
  var ScopeCol = /* @__PURE__ */ function() {
    function ScopeCol2() {
    }
    ;
    ScopeCol2.value = new ScopeCol2();
    return ScopeCol2;
  }();
  var ScopeRowGroup = /* @__PURE__ */ function() {
    function ScopeRowGroup2() {
    }
    ;
    ScopeRowGroup2.value = new ScopeRowGroup2();
    return ScopeRowGroup2;
  }();
  var ScopeColGroup = /* @__PURE__ */ function() {
    function ScopeColGroup2() {
    }
    ;
    ScopeColGroup2.value = new ScopeColGroup2();
    return ScopeColGroup2;
  }();
  var ScopeAuto = /* @__PURE__ */ function() {
    function ScopeAuto2() {
    }
    ;
    ScopeAuto2.value = new ScopeAuto2();
    return ScopeAuto2;
  }();
  var renderScopeValue = function(v) {
    if (v instanceof ScopeRow) {
      return "row";
    }
    ;
    if (v instanceof ScopeCol) {
      return "col";
    }
    ;
    if (v instanceof ScopeRowGroup) {
      return "rowgroup";
    }
    ;
    if (v instanceof ScopeColGroup) {
      return "colgroup";
    }
    ;
    if (v instanceof ScopeAuto) {
      return "auto";
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.ScopeValue (line 16, column 20 - line 21, column 22): " + [v.constructor.name]);
  };

  // output/Halogen.Query.Input/index.js
  var RefUpdate = /* @__PURE__ */ function() {
    function RefUpdate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RefUpdate2.create = function(value0) {
      return function(value1) {
        return new RefUpdate2(value0, value1);
      };
    };
    return RefUpdate2;
  }();
  var Action = /* @__PURE__ */ function() {
    function Action3(value0) {
      this.value0 = value0;
    }
    ;
    Action3.create = function(value0) {
      return new Action3(value0);
    };
    return Action3;
  }();

  // output/Halogen.VDom.Machine/index.js
  var Step = /* @__PURE__ */ function() {
    function Step3(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Step3.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Step3(value0, value1, value22, value32);
          };
        };
      };
    };
    return Step3;
  }();
  var unStep = unsafeCoerce2;
  var step = function(v, a2) {
    return v.value2(v.value1, a2);
  };
  var mkStep = unsafeCoerce2;
  var halt = function(v) {
    return v.value3(v.value1);
  };
  var extract2 = /* @__PURE__ */ unStep(function(v) {
    return v.value0;
  });

  // output/Halogen.VDom.Types/index.js
  var map11 = /* @__PURE__ */ map(functorArray);
  var map13 = /* @__PURE__ */ map(functorTuple);
  var Text = /* @__PURE__ */ function() {
    function Text2(value0) {
      this.value0 = value0;
    }
    ;
    Text2.create = function(value0) {
      return new Text2(value0);
    };
    return Text2;
  }();
  var Elem = /* @__PURE__ */ function() {
    function Elem2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Elem2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Elem2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Elem2;
  }();
  var Keyed = /* @__PURE__ */ function() {
    function Keyed2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Keyed2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Keyed2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Keyed2;
  }();
  var Widget = /* @__PURE__ */ function() {
    function Widget2(value0) {
      this.value0 = value0;
    }
    ;
    Widget2.create = function(value0) {
      return new Widget2(value0);
    };
    return Widget2;
  }();
  var Grafted = /* @__PURE__ */ function() {
    function Grafted2(value0) {
      this.value0 = value0;
    }
    ;
    Grafted2.create = function(value0) {
      return new Grafted2(value0);
    };
    return Grafted2;
  }();
  var Graft = /* @__PURE__ */ function() {
    function Graft2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Graft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Graft2(value0, value1, value22);
        };
      };
    };
    return Graft2;
  }();
  var unGraft = function(f) {
    return function($61) {
      return f($61);
    };
  };
  var graft = unsafeCoerce2;
  var bifunctorGraft = {
    bimap: function(f) {
      return function(g) {
        return unGraft(function(v) {
          return graft(new Graft(function($63) {
            return f(v.value0($63));
          }, function($64) {
            return g(v.value1($64));
          }, v.value2));
        });
      };
    }
  };
  var bimap3 = /* @__PURE__ */ bimap(bifunctorGraft);
  var runGraft = /* @__PURE__ */ unGraft(function(v) {
    var go2 = function(v2) {
      if (v2 instanceof Text) {
        return new Text(v2.value0);
      }
      ;
      if (v2 instanceof Elem) {
        return new Elem(v2.value0, v2.value1, v.value0(v2.value2), map11(go2)(v2.value3));
      }
      ;
      if (v2 instanceof Keyed) {
        return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), map11(map13(go2))(v2.value3));
      }
      ;
      if (v2 instanceof Widget) {
        return new Widget(v.value1(v2.value0));
      }
      ;
      if (v2 instanceof Grafted) {
        return new Grafted(bimap3(v.value0)(v.value1)(v2.value0));
      }
      ;
      throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [v2.constructor.name]);
    };
    return go2(v.value2);
  });

  // output/Halogen.VDom.Util/foreign.js
  function unsafeGetAny(key, obj) {
    return obj[key];
  }
  function unsafeHasAny(key, obj) {
    return obj.hasOwnProperty(key);
  }
  function unsafeSetAny(key, val2, obj) {
    obj[key] = val2;
  }
  function forE2(a2, f) {
    var b2 = [];
    for (var i2 = 0; i2 < a2.length; i2++) {
      b2.push(f(i2, a2[i2]));
    }
    return b2;
  }
  function forEachE(a2, f) {
    for (var i2 = 0; i2 < a2.length; i2++) {
      f(a2[i2]);
    }
  }
  function forInE(o, f) {
    var ks = Object.keys(o);
    for (var i2 = 0; i2 < ks.length; i2++) {
      var k = ks[i2];
      f(k, o[k]);
    }
  }
  function diffWithIxE(a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i2 = 0;
    while (1) {
      if (i2 < l1) {
        if (i2 < l2) {
          a3.push(f1(i2, a1[i2], a2[i2]));
        } else {
          f2(i2, a1[i2]);
        }
      } else if (i2 < l2) {
        a3.push(f3(i2, a2[i2]));
      } else {
        break;
      }
      i2++;
    }
    return a3;
  }
  function strMapWithIxE(as, fk, f) {
    var o = {};
    for (var i2 = 0; i2 < as.length; i2++) {
      var a2 = as[i2];
      var k = fk(a2);
      o[k] = f(k, i2, a2);
    }
    return o;
  }
  function diffWithKeyAndIxE(o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i2 = 0; i2 < as.length; i2++) {
      var a2 = as[i2];
      var k = fk(a2);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i2, o1[k], a2);
      } else {
        o2[k] = f3(k, i2, a2);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  }
  function refEq2(a2, b2) {
    return a2 === b2;
  }
  function createTextNode(s, doc) {
    return doc.createTextNode(s);
  }
  function setTextContent(s, n) {
    n.textContent = s;
  }
  function createElement(ns, name18, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name18);
    } else {
      return doc.createElement(name18);
    }
  }
  function insertChildIx(i2, a2, b2) {
    var n = b2.childNodes.item(i2) || null;
    if (n !== a2) {
      b2.insertBefore(a2, n);
    }
  }
  function removeChild(a2, b2) {
    if (b2 && a2.parentNode === b2) {
      b2.removeChild(a2);
    }
  }
  function parentNode(a2) {
    return a2.parentNode;
  }
  function setAttribute(ns, attr3, val2, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr3, val2);
    } else {
      el.setAttribute(attr3, val2);
    }
  }
  function removeAttribute(ns, attr3, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr3);
    } else {
      el.removeAttribute(attr3);
    }
  }
  function hasAttribute(ns, attr3, el) {
    if (ns != null) {
      return el.hasAttributeNS(ns, attr3);
    } else {
      return el.hasAttribute(attr3);
    }
  }
  function addEventListener(ev, listener, el) {
    el.addEventListener(ev, listener, false);
  }
  function removeEventListener(ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  }
  var jsUndefined = void 0;

  // output/Halogen.VDom.Util/index.js
  var unsafeLookup = unsafeGetAny;
  var unsafeFreeze2 = unsafeCoerce2;
  var pokeMutMap = unsafeSetAny;
  var newMutMap = newImpl;

  // output/Web.DOM.Element/foreign.js
  var getProp = function(name18) {
    return function(doctype) {
      return doctype[name18];
    };
  };
  var _namespaceURI = getProp("namespaceURI");
  var _prefix = getProp("prefix");
  var localName = getProp("localName");
  var tagName = getProp("tagName");

  // output/Web.DOM.ParentNode/foreign.js
  var getEffProp = function(name18) {
    return function(node) {
      return function() {
        return node[name18];
      };
    };
  };
  var children = getEffProp("children");
  var _firstElementChild = getEffProp("firstElementChild");
  var _lastElementChild = getEffProp("lastElementChild");
  var childElementCount = getEffProp("childElementCount");
  function _querySelector(selector) {
    return function(node) {
      return function() {
        return node.querySelector(selector);
      };
    };
  }

  // output/Web.DOM.ParentNode/index.js
  var map14 = /* @__PURE__ */ map(functorEffect);
  var querySelector = function(qs) {
    var $2 = map14(toMaybe);
    var $3 = _querySelector(qs);
    return function($4) {
      return $2($3($4));
    };
  };

  // output/Web.DOM.Element/index.js
  var toNode = unsafeCoerce2;

  // output/Halogen.VDom.DOM/index.js
  var $runtime_lazy6 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var haltWidget = function(v) {
    return halt(v.widget);
  };
  var $lazy_patchWidget = /* @__PURE__ */ $runtime_lazy6("patchWidget", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchWidget(291)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Widget) {
        var res = step(state3.widget, vdom.value0);
        var res$prime = unStep(function(v) {
          return mkStep(new Step(v.value0, {
            build: state3.build,
            widget: res
          }, $lazy_patchWidget(296), haltWidget));
        })(res);
        return res$prime;
      }
      ;
      haltWidget(state3);
      return state3.build(vdom);
    };
  });
  var patchWidget = /* @__PURE__ */ $lazy_patchWidget(286);
  var haltText = function(v) {
    var parent2 = parentNode(v.node);
    return removeChild(v.node, parent2);
  };
  var $lazy_patchText = /* @__PURE__ */ $runtime_lazy6("patchText", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchText(82)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Text) {
        if (state3.value === vdom.value0) {
          return mkStep(new Step(state3.node, state3, $lazy_patchText(85), haltText));
        }
        ;
        if (otherwise) {
          var nextState = {
            build: state3.build,
            node: state3.node,
            value: vdom.value0
          };
          setTextContent(vdom.value0, state3.node);
          return mkStep(new Step(state3.node, nextState, $lazy_patchText(89), haltText));
        }
        ;
      }
      ;
      haltText(state3);
      return state3.build(vdom);
    };
  });
  var patchText = /* @__PURE__ */ $lazy_patchText(77);
  var haltKeyed = function(v) {
    var parent2 = parentNode(v.node);
    removeChild(v.node, parent2);
    forInE(v.children, function(v1, s) {
      return halt(s);
    });
    return halt(v.attrs);
  };
  var haltElem = function(v) {
    var parent2 = parentNode(v.node);
    removeChild(v.node, parent2);
    forEachE(v.children, halt);
    return halt(v.attrs);
  };
  var eqElemSpec = function(ns1, v, ns2, v1) {
    var $63 = v === v1;
    if ($63) {
      if (ns1 instanceof Just && (ns2 instanceof Just && ns1.value0 === ns2.value0)) {
        return true;
      }
      ;
      if (ns1 instanceof Nothing && ns2 instanceof Nothing) {
        return true;
      }
      ;
      return false;
    }
    ;
    return false;
  };
  var $lazy_patchElem = /* @__PURE__ */ $runtime_lazy6("patchElem", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchElem(135)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Elem && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v = length(vdom.value3);
        var v1 = length(state3.children);
        if (v1 === 0 && v === 0) {
          var attrs2 = step(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children
          };
          return mkStep(new Step(state3.node, nextState, $lazy_patchElem(149), haltElem));
        }
        ;
        var onThis = function(v2, s) {
          return halt(s);
        };
        var onThese = function(ix9, s, v2) {
          var res = step(s, v2);
          insertChildIx(ix9, extract2(res), state3.node);
          return res;
        };
        var onThat = function(ix9, v2) {
          var res = state3.build(v2);
          insertChildIx(ix9, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithIxE(state3.children, vdom.value3, onThese, onThis, onThat);
        var attrs2 = step(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2
        };
        return mkStep(new Step(state3.node, nextState, $lazy_patchElem(172), haltElem));
      }
      ;
      haltElem(state3);
      return state3.build(vdom);
    };
  });
  var patchElem = /* @__PURE__ */ $lazy_patchElem(130);
  var $lazy_patchKeyed = /* @__PURE__ */ $runtime_lazy6("patchKeyed", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchKeyed(222)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Keyed && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v = length(vdom.value3);
        if (state3.length === 0 && v === 0) {
          var attrs2 = step(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children,
            length: 0
          };
          return mkStep(new Step(state3.node, nextState, $lazy_patchKeyed(237), haltKeyed));
        }
        ;
        var onThis = function(v2, s) {
          return halt(s);
        };
        var onThese = function(v2, ix$prime, s, v3) {
          var res = step(s, v3.value1);
          insertChildIx(ix$prime, extract2(res), state3.node);
          return res;
        };
        var onThat = function(v2, ix9, v3) {
          var res = state3.build(v3.value1);
          insertChildIx(ix9, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithKeyAndIxE(state3.children, vdom.value3, fst, onThese, onThis, onThat);
        var attrs2 = step(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2,
          length: v
        };
        return mkStep(new Step(state3.node, nextState, $lazy_patchKeyed(261), haltKeyed));
      }
      ;
      haltKeyed(state3);
      return state3.build(vdom);
    };
  });
  var patchKeyed = /* @__PURE__ */ $lazy_patchKeyed(217);
  var buildWidget = function(v, build2, w) {
    var res = v.buildWidget(v)(w);
    var res$prime = unStep(function(v1) {
      return mkStep(new Step(v1.value0, {
        build: build2,
        widget: res
      }, patchWidget, haltWidget));
    })(res);
    return res$prime;
  };
  var buildText = function(v, build2, s) {
    var node = createTextNode(s, v.document);
    var state3 = {
      build: build2,
      node,
      value: s
    };
    return mkStep(new Step(node, state3, patchText, haltText));
  };
  var buildKeyed = function(v, build2, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v.document);
    var node = toNode(el);
    var onChild = function(v1, ix9, v2) {
      var res = build2(v2.value1);
      insertChildIx(ix9, extract2(res), node);
      return res;
    };
    var children2 = strMapWithIxE(ch1, fst, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state3 = {
      build: build2,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2,
      length: length(ch1)
    };
    return mkStep(new Step(node, state3, patchKeyed, haltKeyed));
  };
  var buildElem = function(v, build2, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v.document);
    var node = toNode(el);
    var onChild = function(ix9, child) {
      var res = build2(child);
      insertChildIx(ix9, extract2(res), node);
      return res;
    };
    var children2 = forE2(ch1, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state3 = {
      build: build2,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2
    };
    return mkStep(new Step(node, state3, patchElem, haltElem));
  };
  var buildVDom = function(spec) {
    var $lazy_build = $runtime_lazy6("build", "Halogen.VDom.DOM", function() {
      return function(v) {
        if (v instanceof Text) {
          return buildText(spec, $lazy_build(59), v.value0);
        }
        ;
        if (v instanceof Elem) {
          return buildElem(spec, $lazy_build(60), v.value0, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof Keyed) {
          return buildKeyed(spec, $lazy_build(61), v.value0, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof Widget) {
          return buildWidget(spec, $lazy_build(62), v.value0);
        }
        ;
        if (v instanceof Grafted) {
          return $lazy_build(63)(runGraft(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v.constructor.name]);
      };
    });
    var build2 = $lazy_build(58);
    return build2;
  };

  // output/Web.Event.EventTarget/foreign.js
  function eventListener(fn) {
    return function() {
      return function(event) {
        return fn(event)();
      };
    };
  }
  function addEventListener2(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target7) {
          return function() {
            return target7.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }
  function removeEventListener2(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target7) {
          return function() {
            return target7.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }

  // output/Halogen.VDom.DOM.Prop/index.js
  var $runtime_lazy7 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var Created = /* @__PURE__ */ function() {
    function Created2(value0) {
      this.value0 = value0;
    }
    ;
    Created2.create = function(value0) {
      return new Created2(value0);
    };
    return Created2;
  }();
  var Removed = /* @__PURE__ */ function() {
    function Removed2(value0) {
      this.value0 = value0;
    }
    ;
    Removed2.create = function(value0) {
      return new Removed2(value0);
    };
    return Removed2;
  }();
  var Attribute = /* @__PURE__ */ function() {
    function Attribute2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Attribute2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Attribute2(value0, value1, value22);
        };
      };
    };
    return Attribute2;
  }();
  var Property = /* @__PURE__ */ function() {
    function Property2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Property2.create = function(value0) {
      return function(value1) {
        return new Property2(value0, value1);
      };
    };
    return Property2;
  }();
  var Handler = /* @__PURE__ */ function() {
    function Handler2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Handler2.create = function(value0) {
      return function(value1) {
        return new Handler2(value0, value1);
      };
    };
    return Handler2;
  }();
  var Ref = /* @__PURE__ */ function() {
    function Ref2(value0) {
      this.value0 = value0;
    }
    ;
    Ref2.create = function(value0) {
      return new Ref2(value0);
    };
    return Ref2;
  }();
  var unsafeGetProperty = unsafeGetAny;
  var setProperty = unsafeSetAny;
  var removeProperty = function(key, el) {
    var v = hasAttribute(nullImpl, key, el);
    if (v) {
      return removeAttribute(nullImpl, key, el);
    }
    ;
    var v1 = typeOf(unsafeGetAny(key, el));
    if (v1 === "string") {
      return unsafeSetAny(key, "", el);
    }
    ;
    if (key === "rowSpan") {
      return unsafeSetAny(key, 1, el);
    }
    ;
    if (key === "colSpan") {
      return unsafeSetAny(key, 1, el);
    }
    ;
    return unsafeSetAny(key, jsUndefined, el);
  };
  var propToStrKey = function(v) {
    if (v instanceof Attribute && v.value0 instanceof Just) {
      return "attr/" + (v.value0.value0 + (":" + v.value1));
    }
    ;
    if (v instanceof Attribute) {
      return "attr/:" + v.value1;
    }
    ;
    if (v instanceof Property) {
      return "prop/" + v.value0;
    }
    ;
    if (v instanceof Handler) {
      return "handler/" + v.value0;
    }
    ;
    if (v instanceof Ref) {
      return "ref";
    }
    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [v.constructor.name]);
  };
  var propFromString = unsafeCoerce2;
  var propFromNumber = unsafeCoerce2;
  var propFromInt = unsafeCoerce2;
  var propFromBoolean = unsafeCoerce2;
  var buildProp = function(emit) {
    return function(el) {
      var removeProp = function(prevEvents) {
        return function(v, v1) {
          if (v1 instanceof Attribute) {
            return removeAttribute(toNullable(v1.value0), v1.value1, el);
          }
          ;
          if (v1 instanceof Property) {
            return removeProperty(v1.value0, el);
          }
          ;
          if (v1 instanceof Handler) {
            var handler3 = unsafeLookup(v1.value0, prevEvents);
            return removeEventListener(v1.value0, fst(handler3), el);
          }
          ;
          if (v1 instanceof Ref) {
            return unit;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [v1.constructor.name]);
        };
      };
      var mbEmit = function(v) {
        if (v instanceof Just) {
          return emit(v.value0)();
        }
        ;
        return unit;
      };
      var haltProp = function(state3) {
        var v = lookup("ref")(state3.props);
        if (v instanceof Just && v.value0 instanceof Ref) {
          return mbEmit(v.value0.value0(new Removed(el)));
        }
        ;
        return unit;
      };
      var diffProp = function(prevEvents, events) {
        return function(v, v1, v11, v2) {
          if (v11 instanceof Attribute && v2 instanceof Attribute) {
            var $66 = v11.value2 === v2.value2;
            if ($66) {
              return v2;
            }
            ;
            setAttribute(toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }
          ;
          if (v11 instanceof Property && v2 instanceof Property) {
            var v4 = refEq2(v11.value1, v2.value1);
            if (v4) {
              return v2;
            }
            ;
            if (v2.value0 === "value") {
              var elVal = unsafeGetProperty("value", el);
              var $75 = refEq2(elVal, v2.value1);
              if ($75) {
                return v2;
              }
              ;
              setProperty(v2.value0, v2.value1, el);
              return v2;
            }
            ;
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }
          ;
          if (v11 instanceof Handler && v2 instanceof Handler) {
            var handler3 = unsafeLookup(v2.value0, prevEvents);
            write(v2.value1)(snd(handler3))();
            pokeMutMap(v2.value0, handler3, events);
            return v2;
          }
          ;
          return v2;
        };
      };
      var applyProp = function(events) {
        return function(v, v1, v2) {
          if (v2 instanceof Attribute) {
            setAttribute(toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }
          ;
          if (v2 instanceof Property) {
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }
          ;
          if (v2 instanceof Handler) {
            var v3 = unsafeGetAny(v2.value0, events);
            if (unsafeHasAny(v2.value0, events)) {
              write(v2.value1)(snd(v3))();
              return v2;
            }
            ;
            var ref2 = $$new(v2.value1)();
            var listener = eventListener(function(ev) {
              return function __do2() {
                var f$prime = read(ref2)();
                return mbEmit(f$prime(ev));
              };
            })();
            pokeMutMap(v2.value0, new Tuple(listener, ref2), events);
            addEventListener(v2.value0, listener, el);
            return v2;
          }
          ;
          if (v2 instanceof Ref) {
            mbEmit(v2.value0(new Created(el)));
            return v2;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [v2.constructor.name]);
        };
      };
      var $lazy_patchProp = $runtime_lazy7("patchProp", "Halogen.VDom.DOM.Prop", function() {
        return function(state3, ps2) {
          var events = newMutMap();
          var onThis = removeProp(state3.events);
          var onThese = diffProp(state3.events, events);
          var onThat = applyProp(events);
          var props = diffWithKeyAndIxE(state3.props, ps2, propToStrKey, onThese, onThis, onThat);
          var nextState = {
            events: unsafeFreeze2(events),
            props
          };
          return mkStep(new Step(unit, nextState, $lazy_patchProp(100), haltProp));
        };
      });
      var patchProp = $lazy_patchProp(87);
      var renderProp = function(ps1) {
        var events = newMutMap();
        var ps1$prime = strMapWithIxE(ps1, propToStrKey, applyProp(events));
        var state3 = {
          events: unsafeFreeze2(events),
          props: ps1$prime
        };
        return mkStep(new Step(unit, state3, patchProp, haltProp));
      };
      return renderProp;
    };
  };

  // output/Web.HTML.Common/index.js
  var ClassName = function(x2) {
    return x2;
  };

  // output/Halogen.HTML.Core/index.js
  var HTML = function(x2) {
    return x2;
  };
  var widget = function($28) {
    return HTML(Widget.create($28));
  };
  var toPropValue = function(dict) {
    return dict.toPropValue;
  };
  var text = function($29) {
    return HTML(Text.create($29));
  };
  var prop = function(dictIsProp) {
    var toPropValue1 = toPropValue(dictIsProp);
    return function(v) {
      var $31 = Property.create(v);
      return function($32) {
        return $31(toPropValue1($32));
      };
    };
  };
  var isPropString = {
    toPropValue: propFromString
  };
  var isPropScopeValue = {
    toPropValue: function($37) {
      return propFromString(renderScopeValue($37));
    }
  };
  var isPropNumber = {
    toPropValue: propFromNumber
  };
  var isPropInt = {
    toPropValue: propFromInt
  };
  var isPropInputType = {
    toPropValue: function($45) {
      return propFromString(renderInputType($45));
    }
  };
  var isPropBoolean = {
    toPropValue: propFromBoolean
  };
  var handler = /* @__PURE__ */ function() {
    return Handler.create;
  }();
  var element = function(ns) {
    return function(name18) {
      return function(props) {
        return function(children2) {
          return new Elem(ns, name18, props, children2);
        };
      };
    };
  };
  var attr = function(ns) {
    return function(v) {
      return Attribute.create(ns)(v);
    };
  };

  // output/Control.Applicative.Free/index.js
  var identity11 = /* @__PURE__ */ identity(categoryFn);
  var Pure = /* @__PURE__ */ function() {
    function Pure2(value0) {
      this.value0 = value0;
    }
    ;
    Pure2.create = function(value0) {
      return new Pure2(value0);
    };
    return Pure2;
  }();
  var Lift = /* @__PURE__ */ function() {
    function Lift4(value0) {
      this.value0 = value0;
    }
    ;
    Lift4.create = function(value0) {
      return new Lift4(value0);
    };
    return Lift4;
  }();
  var Ap = /* @__PURE__ */ function() {
    function Ap2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Ap2.create = function(value0) {
      return function(value1) {
        return new Ap2(value0, value1);
      };
    };
    return Ap2;
  }();
  var mkAp = function(fba) {
    return function(fb) {
      return new Ap(fba, fb);
    };
  };
  var liftFreeAp = /* @__PURE__ */ function() {
    return Lift.create;
  }();
  var goLeft = function(dictApplicative) {
    var pure29 = pure(dictApplicative);
    return function(fStack) {
      return function(valStack) {
        return function(nat) {
          return function(func) {
            return function(count) {
              if (func instanceof Pure) {
                return new Tuple(new Cons({
                  func: pure29(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Lift) {
                return new Tuple(new Cons({
                  func: nat(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Ap) {
                return goLeft(dictApplicative)(fStack)(cons2(func.value1)(valStack))(nat)(func.value0)(count + 1 | 0);
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
            };
          };
        };
      };
    };
  };
  var goApply = function(dictApplicative) {
    var apply6 = apply(dictApplicative.Apply0());
    return function(fStack) {
      return function(vals) {
        return function(gVal) {
          if (fStack instanceof Nil) {
            return new Left(gVal);
          }
          ;
          if (fStack instanceof Cons) {
            var gRes = apply6(fStack.value0.func)(gVal);
            var $31 = fStack.value0.count === 1;
            if ($31) {
              if (fStack.value1 instanceof Nil) {
                return new Left(gRes);
              }
              ;
              return goApply(dictApplicative)(fStack.value1)(vals)(gRes);
            }
            ;
            if (vals instanceof Nil) {
              return new Left(gRes);
            }
            ;
            if (vals instanceof Cons) {
              return new Right(new Tuple(new Cons({
                func: gRes,
                count: fStack.value0.count - 1 | 0
              }, fStack.value1), new NonEmpty(vals.value0, vals.value1)));
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
        };
      };
    };
  };
  var functorFreeAp = {
    map: function(f) {
      return function(x2) {
        return mkAp(new Pure(f))(x2);
      };
    }
  };
  var foldFreeAp = function(dictApplicative) {
    var goApply1 = goApply(dictApplicative);
    var pure29 = pure(dictApplicative);
    var goLeft1 = goLeft(dictApplicative);
    return function(nat) {
      return function(z) {
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
            if (v.value1.value0 instanceof Pure) {
              var v1 = goApply1(v.value0)(v.value1.value1)(pure29(v.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v.value1.value0 instanceof Lift) {
              var v1 = goApply1(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v.value1.value0 instanceof Ap) {
              var nextVals = new NonEmpty(v.value1.value0.value1, v.value1.value1);
              $copy_v = goLeft1(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [v.value1.value0.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2(new Tuple(Nil.value, singleton6(z)));
      };
    };
  };
  var retractFreeAp = function(dictApplicative) {
    return foldFreeAp(dictApplicative)(identity11);
  };
  var applyFreeAp = {
    apply: function(fba) {
      return function(fb) {
        return mkAp(fba)(fb);
      };
    },
    Functor0: function() {
      return functorFreeAp;
    }
  };
  var applicativeFreeAp = /* @__PURE__ */ function() {
    return {
      pure: Pure.create,
      Apply0: function() {
        return applyFreeAp;
      }
    };
  }();
  var foldFreeAp1 = /* @__PURE__ */ foldFreeAp(applicativeFreeAp);
  var hoistFreeAp = function(f) {
    return foldFreeAp1(function($54) {
      return liftFreeAp(f($54));
    });
  };

  // output/Data.CatQueue/index.js
  var CatQueue = /* @__PURE__ */ function() {
    function CatQueue2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatQueue2.create = function(value0) {
      return function(value1) {
        return new CatQueue2(value0, value1);
      };
    };
    return CatQueue2;
  }();
  var uncons4 = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
        $tco_done = true;
        return Nothing.value;
      }
      ;
      if (v.value0 instanceof Nil) {
        $copy_v = new CatQueue(reverse2(v.value1), Nil.value);
        return;
      }
      ;
      if (v.value0 instanceof Cons) {
        $tco_done = true;
        return new Just(new Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
      }
      ;
      throw new Error("Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): " + [v.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var snoc3 = function(v) {
    return function(a2) {
      return new CatQueue(v.value0, new Cons(a2, v.value1));
    };
  };
  var $$null4 = function(v) {
    if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var empty5 = /* @__PURE__ */ function() {
    return new CatQueue(Nil.value, Nil.value);
  }();

  // output/Data.CatList/index.js
  var CatNil = /* @__PURE__ */ function() {
    function CatNil2() {
    }
    ;
    CatNil2.value = new CatNil2();
    return CatNil2;
  }();
  var CatCons = /* @__PURE__ */ function() {
    function CatCons2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatCons2.create = function(value0) {
      return function(value1) {
        return new CatCons2(value0, value1);
      };
    };
    return CatCons2;
  }();
  var link = function(v) {
    return function(v1) {
      if (v instanceof CatNil) {
        return v1;
      }
      ;
      if (v1 instanceof CatNil) {
        return v;
      }
      ;
      if (v instanceof CatCons) {
        return new CatCons(v.value0, snoc3(v.value1)(v1));
      }
      ;
      throw new Error("Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var foldr3 = function(k) {
    return function(b2) {
      return function(q2) {
        var foldl5 = function($copy_v) {
          return function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1, v2) {
                if (v2 instanceof Nil) {
                  $tco_done = true;
                  return v1;
                }
                ;
                if (v2 instanceof Cons) {
                  $tco_var_v = v;
                  $tco_var_v1 = v(v1)(v2.value0);
                  $copy_v2 = v2.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
        };
        var go2 = function($copy_xs) {
          return function($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
              var v = uncons4(xs);
              if (v instanceof Nothing) {
                $tco_done1 = true;
                return foldl5(function(x2) {
                  return function(i2) {
                    return i2(x2);
                  };
                })(b2)(ys);
              }
              ;
              if (v instanceof Just) {
                $tco_var_xs = v.value0.value1;
                $copy_ys = new Cons(k(v.value0.value0), ys);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            }
            ;
            return $tco_result;
          };
        };
        return go2(q2)(Nil.value);
      };
    };
  };
  var uncons5 = function(v) {
    if (v instanceof CatNil) {
      return Nothing.value;
    }
    ;
    if (v instanceof CatCons) {
      return new Just(new Tuple(v.value0, function() {
        var $66 = $$null4(v.value1);
        if ($66) {
          return CatNil.value;
        }
        ;
        return foldr3(link)(CatNil.value)(v.value1);
      }()));
    }
    ;
    throw new Error("Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): " + [v.constructor.name]);
  };
  var empty6 = /* @__PURE__ */ function() {
    return CatNil.value;
  }();
  var append3 = link;
  var semigroupCatList = {
    append: append3
  };
  var snoc4 = function(cat) {
    return function(a2) {
      return append3(cat)(new CatCons(a2, empty5));
    };
  };

  // output/Control.Monad.Free/index.js
  var $runtime_lazy8 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var append4 = /* @__PURE__ */ append(semigroupCatList);
  var Free = /* @__PURE__ */ function() {
    function Free2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Free2.create = function(value0) {
      return function(value1) {
        return new Free2(value0, value1);
      };
    };
    return Free2;
  }();
  var Return = /* @__PURE__ */ function() {
    function Return2(value0) {
      this.value0 = value0;
    }
    ;
    Return2.create = function(value0) {
      return new Return2(value0);
    };
    return Return2;
  }();
  var Bind = /* @__PURE__ */ function() {
    function Bind2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Bind2.create = function(value0) {
      return function(value1) {
        return new Bind2(value0, value1);
      };
    };
    return Bind2;
  }();
  var toView = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      var runExpF = function(v22) {
        return v22;
      };
      var concatF = function(v22) {
        return function(r) {
          return new Free(v22.value0, append4(v22.value1)(r));
        };
      };
      if (v.value0 instanceof Return) {
        var v2 = uncons5(v.value1);
        if (v2 instanceof Nothing) {
          $tco_done = true;
          return new Return(v.value0.value0);
        }
        ;
        if (v2 instanceof Just) {
          $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v2.constructor.name]);
      }
      ;
      if (v.value0 instanceof Bind) {
        $tco_done = true;
        return new Bind(v.value0.value0, function(a2) {
          return concatF(v.value0.value1(a2))(v.value1);
        });
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v.value0.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var fromView = function(f) {
    return new Free(f, empty6);
  };
  var freeMonad = {
    Applicative0: function() {
      return freeApplicative;
    },
    Bind1: function() {
      return freeBind;
    }
  };
  var freeFunctor = {
    map: function(k) {
      return function(f) {
        return bindFlipped(freeBind)(function() {
          var $189 = pure(freeApplicative);
          return function($190) {
            return $189(k($190));
          };
        }())(f);
      };
    }
  };
  var freeBind = {
    bind: function(v) {
      return function(k) {
        return new Free(v.value0, snoc4(v.value1)(k));
      };
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var freeApplicative = {
    pure: function($191) {
      return fromView(Return.create($191));
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var $lazy_freeApply = /* @__PURE__ */ $runtime_lazy8("freeApply", "Control.Monad.Free", function() {
    return {
      apply: ap(freeMonad),
      Functor0: function() {
        return freeFunctor;
      }
    };
  });
  var freeApply = /* @__PURE__ */ $lazy_freeApply(77);
  var pure5 = /* @__PURE__ */ pure(freeApplicative);
  var liftF = function(f) {
    return fromView(new Bind(f, function($192) {
      return pure5($192);
    }));
  };
  var foldFree = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var map119 = map(Monad0.Bind1().Apply0().Functor0());
    var pure113 = pure(Monad0.Applicative0());
    var tailRecM5 = tailRecM(dictMonadRec);
    return function(k) {
      var go2 = function(f) {
        var v = toView(f);
        if (v instanceof Return) {
          return map119(Done.create)(pure113(v.value0));
        }
        ;
        if (v instanceof Bind) {
          return map119(function($199) {
            return Loop.create(v.value1($199));
          })(k(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v.constructor.name]);
      };
      return tailRecM5(go2);
    };
  };

  // output/Halogen.Query.ChildQuery/index.js
  var ChildQuery = /* @__PURE__ */ function() {
    function ChildQuery3(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ChildQuery3.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ChildQuery3(value0, value1, value22);
        };
      };
    };
    return ChildQuery3;
  }();
  var unChildQueryBox = unsafeCoerce2;
  var mkChildQueryBox = unsafeCoerce2;

  // output/Unsafe.Reference/foreign.js
  function reallyUnsafeRefEq(a2) {
    return function(b2) {
      return a2 === b2;
    };
  }

  // output/Unsafe.Reference/index.js
  var unsafeRefEq = reallyUnsafeRefEq;

  // output/Halogen.Subscription/index.js
  var $$void5 = /* @__PURE__ */ $$void(functorEffect);
  var coerce3 = /* @__PURE__ */ coerce();
  var bind2 = /* @__PURE__ */ bind(bindEffect);
  var append5 = /* @__PURE__ */ append(semigroupArray);
  var traverse_2 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_1 = /* @__PURE__ */ traverse_2(foldableArray);
  var unsubscribe = function(v) {
    return v;
  };
  var subscribe = function(v) {
    return function(k) {
      return v(function($76) {
        return $$void5(k($76));
      });
    };
  };
  var notify = function(v) {
    return function(a2) {
      return v(a2);
    };
  };
  var makeEmitter = coerce3;
  var create = function __do() {
    var subscribers = $$new([])();
    return {
      emitter: function(k) {
        return function __do2() {
          modify_(function(v) {
            return append5(v)([k]);
          })(subscribers)();
          return modify_(deleteBy(unsafeRefEq)(k))(subscribers);
        };
      },
      listener: function(a2) {
        return bind2(read(subscribers))(traverse_1(function(k) {
          return k(a2);
        }));
      }
    };
  };

  // output/Halogen.Query.HalogenM/index.js
  var identity12 = /* @__PURE__ */ identity(categoryFn);
  var lookup4 = /* @__PURE__ */ lookup3();
  var SubscriptionId = function(x2) {
    return x2;
  };
  var ForkId = function(x2) {
    return x2;
  };
  var State = /* @__PURE__ */ function() {
    function State2(value0) {
      this.value0 = value0;
    }
    ;
    State2.create = function(value0) {
      return new State2(value0);
    };
    return State2;
  }();
  var Subscribe = /* @__PURE__ */ function() {
    function Subscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Subscribe2.create = function(value0) {
      return function(value1) {
        return new Subscribe2(value0, value1);
      };
    };
    return Subscribe2;
  }();
  var Unsubscribe = /* @__PURE__ */ function() {
    function Unsubscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Unsubscribe2.create = function(value0) {
      return function(value1) {
        return new Unsubscribe2(value0, value1);
      };
    };
    return Unsubscribe2;
  }();
  var Lift2 = /* @__PURE__ */ function() {
    function Lift4(value0) {
      this.value0 = value0;
    }
    ;
    Lift4.create = function(value0) {
      return new Lift4(value0);
    };
    return Lift4;
  }();
  var ChildQuery2 = /* @__PURE__ */ function() {
    function ChildQuery3(value0) {
      this.value0 = value0;
    }
    ;
    ChildQuery3.create = function(value0) {
      return new ChildQuery3(value0);
    };
    return ChildQuery3;
  }();
  var Raise = /* @__PURE__ */ function() {
    function Raise2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Raise2.create = function(value0) {
      return function(value1) {
        return new Raise2(value0, value1);
      };
    };
    return Raise2;
  }();
  var Par = /* @__PURE__ */ function() {
    function Par2(value0) {
      this.value0 = value0;
    }
    ;
    Par2.create = function(value0) {
      return new Par2(value0);
    };
    return Par2;
  }();
  var Fork = /* @__PURE__ */ function() {
    function Fork2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Fork2.create = function(value0) {
      return function(value1) {
        return new Fork2(value0, value1);
      };
    };
    return Fork2;
  }();
  var Join = /* @__PURE__ */ function() {
    function Join2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Join2.create = function(value0) {
      return function(value1) {
        return new Join2(value0, value1);
      };
    };
    return Join2;
  }();
  var Kill = /* @__PURE__ */ function() {
    function Kill2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Kill2.create = function(value0) {
      return function(value1) {
        return new Kill2(value0, value1);
      };
    };
    return Kill2;
  }();
  var GetRef = /* @__PURE__ */ function() {
    function GetRef2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    GetRef2.create = function(value0) {
      return function(value1) {
        return new GetRef2(value0, value1);
      };
    };
    return GetRef2;
  }();
  var HalogenM = function(x2) {
    return x2;
  };
  var unsubscribe2 = function(sid) {
    return liftF(new Unsubscribe(sid, unit));
  };
  var subscribe2 = function(es) {
    return liftF(new Subscribe(function(v) {
      return es;
    }, identity12));
  };
  var raise = function(o) {
    return liftF(new Raise(o, unit));
  };
  var query = function() {
    return function(dictIsSymbol) {
      var lookup13 = lookup4(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup13(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(q2) {
              return liftF(new ChildQuery2(mkChildQueryBox(new ChildQuery(function(dictApplicative) {
                var pure113 = pure(dictApplicative);
                return function(k) {
                  var $177 = maybe(pure113(Nothing.value))(k);
                  var $178 = lookup23(label5)(p2);
                  return function($179) {
                    return $177($178($179));
                  };
                };
              }, q2, identity12))));
            };
          };
        };
      };
    };
  };
  var ordSubscriptionId = ordInt;
  var ordForkId = ordInt;
  var monadHalogenM = freeMonad;
  var monadStateHalogenM = {
    state: function($181) {
      return HalogenM(liftF(State.create($181)));
    },
    Monad0: function() {
      return monadHalogenM;
    }
  };
  var monadEffectHalogenM = function(dictMonadEffect) {
    return {
      liftEffect: function() {
        var $186 = liftEffect(dictMonadEffect);
        return function($187) {
          return HalogenM(liftF(Lift2.create($186($187))));
        };
      }(),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };
  var monadAffHalogenM = function(dictMonadAff) {
    var monadEffectHalogenM1 = monadEffectHalogenM(dictMonadAff.MonadEffect0());
    return {
      liftAff: function() {
        var $188 = liftAff(dictMonadAff);
        return function($189) {
          return HalogenM(liftF(Lift2.create($188($189))));
        };
      }(),
      MonadEffect0: function() {
        return monadEffectHalogenM1;
      }
    };
  };
  var functorHalogenM = freeFunctor;
  var bindHalogenM = freeBind;
  var applyHalogenM = freeApply;
  var applicativeHalogenM = freeApplicative;

  // output/Halogen.Query.HalogenQ/index.js
  var Initialize = /* @__PURE__ */ function() {
    function Initialize2(value0) {
      this.value0 = value0;
    }
    ;
    Initialize2.create = function(value0) {
      return new Initialize2(value0);
    };
    return Initialize2;
  }();
  var Finalize = /* @__PURE__ */ function() {
    function Finalize2(value0) {
      this.value0 = value0;
    }
    ;
    Finalize2.create = function(value0) {
      return new Finalize2(value0);
    };
    return Finalize2;
  }();
  var Receive = /* @__PURE__ */ function() {
    function Receive2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Receive2.create = function(value0) {
      return function(value1) {
        return new Receive2(value0, value1);
      };
    };
    return Receive2;
  }();
  var Action2 = /* @__PURE__ */ function() {
    function Action3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Action3.create = function(value0) {
      return function(value1) {
        return new Action3(value0, value1);
      };
    };
    return Action3;
  }();
  var Query = /* @__PURE__ */ function() {
    function Query2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Query2.create = function(value0) {
      return function(value1) {
        return new Query2(value0, value1);
      };
    };
    return Query2;
  }();

  // output/Halogen.VDom.Thunk/index.js
  var $runtime_lazy9 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var unsafeEqThunk = function(v, v1) {
    return refEq2(v.value0, v1.value0) && (refEq2(v.value1, v1.value1) && v.value1(v.value3, v1.value3));
  };
  var runThunk = function(v) {
    return v.value2(v.value3);
  };
  var buildThunk = function(toVDom) {
    var haltThunk = function(state3) {
      return halt(state3.vdom);
    };
    var $lazy_patchThunk = $runtime_lazy9("patchThunk", "Halogen.VDom.Thunk", function() {
      return function(state3, t2) {
        var $48 = unsafeEqThunk(state3.thunk, t2);
        if ($48) {
          return mkStep(new Step(extract2(state3.vdom), state3, $lazy_patchThunk(112), haltThunk));
        }
        ;
        var vdom = step(state3.vdom, toVDom(runThunk(t2)));
        return mkStep(new Step(extract2(vdom), {
          vdom,
          thunk: t2
        }, $lazy_patchThunk(115), haltThunk));
      };
    });
    var patchThunk = $lazy_patchThunk(108);
    var renderThunk = function(spec) {
      return function(t) {
        var vdom = buildVDom(spec)(toVDom(runThunk(t)));
        return mkStep(new Step(extract2(vdom), {
          thunk: t,
          vdom
        }, patchThunk, haltThunk));
      };
    };
    return renderThunk;
  };

  // output/Halogen.Component/index.js
  var voidLeft2 = /* @__PURE__ */ voidLeft(functorHalogenM);
  var traverse_3 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var map15 = /* @__PURE__ */ map(functorHalogenM);
  var pure6 = /* @__PURE__ */ pure(applicativeHalogenM);
  var lookup5 = /* @__PURE__ */ lookup3();
  var pop3 = /* @__PURE__ */ pop2();
  var insert5 = /* @__PURE__ */ insert4();
  var ComponentSlot = /* @__PURE__ */ function() {
    function ComponentSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ComponentSlot2.create = function(value0) {
      return new ComponentSlot2(value0);
    };
    return ComponentSlot2;
  }();
  var ThunkSlot = /* @__PURE__ */ function() {
    function ThunkSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ThunkSlot2.create = function(value0) {
      return new ThunkSlot2(value0);
    };
    return ThunkSlot2;
  }();
  var unComponentSlot = unsafeCoerce2;
  var unComponent = unsafeCoerce2;
  var mkEval = function(args) {
    return function(v) {
      if (v instanceof Initialize) {
        return voidLeft2(traverse_3(args.handleAction)(args.initialize))(v.value0);
      }
      ;
      if (v instanceof Finalize) {
        return voidLeft2(traverse_3(args.handleAction)(args.finalize))(v.value0);
      }
      ;
      if (v instanceof Receive) {
        return voidLeft2(traverse_3(args.handleAction)(args.receive(v.value0)))(v.value1);
      }
      ;
      if (v instanceof Action2) {
        return voidLeft2(args.handleAction(v.value0))(v.value1);
      }
      ;
      if (v instanceof Query) {
        return unCoyoneda(function(g) {
          var $45 = map15(maybe(v.value1(unit))(g));
          return function($46) {
            return $45(args.handleQuery($46));
          };
        })(v.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 71): " + [v.constructor.name]);
    };
  };
  var mkComponentSlot = unsafeCoerce2;
  var mkComponent = unsafeCoerce2;
  var defaultEval = /* @__PURE__ */ function() {
    return {
      handleAction: $$const(pure6(unit)),
      handleQuery: $$const(pure6(Nothing.value)),
      receive: $$const(Nothing.value),
      initialize: Nothing.value,
      finalize: Nothing.value
    };
  }();
  var componentSlot = function() {
    return function(dictIsSymbol) {
      var lookup13 = lookup5(dictIsSymbol);
      var pop12 = pop3(dictIsSymbol);
      var insert13 = insert5(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup13(dictOrd);
        var pop22 = pop12(dictOrd);
        var insert22 = insert13(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(comp) {
              return function(input3) {
                return function(output2) {
                  return mkComponentSlot({
                    get: lookup23(label5)(p2),
                    pop: pop22(label5)(p2),
                    set: insert22(label5)(p2),
                    component: comp,
                    input: input3,
                    output: output2
                  });
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Halogen.HTML.Elements/index.js
  var element2 = /* @__PURE__ */ function() {
    return element(Nothing.value);
  }();
  var em = /* @__PURE__ */ element2("em");
  var em_ = /* @__PURE__ */ em([]);
  var form = /* @__PURE__ */ element2("form");
  var h4 = /* @__PURE__ */ element2("h4");
  var h4_ = /* @__PURE__ */ h4([]);
  var img = function(props) {
    return element2("img")(props)([]);
  };
  var input = function(props) {
    return element2("input")(props)([]);
  };
  var label = /* @__PURE__ */ element2("label");
  var li = /* @__PURE__ */ element2("li");
  var li_ = /* @__PURE__ */ li([]);
  var optgroup = /* @__PURE__ */ element2("optgroup");
  var option = /* @__PURE__ */ element2("option");
  var p = /* @__PURE__ */ element2("p");
  var p_ = /* @__PURE__ */ p([]);
  var pre = /* @__PURE__ */ element2("pre");
  var pre_ = /* @__PURE__ */ pre([]);
  var section = /* @__PURE__ */ element2("section");
  var select = /* @__PURE__ */ element2("select");
  var span2 = /* @__PURE__ */ element2("span");
  var span_ = /* @__PURE__ */ span2([]);
  var strong = /* @__PURE__ */ element2("strong");
  var strong_ = /* @__PURE__ */ strong([]);
  var table = /* @__PURE__ */ element2("table");
  var table_ = /* @__PURE__ */ table([]);
  var tbody = /* @__PURE__ */ element2("tbody");
  var tbody_ = /* @__PURE__ */ tbody([]);
  var td = /* @__PURE__ */ element2("td");
  var td_ = /* @__PURE__ */ td([]);
  var textarea = function(es) {
    return element2("textarea")(es)([]);
  };
  var th = /* @__PURE__ */ element2("th");
  var thead = /* @__PURE__ */ element2("thead");
  var thead_ = /* @__PURE__ */ thead([]);
  var tr = /* @__PURE__ */ element2("tr");
  var tr_ = /* @__PURE__ */ tr([]);
  var ul = /* @__PURE__ */ element2("ul");
  var ul_ = /* @__PURE__ */ ul([]);
  var div2 = /* @__PURE__ */ element2("div");
  var div_ = /* @__PURE__ */ div2([]);
  var colgroup = /* @__PURE__ */ element2("colgroup");
  var colgroup_ = /* @__PURE__ */ colgroup([]);
  var col = function(props) {
    return element2("col")(props)([]);
  };
  var code = /* @__PURE__ */ element2("code");
  var code_ = /* @__PURE__ */ code([]);
  var button = /* @__PURE__ */ element2("button");
  var a = /* @__PURE__ */ element2("a");

  // output/Halogen.HTML.Properties/index.js
  var unwrap4 = /* @__PURE__ */ unwrap();
  var prop2 = function(dictIsProp) {
    return prop(dictIsProp);
  };
  var prop1 = /* @__PURE__ */ prop2(isPropBoolean);
  var prop22 = /* @__PURE__ */ prop2(isPropString);
  var prop3 = /* @__PURE__ */ prop2(isPropInt);
  var prop4 = /* @__PURE__ */ prop2(isPropNumber);
  var rows = /* @__PURE__ */ prop3("rows");
  var scope = /* @__PURE__ */ prop2(isPropScopeValue)("scope");
  var selected = /* @__PURE__ */ prop1("selected");
  var src = /* @__PURE__ */ prop22("src");
  var target = /* @__PURE__ */ prop22("target");
  var type_ = function(dictIsProp) {
    return prop2(dictIsProp)("type");
  };
  var value2 = function(dictIsProp) {
    return prop2(dictIsProp)("value");
  };
  var placeholder = /* @__PURE__ */ prop22("placeholder");
  var name3 = /* @__PURE__ */ prop22("name");
  var min3 = /* @__PURE__ */ prop4("min");
  var id3 = /* @__PURE__ */ prop22("id");
  var href = /* @__PURE__ */ prop22("href");
  var $$for = /* @__PURE__ */ prop22("htmlFor");
  var draggable = /* @__PURE__ */ prop1("draggable");
  var disabled = /* @__PURE__ */ prop1("disabled");
  var cols = /* @__PURE__ */ prop3("cols");
  var class_ = /* @__PURE__ */ function() {
    var $36 = prop22("className");
    return function($37) {
      return $36(unwrap4($37));
    };
  }();
  var checked = /* @__PURE__ */ prop1("checked");
  var attr2 = /* @__PURE__ */ function() {
    return attr(Nothing.value);
  }();
  var style = /* @__PURE__ */ attr2("style");
  var action = /* @__PURE__ */ prop22("action");

  // output/Halogen.HTML/index.js
  var componentSlot2 = /* @__PURE__ */ componentSlot();
  var slot = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(component) {
              return function(input3) {
                return function(outputQuery) {
                  return widget(new ComponentSlot(componentSlot22(label5)(p2)(component)(input3)(function($11) {
                    return Just.create(outputQuery($11));
                  })));
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Foreign.Index/foreign.js
  function unsafeReadPropImpl(f, s, key, value17) {
    return value17 == null ? f : s(value17[key]);
  }

  // output/Foreign.Index/index.js
  var unsafeReadProp = function(dictMonad) {
    var fail4 = fail(dictMonad);
    var pure29 = pure(applicativeExceptT(dictMonad));
    return function(k) {
      return function(value17) {
        return unsafeReadPropImpl(fail4(new TypeMismatch("object", typeOf(value17))), pure29, k, value17);
      };
    };
  };
  var readProp = function(dictMonad) {
    return unsafeReadProp(dictMonad);
  };

  // output/Web.Event.Event/foreign.js
  function _currentTarget(e) {
    return e.currentTarget;
  }
  function preventDefault(e) {
    return function() {
      return e.preventDefault();
    };
  }

  // output/Data.Enum/foreign.js
  function toCharCode(c) {
    return c.charCodeAt(0);
  }
  function fromCharCode(c) {
    return String.fromCharCode(c);
  }

  // output/Data.Enum/index.js
  var bottom1 = /* @__PURE__ */ bottom(boundedChar);
  var top1 = /* @__PURE__ */ top(boundedChar);
  var toEnum = function(dict) {
    return dict.toEnum;
  };
  var fromEnum = function(dict) {
    return dict.fromEnum;
  };
  var toEnumWithDefaults = function(dictBoundedEnum) {
    var toEnum1 = toEnum(dictBoundedEnum);
    var fromEnum1 = fromEnum(dictBoundedEnum);
    var bottom22 = bottom(dictBoundedEnum.Bounded0());
    return function(low2) {
      return function(high2) {
        return function(x2) {
          var v = toEnum1(x2);
          if (v instanceof Just) {
            return v.value0;
          }
          ;
          if (v instanceof Nothing) {
            var $140 = x2 < fromEnum1(bottom22);
            if ($140) {
              return low2;
            }
            ;
            return high2;
          }
          ;
          throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
        };
      };
    };
  };
  var defaultSucc = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a2) {
        return toEnum$prime(fromEnum$prime(a2) + 1 | 0);
      };
    };
  };
  var defaultPred = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a2) {
        return toEnum$prime(fromEnum$prime(a2) - 1 | 0);
      };
    };
  };
  var charToEnum = function(v) {
    if (v >= toCharCode(bottom1) && v <= toCharCode(top1)) {
      return new Just(fromCharCode(v));
    }
    ;
    return Nothing.value;
  };
  var enumChar = {
    succ: /* @__PURE__ */ defaultSucc(charToEnum)(toCharCode),
    pred: /* @__PURE__ */ defaultPred(charToEnum)(toCharCode),
    Ord0: function() {
      return ordChar;
    }
  };
  var boundedEnumChar = /* @__PURE__ */ function() {
    return {
      cardinality: toCharCode(top1) - toCharCode(bottom1) | 0,
      toEnum: charToEnum,
      fromEnum: toCharCode,
      Bounded0: function() {
        return boundedChar;
      },
      Enum1: function() {
        return enumChar;
      }
    };
  }();

  // output/Web.Event.Event/index.js
  var currentTarget = function($5) {
    return toMaybe(_currentTarget($5));
  };

  // output/Web.HTML.Event.DragEvent.EventTypes/index.js
  var drop3 = "drop";
  var dragstart = "dragstart";
  var dragover = "dragover";
  var dragleave = "dragleave";
  var dragenter = "dragenter";
  var dragend = "dragend";

  // output/Web.HTML.Event.EventTypes/index.js
  var input2 = "input";
  var domcontentloaded = "DOMContentLoaded";
  var change = "change";
  var blur = "blur";

  // output/Web.UIEvent.MouseEvent.EventTypes/index.js
  var mouseup = "mouseup";
  var mousemove = "mousemove";
  var mouseleave = "mouseleave";
  var mousedown = "mousedown";
  var click = "click";

  // output/Halogen.HTML.Events/index.js
  var map17 = /* @__PURE__ */ map(functorMaybe);
  var composeKleisli2 = /* @__PURE__ */ composeKleisli(bindMaybe);
  var composeKleisliFlipped3 = /* @__PURE__ */ composeKleisliFlipped(/* @__PURE__ */ bindExceptT(monadIdentity));
  var readProp2 = /* @__PURE__ */ readProp(monadIdentity);
  var readString2 = /* @__PURE__ */ readString(monadIdentity);
  var mouseHandler = unsafeCoerce2;
  var handler$prime = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return map17(Action.create)(f(ev));
      });
    };
  };
  var handler2 = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return new Just(new Action(f(ev)));
      });
    };
  };
  var onClick = /* @__PURE__ */ function() {
    var $15 = handler2(click);
    return function($16) {
      return $15(mouseHandler($16));
    };
  }();
  var onMouseDown = /* @__PURE__ */ function() {
    var $27 = handler2(mousedown);
    return function($28) {
      return $27(mouseHandler($28));
    };
  }();
  var onMouseLeave = /* @__PURE__ */ function() {
    var $31 = handler2(mouseleave);
    return function($32) {
      return $31(mouseHandler($32));
    };
  }();
  var onMouseMove = /* @__PURE__ */ function() {
    var $33 = handler2(mousemove);
    return function($34) {
      return $33(mouseHandler($34));
    };
  }();
  var onMouseUp = /* @__PURE__ */ function() {
    var $39 = handler2(mouseup);
    return function($40) {
      return $39(mouseHandler($40));
    };
  }();
  var onSubmit = /* @__PURE__ */ handler2("submit");
  var focusHandler = unsafeCoerce2;
  var onBlur = /* @__PURE__ */ function() {
    var $55 = handler2(blur);
    return function($56) {
      return $55(focusHandler($56));
    };
  }();
  var dragHandler = unsafeCoerce2;
  var onDragEnd = /* @__PURE__ */ function() {
    var $65 = handler2(dragend);
    return function($66) {
      return $65(dragHandler($66));
    };
  }();
  var onDragEnter = /* @__PURE__ */ function() {
    var $67 = handler2(dragenter);
    return function($68) {
      return $67(dragHandler($68));
    };
  }();
  var onDragLeave = /* @__PURE__ */ function() {
    var $71 = handler2(dragleave);
    return function($72) {
      return $71(dragHandler($72));
    };
  }();
  var onDragOver = /* @__PURE__ */ function() {
    var $73 = handler2(dragover);
    return function($74) {
      return $73(dragHandler($74));
    };
  }();
  var onDragStart = /* @__PURE__ */ function() {
    var $75 = handler2(dragstart);
    return function($76) {
      return $75(dragHandler($76));
    };
  }();
  var onDrop = /* @__PURE__ */ function() {
    var $77 = handler2(drop3);
    return function($78) {
      return $77(dragHandler($78));
    };
  }();
  var addForeignPropHandler = function(key) {
    return function(prop5) {
      return function(reader) {
        return function(f) {
          var go2 = function(a2) {
            return composeKleisliFlipped3(reader)(readProp2(prop5))(unsafeToForeign(a2));
          };
          return handler$prime(key)(composeKleisli2(currentTarget)(function(e) {
            return either($$const(Nothing.value))(function($85) {
              return Just.create(f($85));
            })(runExcept(go2(e)));
          }));
        };
      };
    };
  };
  var onChecked = /* @__PURE__ */ addForeignPropHandler(change)("checked")(/* @__PURE__ */ readBoolean(monadIdentity));
  var onSelectedIndexChange = /* @__PURE__ */ addForeignPropHandler(change)("selectedIndex")(/* @__PURE__ */ readInt(monadIdentity));
  var onValueInput = /* @__PURE__ */ addForeignPropHandler(input2)("value")(readString2);

  // output/Data.Lens.Internal.Forget/index.js
  var alaF3 = /* @__PURE__ */ alaF()()()();
  var Forget = function(x2) {
    return x2;
  };
  var profunctorForget = {
    dimap: function(f) {
      return function(v) {
        return function(v1) {
          return function($36) {
            return v1(f($36));
          };
        };
      };
    }
  };
  var strongForget = {
    first: function(v) {
      return function($37) {
        return v(fst($37));
      };
    },
    second: function(v) {
      return function($38) {
        return v(snd($38));
      };
    },
    Profunctor0: function() {
      return profunctorForget;
    }
  };
  var choiceForget = function(dictMonoid) {
    var mempty9 = mempty(monoidFn(dictMonoid));
    return {
      left: function(v) {
        return either(v)(mempty9);
      },
      right: function(v) {
        return either(mempty9)(v);
      },
      Profunctor0: function() {
        return profunctorForget;
      }
    };
  };
  var wanderForget = function(dictMonoid) {
    var applicativeConst2 = applicativeConst(dictMonoid);
    var choiceForget14 = choiceForget(dictMonoid);
    return {
      wander: function(f) {
        return function(v) {
          return alaF3(Const)(f(applicativeConst2))(v);
        };
      },
      Strong0: function() {
        return strongForget;
      },
      Choice1: function() {
        return choiceForget14;
      }
    };
  };

  // output/Data.Profunctor.Choice/index.js
  var right = function(dict) {
    return dict.right;
  };

  // output/Data.Profunctor.Strong/index.js
  var strongFn = {
    first: function(a2b) {
      return function(v) {
        return new Tuple(a2b(v.value0), v.value1);
      };
    },
    second: /* @__PURE__ */ map(functorTuple),
    Profunctor0: function() {
      return profunctorFn;
    }
  };
  var second = function(dict) {
    return dict.second;
  };
  var first = function(dict) {
    return dict.first;
  };
  var splitStrong = function(dictSemigroupoid) {
    var composeFlipped2 = composeFlipped(dictSemigroupoid);
    return function(dictStrong) {
      var first1 = first(dictStrong);
      var second1 = second(dictStrong);
      return function(l) {
        return function(r) {
          return composeFlipped2(first1(l))(second1(r));
        };
      };
    };
  };
  var fanout = function(dictSemigroupoid) {
    var splitStrong1 = splitStrong(dictSemigroupoid);
    return function(dictStrong) {
      var lcmap2 = lcmap(dictStrong.Profunctor0());
      var splitStrong2 = splitStrong1(dictStrong);
      return function(l) {
        return function(r) {
          return lcmap2(function(a2) {
            return new Tuple(a2, a2);
          })(splitStrong2(l)(r));
        };
      };
    };
  };

  // output/Data.Lens.Internal.Wander/index.js
  var wander = function(dict) {
    return dict.wander;
  };

  // output/Data.Lens.Prism/index.js
  var identity13 = /* @__PURE__ */ identity(categoryFn);
  var prism = function(to2) {
    return function(fro) {
      return function(dictChoice) {
        var Profunctor0 = dictChoice.Profunctor0();
        var dimap2 = dimap(Profunctor0);
        var right2 = right(dictChoice);
        var rmap3 = rmap(Profunctor0);
        return function(pab) {
          return dimap2(fro)(either(identity13)(identity13))(right2(rmap3(to2)(pab)));
        };
      };
    };
  };
  var prism$prime = function(to2) {
    return function(fro) {
      return function(dictChoice) {
        return prism(to2)(function(s) {
          return maybe(new Left(s))(Right.create)(fro(s));
        })(dictChoice);
      };
    };
  };

  // output/Data.Argonaut.Prisms/index.js
  var _String = function(dictChoice) {
    return prism$prime(id)(toString)(dictChoice);
  };
  var _Object = function(dictChoice) {
    return prism$prime(id)(toObject)(dictChoice);
  };
  var _Number = function(dictChoice) {
    return prism$prime(id)(toNumber)(dictChoice);
  };
  var _Boolean = function(dictChoice) {
    return prism$prime(id)(toBoolean)(dictChoice);
  };
  var _Array = function(dictChoice) {
    return prism$prime(id)(toArray)(dictChoice);
  };

  // output/Data.Lens.Fold/index.js
  var unwrap5 = /* @__PURE__ */ unwrap();
  var foldMapOf = /* @__PURE__ */ under()()(Forget);
  var foldrOf = function(p2) {
    return function(f) {
      return function(r) {
        var $116 = flip(unwrap5)(r);
        var $117 = foldMapOf(p2)(function($119) {
          return Endo(f($119));
        });
        return function($118) {
          return $116($117($118));
        };
      };
    };
  };
  var toListOf = function(p2) {
    return foldrOf(p2)(Cons.create)(Nil.value);
  };
  var preview = function(p2) {
    var $135 = foldMapOf(p2)(function($137) {
      return First(Just.create($137));
    });
    return function($136) {
      return unwrap5($135($136));
    };
  };

  // output/Data.Lens.Getter/index.js
  var unwrap6 = /* @__PURE__ */ unwrap();
  var to = function(f) {
    return function(p2) {
      var $10 = unwrap6(p2);
      return function($11) {
        return $10(f($11));
      };
    };
  };

  // output/Data.Lens.AffineTraversal/index.js
  var identity14 = /* @__PURE__ */ identity(categoryFn);
  var fanout2 = /* @__PURE__ */ fanout(semigroupoidFn)(strongFn);
  var affineTraversal$prime = function(to2) {
    return function(dictStrong) {
      var second2 = second(dictStrong);
      return function(dictChoice) {
        var dimap2 = dimap(dictChoice.Profunctor0());
        var right2 = right(dictChoice);
        return function(pab) {
          return dimap2(to2)(function(v) {
            return either(identity14)(v.value0)(v.value1);
          })(second2(right2(pab)));
        };
      };
    };
  };
  var affineTraversal = function(set) {
    return function(pre2) {
      return function(dictStrong) {
        return function(dictChoice) {
          return affineTraversal$prime(fanout2(set)(pre2))(dictStrong)(dictChoice);
        };
      };
    };
  };

  // output/Data.Lens.Prism.Maybe/index.js
  var _Just = function(dictChoice) {
    return prism(Just.create)(maybe(new Left(Nothing.value))(Right.create))(dictChoice);
  };

  // output/Data.Lens.Index/index.js
  var ix = function(dict) {
    return dict.ix;
  };
  var indexForeignObject = {
    ix: function(k) {
      return function(dictStrong) {
        return function(dictChoice) {
          var set = function(s) {
            return function(b2) {
              return update(function(v) {
                return new Just(b2);
              })(k)(s);
            };
          };
          var pre2 = function(s) {
            return maybe(new Left(s))(Right.create)(lookup(k)(s));
          };
          return affineTraversal(set)(pre2)(dictStrong)(dictChoice);
        };
      };
    }
  };
  var indexArray = {
    ix: function(n) {
      return function(dictStrong) {
        return function(dictChoice) {
          var set = function(s) {
            return function(b2) {
              return fromMaybe(s)(updateAt(n)(b2)(s));
            };
          };
          var pre2 = function(s) {
            return maybe(new Left(s))(Right.create)(index(s)(n));
          };
          return affineTraversal(set)(pre2)(dictStrong)(dictChoice);
        };
      };
    }
  };

  // output/Data.Lens.Traversal/index.js
  var traversed = function(dictTraversable) {
    var traverse5 = traverse(dictTraversable);
    return function(dictWander) {
      return wander(dictWander)(function(dictApplicative) {
        return traverse5(dictApplicative);
      });
    };
  };

  // output/Data.String.CodePoints/foreign.js
  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";
  var _unsafeCodePointAt0 = function(fallback) {
    return hasCodePointAt ? function(str) {
      return str.codePointAt(0);
    } : fallback;
  };
  var _codePointAt = function(fallback) {
    return function(Just2) {
      return function(Nothing2) {
        return function(unsafeCodePointAt02) {
          return function(index5) {
            return function(str) {
              var length10 = str.length;
              if (index5 < 0 || index5 >= length10)
                return Nothing2;
              if (hasStringIterator) {
                var iter = str[Symbol.iterator]();
                for (var i2 = index5; ; --i2) {
                  var o = iter.next();
                  if (o.done)
                    return Nothing2;
                  if (i2 === 0)
                    return Just2(unsafeCodePointAt02(o.value));
                }
              }
              return fallback(index5)(str);
            };
          };
        };
      };
    };
  };
  var _fromCodePointArray = function(singleton10) {
    return hasFromCodePoint ? function(cps) {
      if (cps.length < 1e4) {
        return String.fromCodePoint.apply(String, cps);
      }
      return cps.map(singleton10).join("");
    } : function(cps) {
      return cps.map(singleton10).join("");
    };
  };
  var _singleton = function(fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };
  var _take = function(fallback) {
    return function(n) {
      if (hasStringIterator) {
        return function(str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i2 = 0; i2 < n; ++i2) {
            var o = iter.next();
            if (o.done)
              return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };
  var _toCodePointArray = function(fallback) {
    return function(unsafeCodePointAt02) {
      if (hasArrayFrom) {
        return function(str) {
          return Array.from(str, unsafeCodePointAt02);
        };
      }
      return fallback;
    };
  };

  // output/Data.String.CodePoints/index.js
  var $runtime_lazy10 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var fromEnum2 = /* @__PURE__ */ fromEnum(boundedEnumChar);
  var map18 = /* @__PURE__ */ map(functorMaybe);
  var unfoldr2 = /* @__PURE__ */ unfoldr(unfoldableArray);
  var div3 = /* @__PURE__ */ div(euclideanRingInt);
  var mod2 = /* @__PURE__ */ mod(euclideanRingInt);
  var compare3 = /* @__PURE__ */ compare(ordInt);
  var CodePoint = function(x2) {
    return x2;
  };
  var unsurrogate = function(lead) {
    return function(trail) {
      return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
  };
  var isTrail = function(cu) {
    return 56320 <= cu && cu <= 57343;
  };
  var isLead = function(cu) {
    return 55296 <= cu && cu <= 56319;
  };
  var uncons6 = function(s) {
    var v = length4(s);
    if (v === 0) {
      return Nothing.value;
    }
    ;
    if (v === 1) {
      return new Just({
        head: fromEnum2(charAt(0)(s)),
        tail: ""
      });
    }
    ;
    var cu1 = fromEnum2(charAt(1)(s));
    var cu0 = fromEnum2(charAt(0)(s));
    var $43 = isLead(cu0) && isTrail(cu1);
    if ($43) {
      return new Just({
        head: unsurrogate(cu0)(cu1),
        tail: drop2(2)(s)
      });
    }
    ;
    return new Just({
      head: cu0,
      tail: drop2(1)(s)
    });
  };
  var unconsButWithTuple = function(s) {
    return map18(function(v) {
      return new Tuple(v.head, v.tail);
    })(uncons6(s));
  };
  var toCodePointArrayFallback = function(s) {
    return unfoldr2(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function(s) {
    var cu0 = fromEnum2(charAt(0)(s));
    var $47 = isLead(cu0) && length4(s) > 1;
    if ($47) {
      var cu1 = fromEnum2(charAt(1)(s));
      var $48 = isTrail(cu1);
      if ($48) {
        return unsurrogate(cu0)(cu1);
      }
      ;
      return cu0;
    }
    ;
    return cu0;
  };
  var unsafeCodePointAt0 = /* @__PURE__ */ _unsafeCodePointAt0(unsafeCodePointAt0Fallback);
  var toCodePointArray = /* @__PURE__ */ _toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
  var length6 = function($74) {
    return length(toCodePointArray($74));
  };
  var lastIndexOf2 = function(p2) {
    return function(s) {
      return map18(function(i2) {
        return length6(take3(i2)(s));
      })(lastIndexOf(p2)(s));
    };
  };
  var indexOf2 = function(p2) {
    return function(s) {
      return map18(function(i2) {
        return length6(take3(i2)(s));
      })(indexOf(p2)(s));
    };
  };
  var fromCharCode2 = /* @__PURE__ */ function() {
    var $75 = toEnumWithDefaults(boundedEnumChar)(bottom(boundedChar))(top(boundedChar));
    return function($76) {
      return singleton7($75($76));
    };
  }();
  var singletonFallback = function(v) {
    if (v <= 65535) {
      return fromCharCode2(v);
    }
    ;
    var lead = div3(v - 65536 | 0)(1024) + 55296 | 0;
    var trail = mod2(v - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode2(lead) + fromCharCode2(trail);
  };
  var fromCodePointArray = /* @__PURE__ */ _fromCodePointArray(singletonFallback);
  var singleton9 = /* @__PURE__ */ _singleton(singletonFallback);
  var takeFallback = function(v) {
    return function(v1) {
      if (v < 1) {
        return "";
      }
      ;
      var v2 = uncons6(v1);
      if (v2 instanceof Just) {
        return singleton9(v2.value0.head) + takeFallback(v - 1 | 0)(v2.value0.tail);
      }
      ;
      return v1;
    };
  };
  var take4 = /* @__PURE__ */ _take(takeFallback);
  var splitAt3 = function(i2) {
    return function(s) {
      var before = take4(i2)(s);
      return {
        before,
        after: drop2(length4(before))(s)
      };
    };
  };
  var eqCodePoint = {
    eq: function(x2) {
      return function(y2) {
        return x2 === y2;
      };
    }
  };
  var ordCodePoint = {
    compare: function(x2) {
      return function(y2) {
        return compare3(x2)(y2);
      };
    },
    Eq0: function() {
      return eqCodePoint;
    }
  };
  var drop5 = function(n) {
    return function(s) {
      return drop2(length4(take4(n)(s)))(s);
    };
  };
  var codePointFromChar = function($77) {
    return CodePoint(fromEnum2($77));
  };
  var codePointAtFallback = function($copy_n) {
    return function($copy_s) {
      var $tco_var_n = $copy_n;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(n, s) {
        var v = uncons6(s);
        if (v instanceof Just) {
          var $66 = n === 0;
          if ($66) {
            $tco_done = true;
            return new Just(v.value0.head);
          }
          ;
          $tco_var_n = n - 1 | 0;
          $copy_s = v.value0.tail;
          return;
        }
        ;
        $tco_done = true;
        return Nothing.value;
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_n, $copy_s);
      }
      ;
      return $tco_result;
    };
  };
  var codePointAt = function(v) {
    return function(v1) {
      if (v < 0) {
        return Nothing.value;
      }
      ;
      if (v === 0 && v1 === "") {
        return Nothing.value;
      }
      ;
      if (v === 0) {
        return new Just(unsafeCodePointAt0(v1));
      }
      ;
      return _codePointAt(codePointAtFallback)(Just.create)(Nothing.value)(unsafeCodePointAt0)(v)(v1);
    };
  };
  var boundedCodePoint = {
    bottom: 0,
    top: 1114111,
    Ord0: function() {
      return ordCodePoint;
    }
  };
  var boundedEnumCodePoint = /* @__PURE__ */ function() {
    return {
      cardinality: 1114111 + 1 | 0,
      fromEnum: function(v) {
        return v;
      },
      toEnum: function(n) {
        if (n >= 0 && n <= 1114111) {
          return new Just(n);
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 68, column 26): " + [n.constructor.name]);
      },
      Bounded0: function() {
        return boundedCodePoint;
      },
      Enum1: function() {
        return $lazy_enumCodePoint(0);
      }
    };
  }();
  var $lazy_enumCodePoint = /* @__PURE__ */ $runtime_lazy10("enumCodePoint", "Data.String.CodePoints", function() {
    return {
      succ: defaultSucc(toEnum(boundedEnumCodePoint))(fromEnum(boundedEnumCodePoint)),
      pred: defaultPred(toEnum(boundedEnumCodePoint))(fromEnum(boundedEnumCodePoint)),
      Ord0: function() {
        return ordCodePoint;
      }
    };
  });

  // output/Data.String.Utils/foreign.js
  function startsWithImpl(searchString, s) {
    return s.startsWith(searchString);
  }

  // output/Data.String.Utils/index.js
  var startsWith = function(searchString) {
    return function(s) {
      return startsWithImpl(searchString, s);
    };
  };

  // output/Postgrest.Base/index.js
  var elem3 = /* @__PURE__ */ elem(foldableArray)(eqString);
  var compare4 = /* @__PURE__ */ compare(ordString);
  var map19 = /* @__PURE__ */ map(functorMaybe);
  var unwrap7 = /* @__PURE__ */ unwrap();
  var choiceForget2 = /* @__PURE__ */ choiceForget(monoidFirst);
  var _Object2 = /* @__PURE__ */ _Object(choiceForget2);
  var ix2 = /* @__PURE__ */ ix(indexForeignObject);
  var _String2 = /* @__PURE__ */ _String(choiceForget2);
  var mempty2 = /* @__PURE__ */ mempty(monoidArray);
  var map110 = /* @__PURE__ */ map(functorList);
  var toUnfoldable4 = /* @__PURE__ */ toUnfoldable2(unfoldableList);
  var map22 = /* @__PURE__ */ map(functorArray);
  var _Array2 = /* @__PURE__ */ _Array(choiceForget2);
  var monoidEndo2 = /* @__PURE__ */ monoidEndo(categoryFn);
  var choiceForget1 = /* @__PURE__ */ choiceForget(monoidEndo2);
  var _Object1 = /* @__PURE__ */ _Object(choiceForget1);
  var bind3 = /* @__PURE__ */ bind(bindMaybe);
  var pure7 = /* @__PURE__ */ pure(applicativeMaybe);
  var QualifiedFieldRef = function(x2) {
    return x2;
  };
  var PathJson = function(x2) {
    return x2;
  };
  var ModelName = function(x2) {
    return x2;
  };
  var FieldRef = function(x2) {
    return x2;
  };
  var FieldName = function(x2) {
    return x2;
  };
  var sqlDecimalType = function(x2) {
    return elem3(x2)(["integer", "bigint"]);
  };
  var unqualify = function(qfref) {
    return map19(FieldRef)(stripPrefix("#/parameters/")(unwrap7(qfref)));
  };
  var newtypePathEq = {
    eq: function(x2) {
      return function(y2) {
        return x2 === y2;
      };
    }
  };
  var path = function(schema) {
    return function(path1) {
      return preview(function() {
        var $110 = ix2("paths")(strongForget)(choiceForget2);
        var $111 = ix2(unwrap7(path1))(strongForget)(choiceForget2);
        var $112 = to(PathJson);
        return function($113) {
          return _Object2($110(_Object2($111($112($113)))));
        };
      }())(unwrap7(schema));
    };
  };
  var pathToModelName = function(path1) {
    return map19(ModelName)(stripPrefix("/")(unwrap7(path1)));
  };
  var rootPath = /* @__PURE__ */ wrap()("/");
  var newtypeModelNameEq = {
    eq: function(x2) {
      return function(y2) {
        return x2 === y2;
      };
    }
  };
  var eq13 = /* @__PURE__ */ eq(newtypeModelNameEq);
  var newtypeModelNameOrd = {
    compare: function(x2) {
      return function(y2) {
        return compare4(x2)(y2);
      };
    },
    Eq0: function() {
      return newtypeModelNameEq;
    }
  };
  var sqlTypeLens = function(ref2) {
    var $114 = to(unwrap7);
    var $115 = ix2("parameters")(strongForget)(choiceForget2);
    var $116 = ix2(unwrap7(ref2))(strongForget)(choiceForget2);
    var $117 = ix2("format")(strongForget)(choiceForget2);
    return function($118) {
      return $114(_Object2($115(_Object2($116(_Object2($117(_String2($118))))))));
    };
  };
  var newtypeFieldNameEq = {
    eq: function(x2) {
      return function(y2) {
        return x2 === y2;
      };
    }
  };
  var newtypeFieldNameOrd = {
    compare: function(x2) {
      return function(y2) {
        return compare4(x2)(y2);
      };
    },
    Eq0: function() {
      return newtypeFieldNameEq;
    }
  };
  var modelNameToPath = function(n) {
    return "/" + unwrap7(n);
  };
  var mereUrl = function(str) {
    return {
      url: str,
      extraHeaders: mempty2
    };
  };
  var lookupPathsInfos = function(schema) {
    var map214 = function(g) {
      return map19(map110(g));
    };
    var f = function(v) {
      return new Tuple(v.value0, v.value1);
    };
    return map214(f)(preview(function() {
      var $119 = ix2("paths")(strongForget)(choiceForget2);
      var $120 = to(toUnfoldable4);
      return function($121) {
        return _Object2($119(_Object2($120($121))));
      };
    }())(unwrap7(schema)));
  };
  var isRowFilter = function(qfref) {
    return startsWith("#/parameters/rowFilter.")(unwrap7(qfref));
  };
  var headers = function(baseUrl) {
    return map22(function(v) {
      return new RequestHeader(v.value0, v.value1);
    })(baseUrl.extraHeaders);
  };
  var hasTags = function(specs) {
    var n = preview(function() {
      var $122 = ix2("get")(strongForget)(choiceForget2);
      var $123 = ix2("tags")(strongForget)(choiceForget2);
      var $124 = to(function($126) {
        return !$$null($126);
      });
      return function($125) {
        return _Object2($122(_Object2($123(_Array2($124($125))))));
      };
    }())(unwrap7(specs));
    return fromMaybe(false)(n);
  };
  var fieldRefsLens = /* @__PURE__ */ function() {
    var $127 = to(unwrap7);
    var $128 = ix2("get")(strongForget)(choiceForget1);
    var $129 = ix2("parameters")(strongForget)(choiceForget1);
    var $130 = _Array(choiceForget1);
    var $131 = traversed(traversableArray)(wanderForget(monoidEndo2));
    var $132 = ix2("$ref")(strongForget)(choiceForget1);
    var $133 = _String(choiceForget1);
    var $134 = to(QualifiedFieldRef);
    return function($135) {
      return $127(_Object1($128(_Object1($129($130($131(_Object1($132($133($134($135)))))))))));
    };
  }();
  var fieldName = function(model) {
    return function(fieldref) {
      return map19(FieldName)(stripPrefix("rowFilter." + (unwrap7(model) + "."))(unwrap7(fieldref)));
    };
  };
  var extractRefs = function(json2) {
    return catMaybes2(map110(unqualify)(filter(isRowFilter)(toListOf(fieldRefsLens)(json2))));
  };
  var descriptionLens = function(model) {
    return function(field) {
      var $136 = to(unwrap7);
      var $137 = ix2("definitions")(strongForget)(choiceForget2);
      var $138 = ix2(unwrap7(model))(strongForget)(choiceForget2);
      var $139 = ix2("properties")(strongForget)(choiceForget2);
      var $140 = ix2(unwrap7(field))(strongForget)(choiceForget2);
      var $141 = ix2("description")(strongForget)(choiceForget2);
      return function($142) {
        return $136(_Object2($137(_Object2($138(_Object2($139(_Object2($140(_Object2($141(_String2($142))))))))))));
      };
    };
  };
  var lookupFKInfo = function(schema) {
    return function(model) {
      return function(field) {
        return bind3(preview(descriptionLens(model)(field))(schema))(function(comment) {
          return bind3(indexOf2("`")(comment))(function(c0) {
            return bind3(lastIndexOf2("`")(comment))(function(c1) {
              var wholeRef = take4((c1 - c0 | 0) - 1 | 0)(drop5(1 + c0 | 0)(comment));
              return bind3(indexOf2(".")(wholeRef))(function(d0) {
                var split3 = splitAt3(d0)(wholeRef);
                return pure7(new Tuple(split3.before, drop5(1)(split3.after)));
              });
            });
          });
        });
      };
    };
  };
  var fksPointingTo = function(schema) {
    return function(v) {
      return function(targetModel) {
        return filter(function(x2) {
          return eq13(x2.targetmodel)(targetModel);
        })(catMaybes2(map110(function(srcfield) {
          return map19(function(v1) {
            return {
              targetmodel: v1.value0,
              targetfield: v1.value1,
              srcfield
            };
          })(lookupFKInfo(schema)(v.value0)(srcfield));
        })(catMaybes2(map110(fieldName(v.value0))(extractRefs(v.value1))))));
      };
    };
  };
  var makeFieldSpec = function(baseUrl) {
    return function(schema) {
      return function(path1) {
        return function(ref2) {
          return bind3(pathToModelName(path1))(function(model) {
            return bind3(fieldName(model)(ref2))(function(name18) {
              return bind3(preview(sqlTypeLens(ref2))(schema))(function(format) {
                return bind3(pathToModelName(path1))(function(model1) {
                  return pure7({
                    url: baseUrl,
                    schema,
                    path: path1,
                    ref: ref2,
                    name: name18,
                    sqlType: format,
                    fk: lookupFKInfo(schema)(model1)(name18)
                  });
                });
              });
            });
          });
        };
      };
    };
  };

  // output/Postgrest.Query/index.js
  var eq5 = /* @__PURE__ */ eq(newtypeFieldNameEq);
  var compare5 = /* @__PURE__ */ compare(newtypeFieldNameOrd);
  var compare13 = /* @__PURE__ */ compare(ordString);
  var Oeq = /* @__PURE__ */ function() {
    function Oeq2() {
    }
    ;
    Oeq2.value = new Oeq2();
    return Oeq2;
  }();
  var Ogte = /* @__PURE__ */ function() {
    function Ogte2() {
    }
    ;
    Ogte2.value = new Ogte2();
    return Ogte2;
  }();
  var Ogt = /* @__PURE__ */ function() {
    function Ogt2() {
    }
    ;
    Ogt2.value = new Ogt2();
    return Ogt2;
  }();
  var Olte = /* @__PURE__ */ function() {
    function Olte2() {
    }
    ;
    Olte2.value = new Olte2();
    return Olte2;
  }();
  var Olt = /* @__PURE__ */ function() {
    function Olt2() {
    }
    ;
    Olt2.value = new Olt2();
    return Olt2;
  }();
  var Oneq = /* @__PURE__ */ function() {
    function Oneq2() {
    }
    ;
    Oneq2.value = new Oneq2();
    return Oneq2;
  }();
  var Olike = /* @__PURE__ */ function() {
    function Olike2() {
    }
    ;
    Olike2.value = new Olike2();
    return Olike2;
  }();
  var Oilike = /* @__PURE__ */ function() {
    function Oilike2() {
    }
    ;
    Oilike2.value = new Oilike2();
    return Oilike2;
  }();
  var Ois = /* @__PURE__ */ function() {
    function Ois2() {
    }
    ;
    Ois2.value = new Ois2();
    return Ois2;
  }();
  var LeafSelector = /* @__PURE__ */ function() {
    function LeafSelector2(value0) {
      this.value0 = value0;
    }
    ;
    LeafSelector2.create = function(value0) {
      return new LeafSelector2(value0);
    };
    return LeafSelector2;
  }();
  var DisableClause = /* @__PURE__ */ function() {
    function DisableClause2(value0) {
      this.value0 = value0;
    }
    ;
    DisableClause2.create = function(value0) {
      return new DisableClause2(value0);
    };
    return DisableClause2;
  }();
  var NotClause = /* @__PURE__ */ function() {
    function NotClause2(value0) {
      this.value0 = value0;
    }
    ;
    NotClause2.create = function(value0) {
      return new NotClause2(value0);
    };
    return NotClause2;
  }();
  var OrClause = /* @__PURE__ */ function() {
    function OrClause2(value0) {
      this.value0 = value0;
    }
    ;
    OrClause2.create = function(value0) {
      return new OrClause2(value0);
    };
    return OrClause2;
  }();
  var AndClause = /* @__PURE__ */ function() {
    function AndClause2(value0) {
      this.value0 = value0;
    }
    ;
    AndClause2.create = function(value0) {
      return new AndClause2(value0);
    };
    return AndClause2;
  }();
  var Descending = /* @__PURE__ */ function() {
    function Descending2() {
    }
    ;
    Descending2.value = new Descending2();
    return Descending2;
  }();
  var Ascending = /* @__PURE__ */ function() {
    function Ascending2() {
    }
    ;
    Ascending2.value = new Ascending2();
    return Ascending2;
  }();
  var val = function(v) {
    if (v instanceof LeafSelector) {
      return new Just(v.value0.val);
    }
    ;
    if (v instanceof NotClause) {
      return Nothing.value;
    }
    ;
    if (v instanceof DisableClause) {
      return Nothing.value;
    }
    ;
    if (v instanceof OrClause) {
      return Nothing.value;
    }
    ;
    if (v instanceof AndClause) {
      return Nothing.value;
    }
    ;
    throw new Error("Failed pattern match at Postgrest.Query (line 50, column 1 - line 50, column 35): " + [v.constructor.name]);
  };
  var unaryQueryFragment = function(v) {
    if (v instanceof Oeq) {
      return "eq.";
    }
    ;
    if (v instanceof Oneq) {
      return "neq.";
    }
    ;
    if (v instanceof Olte) {
      return "lte.";
    }
    ;
    if (v instanceof Olt) {
      return "lt.";
    }
    ;
    if (v instanceof Ogte) {
      return "gte.";
    }
    ;
    if (v instanceof Ogt) {
      return "gt.";
    }
    ;
    if (v instanceof Olike) {
      return "like.";
    }
    ;
    if (v instanceof Oilike) {
      return "ilike.";
    }
    ;
    if (v instanceof Ois) {
      return "is.";
    }
    ;
    throw new Error("Failed pattern match at Postgrest.Query (line 73, column 22 - line 82, column 19): " + [v.constructor.name]);
  };
  var readableQueryFragment = function(v) {
    if (v instanceof Oeq) {
      return "equal-to";
    }
    ;
    if (v instanceof Oneq) {
      return "different-from";
    }
    ;
    if (v instanceof Olte) {
      return "lower-than-or-equal-to";
    }
    ;
    if (v instanceof Olt) {
      return "strictly-lower";
    }
    ;
    if (v instanceof Ogte) {
      return "greater-than-or-equal-to";
    }
    ;
    if (v instanceof Ogt) {
      return "greater-than";
    }
    ;
    if (v instanceof Olike) {
      return "like";
    }
    ;
    if (v instanceof Oilike) {
      return "~like";
    }
    ;
    if (v instanceof Ois) {
      return "is";
    }
    ;
    throw new Error("Failed pattern match at Postgrest.Query (line 85, column 25 - line 94, column 18): " + [v.constructor.name]);
  };
  var operator = function(v) {
    if (v instanceof LeafSelector) {
      return new Just(v.value0.operator);
    }
    ;
    if (v instanceof NotClause) {
      return Nothing.value;
    }
    ;
    if (v instanceof DisableClause) {
      return Nothing.value;
    }
    ;
    if (v instanceof OrClause) {
      return Nothing.value;
    }
    ;
    if (v instanceof AndClause) {
      return Nothing.value;
    }
    ;
    throw new Error("Failed pattern match at Postgrest.Query (line 43, column 1 - line 43, column 39): " + [v.constructor.name]);
  };
  var eqOperator = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof Oeq && y2 instanceof Oeq) {
          return true;
        }
        ;
        if (x2 instanceof Ogte && y2 instanceof Ogte) {
          return true;
        }
        ;
        if (x2 instanceof Ogt && y2 instanceof Ogt) {
          return true;
        }
        ;
        if (x2 instanceof Olte && y2 instanceof Olte) {
          return true;
        }
        ;
        if (x2 instanceof Olt && y2 instanceof Olt) {
          return true;
        }
        ;
        if (x2 instanceof Oneq && y2 instanceof Oneq) {
          return true;
        }
        ;
        if (x2 instanceof Olike && y2 instanceof Olike) {
          return true;
        }
        ;
        if (x2 instanceof Oilike && y2 instanceof Oilike) {
          return true;
        }
        ;
        if (x2 instanceof Ois && y2 instanceof Ois) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq22 = /* @__PURE__ */ eq(eqOperator);
  var eqSelector = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof LeafSelector && y2 instanceof LeafSelector) {
          return eq5(x2.value0.column)(y2.value0.column) && eq22(x2.value0.operator)(y2.value0.operator) && x2.value0.val === y2.value0.val;
        }
        ;
        if (x2 instanceof DisableClause && y2 instanceof DisableClause) {
          return eq(eqSelector)(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof NotClause && y2 instanceof NotClause) {
          return eq(eqSelector)(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof OrClause && y2 instanceof OrClause) {
          return eq(eqList(eqSelector))(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof AndClause && y2 instanceof AndClause) {
          return eq(eqList(eqSelector))(x2.value0)(y2.value0);
        }
        ;
        return false;
      };
    }
  };
  var ordOperator = {
    compare: function(x2) {
      return function(y2) {
        if (x2 instanceof Oeq && y2 instanceof Oeq) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Oeq) {
          return LT.value;
        }
        ;
        if (y2 instanceof Oeq) {
          return GT.value;
        }
        ;
        if (x2 instanceof Ogte && y2 instanceof Ogte) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Ogte) {
          return LT.value;
        }
        ;
        if (y2 instanceof Ogte) {
          return GT.value;
        }
        ;
        if (x2 instanceof Ogt && y2 instanceof Ogt) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Ogt) {
          return LT.value;
        }
        ;
        if (y2 instanceof Ogt) {
          return GT.value;
        }
        ;
        if (x2 instanceof Olte && y2 instanceof Olte) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Olte) {
          return LT.value;
        }
        ;
        if (y2 instanceof Olte) {
          return GT.value;
        }
        ;
        if (x2 instanceof Olt && y2 instanceof Olt) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Olt) {
          return LT.value;
        }
        ;
        if (y2 instanceof Olt) {
          return GT.value;
        }
        ;
        if (x2 instanceof Oneq && y2 instanceof Oneq) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Oneq) {
          return LT.value;
        }
        ;
        if (y2 instanceof Oneq) {
          return GT.value;
        }
        ;
        if (x2 instanceof Olike && y2 instanceof Olike) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Olike) {
          return LT.value;
        }
        ;
        if (y2 instanceof Olike) {
          return GT.value;
        }
        ;
        if (x2 instanceof Oilike && y2 instanceof Oilike) {
          return EQ.value;
        }
        ;
        if (x2 instanceof Oilike) {
          return LT.value;
        }
        ;
        if (y2 instanceof Oilike) {
          return GT.value;
        }
        ;
        if (x2 instanceof Ois && y2 instanceof Ois) {
          return EQ.value;
        }
        ;
        throw new Error("Failed pattern match at Postgrest.Query (line 0, column 0 - line 0, column 0): " + [x2.constructor.name, y2.constructor.name]);
      };
    },
    Eq0: function() {
      return eqOperator;
    }
  };
  var compare22 = /* @__PURE__ */ compare(ordOperator);
  var ordSelector = {
    compare: function(x2) {
      return function(y2) {
        if (x2 instanceof LeafSelector && y2 instanceof LeafSelector) {
          var v = compare5(x2.value0.column)(y2.value0.column);
          if (v instanceof LT) {
            return LT.value;
          }
          ;
          if (v instanceof GT) {
            return GT.value;
          }
          ;
          var v1 = compare22(x2.value0.operator)(y2.value0.operator);
          if (v1 instanceof LT) {
            return LT.value;
          }
          ;
          if (v1 instanceof GT) {
            return GT.value;
          }
          ;
          return compare13(x2.value0.val)(y2.value0.val);
        }
        ;
        if (x2 instanceof LeafSelector) {
          return LT.value;
        }
        ;
        if (y2 instanceof LeafSelector) {
          return GT.value;
        }
        ;
        if (x2 instanceof DisableClause && y2 instanceof DisableClause) {
          return compare(ordSelector)(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof DisableClause) {
          return LT.value;
        }
        ;
        if (y2 instanceof DisableClause) {
          return GT.value;
        }
        ;
        if (x2 instanceof NotClause && y2 instanceof NotClause) {
          return compare(ordSelector)(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof NotClause) {
          return LT.value;
        }
        ;
        if (y2 instanceof NotClause) {
          return GT.value;
        }
        ;
        if (x2 instanceof OrClause && y2 instanceof OrClause) {
          return compare(ordList(ordSelector))(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof OrClause) {
          return LT.value;
        }
        ;
        if (y2 instanceof OrClause) {
          return GT.value;
        }
        ;
        if (x2 instanceof AndClause && y2 instanceof AndClause) {
          return compare(ordList(ordSelector))(x2.value0)(y2.value0);
        }
        ;
        throw new Error("Failed pattern match at Postgrest.Query (line 0, column 0 - line 0, column 0): " + [x2.constructor.name, y2.constructor.name]);
      };
    },
    Eq0: function() {
      return eqSelector;
    }
  };
  var defaultLimit = 10;
  var column = function(v) {
    if (v instanceof LeafSelector) {
      return new Just(v.value0.column);
    }
    ;
    if (v instanceof NotClause) {
      return Nothing.value;
    }
    ;
    if (v instanceof DisableClause) {
      return Nothing.value;
    }
    ;
    if (v instanceof OrClause) {
      return Nothing.value;
    }
    ;
    if (v instanceof AndClause) {
      return Nothing.value;
    }
    ;
    throw new Error("Failed pattern match at Postgrest.Query (line 36, column 1 - line 36, column 38): " + [v.constructor.name]);
  };

  // output/Postgrest.Fetch/index.js
  var fold2 = /* @__PURE__ */ fold(foldableArray);
  var fold12 = /* @__PURE__ */ fold2(monoidString);
  var unwrap8 = /* @__PURE__ */ unwrap();
  var intercalate3 = /* @__PURE__ */ intercalate(foldableList)(monoidString);
  var map20 = /* @__PURE__ */ map(functorList);
  var toUnfoldable5 = /* @__PURE__ */ toUnfoldable3(unfoldableArray);
  var fromFoldable5 = /* @__PURE__ */ fromFoldable3(foldableArray);
  var foldMapWithIndex2 = /* @__PURE__ */ foldMapWithIndex(foldableWithIndexMap)(monoidArray);
  var intercalate1 = /* @__PURE__ */ intercalate(foldableArray)(monoidString);
  var map111 = /* @__PURE__ */ map(functorArray);
  var fromFoldableWith2 = /* @__PURE__ */ fromFoldableWith(newtypeModelNameOrd)(foldableList);
  var append6 = /* @__PURE__ */ append(semigroupArray);
  var append12 = /* @__PURE__ */ append(semigroupList);
  var map23 = /* @__PURE__ */ map(functorMaybe);
  var show4 = /* @__PURE__ */ show(showInt);
  var fold22 = /* @__PURE__ */ fold2(monoidArray);
  var urlQueryParamsForSelectors = function(selectors) {
    var nodesep = function(v) {
      if (v === 0) {
        return "=";
      }
      ;
      return "";
    };
    var leafsep = function(v) {
      if (v === 0) {
        return "=";
      }
      ;
      return ".";
    };
    var $$escape = function(val2) {
      return val2;
    };
    var queryParam = function(v) {
      return function(v1) {
        if (v1 instanceof LeafSelector) {
          return fold12([unwrap8(v1.value0.column), leafsep(v), unaryQueryFragment(v1.value0.operator), $$escape(v1.value0.val)]);
        }
        ;
        if (v1 instanceof NotClause) {
          return fold12(["not.and", nodesep(v), "(", queryParam(v + 1 | 0)(v1.value0), ")"]);
        }
        ;
        if (v1 instanceof DisableClause) {
          return "";
        }
        ;
        if (v1 instanceof OrClause) {
          var sub3 = intercalate3(",")(map20(queryParam(v + 1 | 0))(v1.value0));
          return fold12(["or", nodesep(v), "(", sub3, ")"]);
        }
        ;
        if (v1 instanceof AndClause) {
          var sub3 = intercalate3(",")(map20(queryParam(v + 1 | 0))(v1.value0));
          return fold12(["and", nodesep(v), "(", sub3, ")"]);
        }
        ;
        throw new Error("Failed pattern match at Postgrest.Fetch (line 105, column 5 - line 105, column 44): " + [v.constructor.name, v1.constructor.name]);
      };
    };
    return toUnfoldable5(map20(queryParam(0))(selectors));
  };
  var urlQueryParamsForSelection = function(fields) {
    return function(nestedfields) {
      var lvl1Fields = fromFoldable5(foldMapWithIndex2(function(model) {
        return function(subfields) {
          return [fold12([unwrap8(model), "(", intercalate1(",")(map111(unwrap8)(subfields)), ")"])];
        };
      })(fromFoldableWith2(append6)(map20(function(v) {
        return new Tuple(v.value0, [v.value1]);
      })(nestedfields))));
      var lvl0Fields = map20(unwrap8)(fields);
      var $43 = $$null3(fields);
      if ($43) {
        return [];
      }
      ;
      return [fold12(["select=", intercalate3(",")(append12(lvl0Fields)(lvl1Fields))])];
    };
  };
  var urlQueryParamsForPagination = function(pagination) {
    return catMaybes([map23(function(x2) {
      return "limit=" + show4(x2);
    })(pagination.limit), map23(function(x2) {
      return "offset=" + show4(x2);
    })(pagination.skip)]);
  };
  var urlQueryParamsForOrdering = function(pairs) {
    var orderKey = function(v) {
      if (v.value1 instanceof Ascending) {
        return unwrap8(v.value0) + ".asc";
      }
      ;
      if (v.value1 instanceof Descending) {
        return unwrap8(v.value0) + ".desc";
      }
      ;
      throw new Error("Failed pattern match at Postgrest.Fetch (line 157, column 5 - line 157, column 60): " + [v.constructor.name]);
    };
    var $49 = $$null3(pairs);
    if ($49) {
      return [];
    }
    ;
    return ["order=" + intercalate3(",")(map20(orderKey)(pairs))];
  };
  var urlForRows = function(baseUrl) {
    return function(path2) {
      return function(selectors) {
        return function(pagination) {
          return function(selection) {
            return function(nested) {
              return function(order) {
                var queryparams = fold22([urlQueryParamsForSelectors(selectors), urlQueryParamsForPagination(pagination), urlQueryParamsForSelection(selection)(nested), urlQueryParamsForOrdering(order)]);
                var querystring = function() {
                  var str = intercalate1("&")(queryparams);
                  var $50 = $$null2(str);
                  if ($50) {
                    return "";
                  }
                  ;
                  return "?" + str;
                }();
                return fold12([baseUrl.url, unwrap8(path2), querystring]);
              };
            };
          };
        };
      };
    };
  };
  var fetchSchema = function(baseUrl) {
    return {
      method: defaultRequest.method,
      content: defaultRequest.content,
      username: defaultRequest.username,
      password: defaultRequest.password,
      withCredentials: defaultRequest.withCredentials,
      url: baseUrl.url,
      responseFormat: json,
      timeout: new Just(2e3),
      headers: headers(baseUrl)
    };
  };
  var fetchRows = function(baseUrl) {
    return function(path2) {
      return function(selectors) {
        return function(pagination) {
          return function(selection) {
            return function(nested) {
              return function(order) {
                return {
                  method: defaultRequest.method,
                  content: defaultRequest.content,
                  username: defaultRequest.username,
                  password: defaultRequest.password,
                  withCredentials: defaultRequest.withCredentials,
                  timeout: defaultRequest.timeout,
                  url: urlForRows(baseUrl)(path2)(selectors)(pagination)(selection)(nested)(order),
                  responseFormat: json,
                  headers: headers(baseUrl)
                };
              };
            };
          };
        };
      };
    };
  };
  var fetchCSV = function(baseUrl) {
    return function(path2) {
      return function(selectors) {
        return function(pagination) {
          return function(selection) {
            return function(nested) {
              return function(order) {
                return {
                  method: defaultRequest.method,
                  content: defaultRequest.content,
                  username: defaultRequest.username,
                  password: defaultRequest.password,
                  withCredentials: defaultRequest.withCredentials,
                  timeout: defaultRequest.timeout,
                  url: urlForRows(baseUrl)(path2)(selectors)(pagination)(selection)(nested)(order),
                  responseFormat: string,
                  headers: append6([new Accept("text/csv")])(headers(baseUrl))
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Data.Number.Format/foreign.js
  function wrap2(method2) {
    return function(d) {
      return function(num) {
        return method2.apply(num, [d]);
      };
    };
  }
  var toPrecisionNative = wrap2(Number.prototype.toPrecision);
  var toFixedNative = wrap2(Number.prototype.toFixed);
  var toExponentialNative = wrap2(Number.prototype.toExponential);
  function toString2(num) {
    return num.toString();
  }

  // output/Postgrest.AjaxTrigger/index.js
  var NotRun = /* @__PURE__ */ function() {
    function NotRun2() {
    }
    ;
    NotRun2.value = new NotRun2();
    return NotRun2;
  }();
  var PerformedFailure = /* @__PURE__ */ function() {
    function PerformedFailure2(value0) {
      this.value0 = value0;
    }
    ;
    PerformedFailure2.create = function(value0) {
      return new PerformedFailure2(value0);
    };
    return PerformedFailure2;
  }();
  var PerformedSuccess = /* @__PURE__ */ function() {
    function PerformedSuccess2(value0) {
      this.value0 = value0;
    }
    ;
    PerformedSuccess2.create = function(value0) {
      return new PerformedSuccess2(value0);
    };
    return PerformedSuccess2;
  }();
  var emptyResults = empty3;

  // output/Data.DivisionRing/index.js
  var recip = function(dict) {
    return dict.recip;
  };
  var divisionringNumber = {
    recip: function(x2) {
      return 1 / x2;
    },
    Ring0: function() {
      return ringNumber;
    }
  };

  // output/Data.Show.Generic/foreign.js
  var intercalate4 = function(separator) {
    return function(xs) {
      return xs.join(separator);
    };
  };

  // output/Data.Show.Generic/index.js
  var append7 = /* @__PURE__ */ append(semigroupArray);
  var genericShowArgsArgument = function(dictShow) {
    var show21 = show(dictShow);
    return {
      genericShowArgs: function(v) {
        return [show21(v)];
      }
    };
  };
  var genericShowArgs = function(dict) {
    return dict.genericShowArgs;
  };
  var genericShowConstructor = function(dictGenericShowArgs) {
    var genericShowArgs1 = genericShowArgs(dictGenericShowArgs);
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return {
        "genericShow'": function(v) {
          var ctor = reflectSymbol2($$Proxy.value);
          var v1 = genericShowArgs1(v);
          if (v1.length === 0) {
            return ctor;
          }
          ;
          return "(" + (intercalate4(" ")(append7([ctor])(v1)) + ")");
        }
      };
    };
  };
  var genericShow$prime = function(dict) {
    return dict["genericShow'"];
  };
  var genericShow = function(dictGeneric) {
    var from3 = from(dictGeneric);
    return function(dictGenericShow) {
      var genericShow$prime1 = genericShow$prime(dictGenericShow);
      return function(x2) {
        return genericShow$prime1(from3(x2));
      };
    };
  };

  // output/Parsing/index.js
  var $runtime_lazy11 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var show5 = /* @__PURE__ */ show(showString);
  var unwrap9 = /* @__PURE__ */ unwrap();
  var ParseState = /* @__PURE__ */ function() {
    function ParseState2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ParseState2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ParseState2(value0, value1, value22);
        };
      };
    };
    return ParseState2;
  }();
  var ParseError = /* @__PURE__ */ function() {
    function ParseError2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ParseError2.create = function(value0) {
      return function(value1) {
        return new ParseError2(value0, value1);
      };
    };
    return ParseError2;
  }();
  var More = /* @__PURE__ */ function() {
    function More2(value0) {
      this.value0 = value0;
    }
    ;
    More2.create = function(value0) {
      return new More2(value0);
    };
    return More2;
  }();
  var Lift3 = /* @__PURE__ */ function() {
    function Lift4(value0) {
      this.value0 = value0;
    }
    ;
    Lift4.create = function(value0) {
      return new Lift4(value0);
    };
    return Lift4;
  }();
  var Stop = /* @__PURE__ */ function() {
    function Stop2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Stop2.create = function(value0) {
      return function(value1) {
        return new Stop2(value0, value1);
      };
    };
    return Stop2;
  }();
  var lazyParserT = {
    defer: function(f) {
      var m = defer2(f);
      return function(state1, more, lift1, $$throw2, done) {
        var v = force(m);
        return v(state1, more, lift1, $$throw2, done);
      };
    }
  };
  var genericPosition_ = {
    to: function(x2) {
      return x2;
    },
    from: function(x2) {
      return x2;
    }
  };
  var genericShow2 = /* @__PURE__ */ genericShow(genericPosition_)(/* @__PURE__ */ genericShowConstructor(/* @__PURE__ */ genericShowArgsArgument(/* @__PURE__ */ showRecord()()(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "column";
    }
  })(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "index";
    }
  })(/* @__PURE__ */ showRecordFieldsConsNil({
    reflectSymbol: function() {
      return "line";
    }
  })(showInt))(showInt))(showInt))))({
    reflectSymbol: function() {
      return "Position";
    }
  }));
  var showPosition = {
    show: function(x2) {
      return genericShow2(x2);
    }
  };
  var show12 = /* @__PURE__ */ show(showPosition);
  var functorParserT = {
    map: function(f) {
      return function(v) {
        return function(state1, more, lift1, $$throw2, done) {
          return more(function(v1) {
            return v(state1, more, lift1, $$throw2, function(state22, a2) {
              return more(function(v2) {
                return done(state22, f(a2));
              });
            });
          });
        };
      };
    }
  };
  var applyParserT = {
    apply: function(v) {
      return function(v1) {
        return function(state1, more, lift1, $$throw2, done) {
          return more(function(v2) {
            return v(state1, more, lift1, $$throw2, function(state22, f) {
              return more(function(v3) {
                return v1(state22, more, lift1, $$throw2, function(state3, a2) {
                  return more(function(v4) {
                    return done(state3, f(a2));
                  });
                });
              });
            });
          });
        };
      };
    },
    Functor0: function() {
      return functorParserT;
    }
  };
  var bindParserT = {
    bind: function(v) {
      return function(next) {
        return function(state1, more, lift1, $$throw2, done) {
          return more(function(v1) {
            return v(state1, more, lift1, $$throw2, function(state22, a2) {
              return more(function(v2) {
                var v3 = next(a2);
                return v3(state22, more, lift1, $$throw2, done);
              });
            });
          });
        };
      };
    },
    Apply0: function() {
      return applyParserT;
    }
  };
  var bindFlipped6 = /* @__PURE__ */ bindFlipped(bindParserT);
  var applicativeParserT = {
    pure: function(a2) {
      return function(state1, v, v1, v2, done) {
        return done(state1, a2);
      };
    },
    Apply0: function() {
      return applyParserT;
    }
  };
  var monadParserT = {
    Applicative0: function() {
      return applicativeParserT;
    },
    Bind1: function() {
      return bindParserT;
    }
  };
  var monadRecParserT = {
    tailRecM: function(next) {
      return function(initArg) {
        return function(state1, more, lift1, $$throw2, done) {
          var $lazy_loop = $runtime_lazy11("loop", "Parsing", function() {
            return function(state22, arg, gas) {
              var v = next(arg);
              return v(state22, more, lift1, $$throw2, function(state3, step4) {
                if (step4 instanceof Loop) {
                  var $206 = gas === 0;
                  if ($206) {
                    return more(function(v1) {
                      return $lazy_loop(277)(state3, step4.value0, 30);
                    });
                  }
                  ;
                  return $lazy_loop(279)(state3, step4.value0, gas - 1 | 0);
                }
                ;
                if (step4 instanceof Done) {
                  return done(state3, step4.value0);
                }
                ;
                throw new Error("Failed pattern match at Parsing (line 273, column 39 - line 281, column 43): " + [step4.constructor.name]);
              });
            };
          });
          var loop2 = $lazy_loop(270);
          return loop2(state1, initArg, 30);
        };
      };
    },
    Monad0: function() {
      return monadParserT;
    }
  };
  var monadThrowParseErrorParse = {
    throwError: function(err) {
      return function(state1, v, v1, $$throw2, v2) {
        return $$throw2(state1, err);
      };
    },
    Monad0: function() {
      return monadParserT;
    }
  };
  var throwError2 = /* @__PURE__ */ throwError(monadThrowParseErrorParse);
  var altParserT = {
    alt: function(v) {
      return function(v1) {
        return function(v2, more, lift1, $$throw2, done) {
          return more(function(v3) {
            return v(new ParseState(v2.value0, v2.value1, false), more, lift1, function(v4, err) {
              return more(function(v5) {
                if (v4.value2) {
                  return $$throw2(v4, err);
                }
                ;
                return v1(v2, more, lift1, $$throw2, done);
              });
            }, done);
          });
        };
      };
    },
    Functor0: function() {
      return functorParserT;
    }
  };
  var stateParserT = function(k) {
    return function(state1, v, v1, v2, done) {
      var v3 = k(state1);
      return done(v3.value1, v3.value0);
    };
  };
  var showParseError = {
    show: function(v) {
      return "(ParseError " + (show5(v.value0) + (" " + (show12(v.value1) + ")")));
    }
  };
  var runParserT$prime = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var map45 = map(Monad0.Bind1().Apply0().Functor0());
    var pure113 = pure(Monad0.Applicative0());
    var tailRecM5 = tailRecM(dictMonadRec);
    return function(state1) {
      return function(v) {
        var go2 = function($copy_step) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(step4) {
            var v1 = step4(unit);
            if (v1 instanceof More) {
              $copy_step = v1.value0;
              return;
            }
            ;
            if (v1 instanceof Lift3) {
              $tco_done = true;
              return map45(Loop.create)(v1.value0);
            }
            ;
            if (v1 instanceof Stop) {
              $tco_done = true;
              return pure113(new Done(new Tuple(v1.value1, v1.value0)));
            }
            ;
            throw new Error("Failed pattern match at Parsing (line 152, column 13 - line 158, column 32): " + [v1.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_step);
          }
          ;
          return $tco_result;
        };
        return tailRecM5(go2)(function(v1) {
          return v(state1, More.create, Lift3.create, function(state22, err) {
            return new Stop(state22, new Left(err));
          }, function(state22, res) {
            return new Stop(state22, new Right(res));
          });
        });
      };
    };
  };
  var position = /* @__PURE__ */ stateParserT(function(v) {
    return new Tuple(v.value1, v);
  });
  var initialPos = {
    index: 0,
    line: 1,
    column: 1
  };
  var runParserT = function(dictMonadRec) {
    var map45 = map(dictMonadRec.Monad0().Bind1().Apply0().Functor0());
    var runParserT$prime1 = runParserT$prime(dictMonadRec);
    return function(s) {
      return function(p2) {
        var initialState2 = new ParseState(s, initialPos, false);
        return map45(fst)(runParserT$prime1(initialState2)(p2));
      };
    };
  };
  var runParserT1 = /* @__PURE__ */ runParserT(monadRecIdentity);
  var runParser = function(s) {
    var $281 = runParserT1(s);
    return function($282) {
      return unwrap9($281($282));
    };
  };
  var failWithPosition = function(message2) {
    return function(pos) {
      return throwError2(new ParseError(message2, pos));
    };
  };
  var fail3 = function(message2) {
    return bindFlipped6(failWithPosition(message2))(position);
  };
  var plusParserT = {
    empty: /* @__PURE__ */ fail3("No alternative"),
    Alt0: function() {
      return altParserT;
    }
  };
  var alternativeParserT = {
    Applicative0: function() {
      return applicativeParserT;
    },
    Plus1: function() {
      return plusParserT;
    }
  };

  // output/Parsing.Combinators/index.js
  var alt4 = /* @__PURE__ */ alt(altParserT);
  var defer3 = /* @__PURE__ */ defer(lazyParserT);
  var voidLeft3 = /* @__PURE__ */ voidLeft(functorParserT);
  var pure8 = /* @__PURE__ */ pure(applicativeParserT);
  var applySecond2 = /* @__PURE__ */ applySecond(applyParserT);
  var tailRecM3 = /* @__PURE__ */ tailRecM(monadRecParserT);
  var bind4 = /* @__PURE__ */ bind(bindParserT);
  var map21 = /* @__PURE__ */ map(functorParserT);
  var manyRec2 = /* @__PURE__ */ manyRec(monadRecParserT)(alternativeParserT);
  var applyFirst2 = /* @__PURE__ */ applyFirst(applyParserT);
  var empty7 = /* @__PURE__ */ empty2(plusParserT);
  var withLazyErrorMessage = function(p2) {
    return function(msg) {
      return alt4(p2)(defer3(function(v) {
        return fail3("Expected " + msg(unit));
      }));
    };
  };
  var withErrorMessage = function(p2) {
    return function(msg) {
      return alt4(p2)(fail3("Expected " + msg));
    };
  };
  var $$try4 = function(v) {
    return function(v1, more, lift3, $$throw2, done) {
      return v(v1, more, lift3, function(v2, err) {
        return $$throw2(new ParseState(v2.value0, v2.value1, v1.value2), err);
      }, done);
    };
  };
  var skipMany1 = function(p2) {
    var go2 = function(v) {
      return alt4(voidLeft3(p2)(new Loop(unit)))(pure8(new Done(unit)));
    };
    return applySecond2(p2)(tailRecM3(go2)(unit));
  };
  var skipMany = function(p2) {
    return alt4(skipMany1(p2))(pure8(unit));
  };
  var sepBy1 = function(p2) {
    return function(sep) {
      return bind4(p2)(function(a2) {
        return bind4(manyRec2(applySecond2(sep)(p2)))(function(as) {
          return pure8(cons$prime(a2)(as));
        });
      });
    };
  };
  var sepBy = function(p2) {
    return function(sep) {
      return alt4(map21(toList2)(sepBy1(p2)(sep)))(pure8(Nil.value));
    };
  };
  var option2 = function(a2) {
    return function(p2) {
      return alt4(p2)(pure8(a2));
    };
  };
  var notFollowedBy = function(p2) {
    return $$try4(alt4(applySecond2($$try4(p2))(fail3("Negated parser succeeded")))(pure8(unit)));
  };
  var choice = function(dictFoldable) {
    var go2 = function(p1) {
      return function(v) {
        if (v instanceof Nothing) {
          return new Just(p1);
        }
        ;
        if (v instanceof Just) {
          return new Just(alt4(p1)(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Parsing.Combinators (line 358, column 11 - line 360, column 32): " + [v.constructor.name]);
      };
    };
    var $95 = fromMaybe(empty7);
    var $96 = foldr(dictFoldable)(go2)(Nothing.value);
    return function($97) {
      return $95($96($97));
    };
  };
  var between = function(open) {
    return function(close2) {
      return function(p2) {
        return applyFirst2(applySecond2(open)(p2))(close2);
      };
    };
  };
  var asErrorMessage = /* @__PURE__ */ flip(withErrorMessage);

  // output/Parsing.String/index.js
  var fromEnum3 = /* @__PURE__ */ fromEnum(boundedEnumCodePoint);
  var mod3 = /* @__PURE__ */ mod(euclideanRingInt);
  var fromJust5 = /* @__PURE__ */ fromJust();
  var toEnum2 = /* @__PURE__ */ toEnum(boundedEnumChar);
  var show13 = /* @__PURE__ */ show(showString);
  var show22 = /* @__PURE__ */ show(showChar);
  var updatePosSingle = function(v) {
    return function(cp) {
      return function(after) {
        var v1 = fromEnum3(cp);
        if (v1 === 10) {
          return {
            index: v.index + 1 | 0,
            line: v.line + 1 | 0,
            column: 1
          };
        }
        ;
        if (v1 === 13) {
          var v2 = codePointAt(0)(after);
          if (v2 instanceof Just && fromEnum3(v2.value0) === 10) {
            return {
              index: v.index + 1 | 0,
              line: v.line,
              column: v.column
            };
          }
          ;
          return {
            index: v.index + 1 | 0,
            line: v.line + 1 | 0,
            column: 1
          };
        }
        ;
        if (v1 === 9) {
          return {
            index: v.index + 1 | 0,
            line: v.line,
            column: (v.column + 8 | 0) - mod3(v.column - 1 | 0)(8) | 0
          };
        }
        ;
        return {
          index: v.index + 1 | 0,
          line: v.line,
          column: v.column + 1 | 0
        };
      };
    };
  };
  var updatePosString = function($copy_pos) {
    return function($copy_before) {
      return function($copy_after) {
        var $tco_var_pos = $copy_pos;
        var $tco_var_before = $copy_before;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(pos, before, after) {
          var v = uncons6(before);
          if (v instanceof Nothing) {
            $tco_done = true;
            return pos;
          }
          ;
          if (v instanceof Just) {
            var newPos = function() {
              if ($$null2(v.value0.tail)) {
                return updatePosSingle(pos)(v.value0.head)(after);
              }
              ;
              if (otherwise) {
                return updatePosSingle(pos)(v.value0.head)(v.value0.tail);
              }
              ;
              throw new Error("Failed pattern match at Parsing.String (line 165, column 7 - line 167, column 52): ");
            }();
            $tco_var_pos = newPos;
            $tco_var_before = v.value0.tail;
            $copy_after = after;
            return;
          }
          ;
          throw new Error("Failed pattern match at Parsing.String (line 161, column 36 - line 168, column 38): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_pos, $tco_var_before, $copy_after);
        }
        ;
        return $tco_result;
      };
    };
  };
  var satisfyCodePoint = function(f) {
    return mkFn5(function(v) {
      return function(v1) {
        return function(v2) {
          return function($$throw2) {
            return function(done) {
              var v3 = uncons6(v.value0);
              if (v3 instanceof Nothing) {
                return $$throw2(v, new ParseError("Unexpected EOF", v.value1));
              }
              ;
              if (v3 instanceof Just) {
                var $76 = f(v3.value0.head);
                if ($76) {
                  return done(new ParseState(v3.value0.tail, updatePosSingle(v.value1)(v3.value0.head)(v3.value0.tail), true), v3.value0.head);
                }
                ;
                return $$throw2(v, new ParseError("Predicate unsatisfied", v.value1));
              }
              ;
              throw new Error("Failed pattern match at Parsing.String (line 136, column 7 - line 143, column 73): " + [v3.constructor.name]);
            };
          };
        };
      };
    });
  };
  var satisfy = function(f) {
    return mkFn5(function(v) {
      return function(v1) {
        return function(v2) {
          return function($$throw2) {
            return function(done) {
              var v3 = uncons6(v.value0);
              if (v3 instanceof Nothing) {
                return $$throw2(v, new ParseError("Unexpected EOF", v.value1));
              }
              ;
              if (v3 instanceof Just) {
                var cp = fromEnum3(v3.value0.head);
                var $85 = cp < 0 || cp > 65535;
                if ($85) {
                  return $$throw2(v, new ParseError("Expected Char", v.value1));
                }
                ;
                var ch = fromJust5(toEnum2(cp));
                var $86 = f(ch);
                if ($86) {
                  return done(new ParseState(v3.value0.tail, updatePosSingle(v.value1)(v3.value0.head)(v3.value0.tail), true), ch);
                }
                ;
                return $$throw2(v, new ParseError("Predicate unsatisfied", v.value1));
              }
              ;
              throw new Error("Failed pattern match at Parsing.String (line 114, column 7 - line 129, column 75): " + [v3.constructor.name]);
            };
          };
        };
      };
    });
  };
  var consumeWith = function(f) {
    return mkFn5(function(v) {
      return function(v1) {
        return function(v2) {
          return function($$throw2) {
            return function(done) {
              var v3 = f(v.value0);
              if (v3 instanceof Left) {
                return $$throw2(v, new ParseError(v3.value0, v.value1));
              }
              ;
              if (v3 instanceof Right) {
                return done(new ParseState(v3.value0.remainder, updatePosString(v.value1)(v3.value0.consumed)(v3.value0.remainder), !$$null2(v3.value0.consumed)), v3.value0.value);
              }
              ;
              throw new Error("Failed pattern match at Parsing.String (line 286, column 7 - line 290, column 121): " + [v3.constructor.name]);
            };
          };
        };
      };
    });
  };
  var string2 = function(str) {
    return consumeWith(function(input3) {
      var v = stripPrefix(str)(input3);
      if (v instanceof Just) {
        return new Right({
          value: str,
          consumed: str,
          remainder: v.value0
        });
      }
      ;
      return new Left("Expected " + show13(str));
    });
  };
  var $$char = function(c) {
    return withErrorMessage(satisfy(function(v) {
      return v === c;
    }))(show22(c));
  };

  // output/Data.Char/index.js
  var toCharCode2 = /* @__PURE__ */ fromEnum(boundedEnumChar);
  var fromCharCode3 = /* @__PURE__ */ toEnum(boundedEnumChar);

  // output/Data.CodePoint.Unicode.Internal/index.js
  var unsafeIndex2 = /* @__PURE__ */ unsafeIndex();
  var elemIndex2 = /* @__PURE__ */ elemIndex(eqInt);
  var NUMCAT_LU = /* @__PURE__ */ function() {
    function NUMCAT_LU2() {
    }
    ;
    NUMCAT_LU2.value = new NUMCAT_LU2();
    return NUMCAT_LU2;
  }();
  var NUMCAT_LL = /* @__PURE__ */ function() {
    function NUMCAT_LL2() {
    }
    ;
    NUMCAT_LL2.value = new NUMCAT_LL2();
    return NUMCAT_LL2;
  }();
  var NUMCAT_LT = /* @__PURE__ */ function() {
    function NUMCAT_LT2() {
    }
    ;
    NUMCAT_LT2.value = new NUMCAT_LT2();
    return NUMCAT_LT2;
  }();
  var NUMCAT_LM = /* @__PURE__ */ function() {
    function NUMCAT_LM2() {
    }
    ;
    NUMCAT_LM2.value = new NUMCAT_LM2();
    return NUMCAT_LM2;
  }();
  var NUMCAT_LO = /* @__PURE__ */ function() {
    function NUMCAT_LO2() {
    }
    ;
    NUMCAT_LO2.value = new NUMCAT_LO2();
    return NUMCAT_LO2;
  }();
  var NUMCAT_MN = /* @__PURE__ */ function() {
    function NUMCAT_MN2() {
    }
    ;
    NUMCAT_MN2.value = new NUMCAT_MN2();
    return NUMCAT_MN2;
  }();
  var NUMCAT_MC = /* @__PURE__ */ function() {
    function NUMCAT_MC2() {
    }
    ;
    NUMCAT_MC2.value = new NUMCAT_MC2();
    return NUMCAT_MC2;
  }();
  var NUMCAT_ME = /* @__PURE__ */ function() {
    function NUMCAT_ME2() {
    }
    ;
    NUMCAT_ME2.value = new NUMCAT_ME2();
    return NUMCAT_ME2;
  }();
  var NUMCAT_ND = /* @__PURE__ */ function() {
    function NUMCAT_ND2() {
    }
    ;
    NUMCAT_ND2.value = new NUMCAT_ND2();
    return NUMCAT_ND2;
  }();
  var NUMCAT_NL = /* @__PURE__ */ function() {
    function NUMCAT_NL2() {
    }
    ;
    NUMCAT_NL2.value = new NUMCAT_NL2();
    return NUMCAT_NL2;
  }();
  var NUMCAT_NO = /* @__PURE__ */ function() {
    function NUMCAT_NO2() {
    }
    ;
    NUMCAT_NO2.value = new NUMCAT_NO2();
    return NUMCAT_NO2;
  }();
  var NUMCAT_PC = /* @__PURE__ */ function() {
    function NUMCAT_PC2() {
    }
    ;
    NUMCAT_PC2.value = new NUMCAT_PC2();
    return NUMCAT_PC2;
  }();
  var NUMCAT_PD = /* @__PURE__ */ function() {
    function NUMCAT_PD2() {
    }
    ;
    NUMCAT_PD2.value = new NUMCAT_PD2();
    return NUMCAT_PD2;
  }();
  var NUMCAT_PS = /* @__PURE__ */ function() {
    function NUMCAT_PS2() {
    }
    ;
    NUMCAT_PS2.value = new NUMCAT_PS2();
    return NUMCAT_PS2;
  }();
  var NUMCAT_PE = /* @__PURE__ */ function() {
    function NUMCAT_PE2() {
    }
    ;
    NUMCAT_PE2.value = new NUMCAT_PE2();
    return NUMCAT_PE2;
  }();
  var NUMCAT_PI = /* @__PURE__ */ function() {
    function NUMCAT_PI2() {
    }
    ;
    NUMCAT_PI2.value = new NUMCAT_PI2();
    return NUMCAT_PI2;
  }();
  var NUMCAT_PF = /* @__PURE__ */ function() {
    function NUMCAT_PF2() {
    }
    ;
    NUMCAT_PF2.value = new NUMCAT_PF2();
    return NUMCAT_PF2;
  }();
  var NUMCAT_PO = /* @__PURE__ */ function() {
    function NUMCAT_PO2() {
    }
    ;
    NUMCAT_PO2.value = new NUMCAT_PO2();
    return NUMCAT_PO2;
  }();
  var NUMCAT_SM = /* @__PURE__ */ function() {
    function NUMCAT_SM2() {
    }
    ;
    NUMCAT_SM2.value = new NUMCAT_SM2();
    return NUMCAT_SM2;
  }();
  var NUMCAT_SC = /* @__PURE__ */ function() {
    function NUMCAT_SC2() {
    }
    ;
    NUMCAT_SC2.value = new NUMCAT_SC2();
    return NUMCAT_SC2;
  }();
  var NUMCAT_SK = /* @__PURE__ */ function() {
    function NUMCAT_SK2() {
    }
    ;
    NUMCAT_SK2.value = new NUMCAT_SK2();
    return NUMCAT_SK2;
  }();
  var NUMCAT_SO = /* @__PURE__ */ function() {
    function NUMCAT_SO2() {
    }
    ;
    NUMCAT_SO2.value = new NUMCAT_SO2();
    return NUMCAT_SO2;
  }();
  var NUMCAT_ZS = /* @__PURE__ */ function() {
    function NUMCAT_ZS2() {
    }
    ;
    NUMCAT_ZS2.value = new NUMCAT_ZS2();
    return NUMCAT_ZS2;
  }();
  var NUMCAT_ZL = /* @__PURE__ */ function() {
    function NUMCAT_ZL2() {
    }
    ;
    NUMCAT_ZL2.value = new NUMCAT_ZL2();
    return NUMCAT_ZL2;
  }();
  var NUMCAT_ZP = /* @__PURE__ */ function() {
    function NUMCAT_ZP2() {
    }
    ;
    NUMCAT_ZP2.value = new NUMCAT_ZP2();
    return NUMCAT_ZP2;
  }();
  var NUMCAT_CC = /* @__PURE__ */ function() {
    function NUMCAT_CC2() {
    }
    ;
    NUMCAT_CC2.value = new NUMCAT_CC2();
    return NUMCAT_CC2;
  }();
  var NUMCAT_CF = /* @__PURE__ */ function() {
    function NUMCAT_CF2() {
    }
    ;
    NUMCAT_CF2.value = new NUMCAT_CF2();
    return NUMCAT_CF2;
  }();
  var NUMCAT_CS = /* @__PURE__ */ function() {
    function NUMCAT_CS2() {
    }
    ;
    NUMCAT_CS2.value = new NUMCAT_CS2();
    return NUMCAT_CS2;
  }();
  var NUMCAT_CO = /* @__PURE__ */ function() {
    function NUMCAT_CO2() {
    }
    ;
    NUMCAT_CO2.value = new NUMCAT_CO2();
    return NUMCAT_CO2;
  }();
  var NUMCAT_CN = /* @__PURE__ */ function() {
    function NUMCAT_CN2() {
    }
    ;
    NUMCAT_CN2.value = new NUMCAT_CN2();
    return NUMCAT_CN2;
  }();
  var numSpaceBlocks = 7;
  var numLat1Blocks = 63;
  var numConvBlocks = 1332;
  var numBlocks = 3396;
  var gencatZS = 2;
  var rule1 = /* @__PURE__ */ function() {
    return {
      category: gencatZS,
      unicodeCat: NUMCAT_ZS.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var spacechars = [{
    start: 32,
    length: 1,
    convRule: rule1
  }, {
    start: 160,
    length: 1,
    convRule: rule1
  }, {
    start: 5760,
    length: 1,
    convRule: rule1
  }, {
    start: 8192,
    length: 11,
    convRule: rule1
  }, {
    start: 8239,
    length: 1,
    convRule: rule1
  }, {
    start: 8287,
    length: 1,
    convRule: rule1
  }, {
    start: 12288,
    length: 1,
    convRule: rule1
  }];
  var gencatZP = 67108864;
  var rule162 = /* @__PURE__ */ function() {
    return {
      category: gencatZP,
      unicodeCat: NUMCAT_ZP.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatZL = 33554432;
  var rule161 = /* @__PURE__ */ function() {
    return {
      category: gencatZL,
      unicodeCat: NUMCAT_ZL.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatSO = 8192;
  var rule13 = /* @__PURE__ */ function() {
    return {
      category: gencatSO,
      unicodeCat: NUMCAT_SO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule170 = /* @__PURE__ */ function() {
    return {
      category: gencatSO,
      unicodeCat: NUMCAT_SO.value,
      possible: 1,
      updist: 0,
      lowdist: 26,
      titledist: 0
    };
  }();
  var rule171 = /* @__PURE__ */ function() {
    return {
      category: gencatSO,
      unicodeCat: NUMCAT_SO.value,
      possible: 1,
      updist: -26 | 0,
      lowdist: 0,
      titledist: -26 | 0
    };
  }();
  var gencatSM = 64;
  var rule6 = /* @__PURE__ */ function() {
    return {
      category: gencatSM,
      unicodeCat: NUMCAT_SM.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatSK = 1024;
  var rule10 = /* @__PURE__ */ function() {
    return {
      category: gencatSK,
      unicodeCat: NUMCAT_SK.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatSC = 8;
  var rule3 = /* @__PURE__ */ function() {
    return {
      category: gencatSC,
      unicodeCat: NUMCAT_SC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPS = 16;
  var rule4 = /* @__PURE__ */ function() {
    return {
      category: gencatPS,
      unicodeCat: NUMCAT_PS.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPO = 4;
  var rule2 = /* @__PURE__ */ function() {
    return {
      category: gencatPO,
      unicodeCat: NUMCAT_PO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPI = 32768;
  var rule15 = /* @__PURE__ */ function() {
    return {
      category: gencatPI,
      unicodeCat: NUMCAT_PI.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPF = 262144;
  var rule19 = /* @__PURE__ */ function() {
    return {
      category: gencatPF,
      unicodeCat: NUMCAT_PF.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPE = 32;
  var rule5 = /* @__PURE__ */ function() {
    return {
      category: gencatPE,
      unicodeCat: NUMCAT_PE.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPD = 128;
  var rule7 = /* @__PURE__ */ function() {
    return {
      category: gencatPD,
      unicodeCat: NUMCAT_PD.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPC = 2048;
  var rule11 = /* @__PURE__ */ function() {
    return {
      category: gencatPC,
      unicodeCat: NUMCAT_PC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatNO = 131072;
  var rule17 = /* @__PURE__ */ function() {
    return {
      category: gencatNO,
      unicodeCat: NUMCAT_NO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatNL = 16777216;
  var rule128 = /* @__PURE__ */ function() {
    return {
      category: gencatNL,
      unicodeCat: NUMCAT_NL.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule168 = /* @__PURE__ */ function() {
    return {
      category: gencatNL,
      unicodeCat: NUMCAT_NL.value,
      possible: 1,
      updist: 0,
      lowdist: 16,
      titledist: 0
    };
  }();
  var rule169 = /* @__PURE__ */ function() {
    return {
      category: gencatNL,
      unicodeCat: NUMCAT_NL.value,
      possible: 1,
      updist: -16 | 0,
      lowdist: 0,
      titledist: -16 | 0
    };
  }();
  var gencatND = 256;
  var rule8 = /* @__PURE__ */ function() {
    return {
      category: gencatND,
      unicodeCat: NUMCAT_ND.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatMN = 2097152;
  var rule92 = /* @__PURE__ */ function() {
    return {
      category: gencatMN,
      unicodeCat: NUMCAT_MN.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule93 = /* @__PURE__ */ function() {
    return {
      category: gencatMN,
      unicodeCat: NUMCAT_MN.value,
      possible: 1,
      updist: 84,
      lowdist: 0,
      titledist: 84
    };
  }();
  var gencatME = 4194304;
  var rule119 = /* @__PURE__ */ function() {
    return {
      category: gencatME,
      unicodeCat: NUMCAT_ME.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatMC = 8388608;
  var rule124 = /* @__PURE__ */ function() {
    return {
      category: gencatMC,
      unicodeCat: NUMCAT_MC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatLU = 512;
  var nullrule = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_CN.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule104 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 8,
      titledist: 0
    };
  }();
  var rule107 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule115 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -60 | 0,
      titledist: 0
    };
  }();
  var rule117 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -7 | 0,
      titledist: 0
    };
  }();
  var rule118 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 80,
      titledist: 0
    };
  }();
  var rule120 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 15,
      titledist: 0
    };
  }();
  var rule122 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 48,
      titledist: 0
    };
  }();
  var rule125 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 7264,
      titledist: 0
    };
  }();
  var rule127 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 38864,
      titledist: 0
    };
  }();
  var rule137 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -3008 | 0,
      titledist: 0
    };
  }();
  var rule142 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -7615 | 0,
      titledist: 0
    };
  }();
  var rule144 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -8 | 0,
      titledist: 0
    };
  }();
  var rule153 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -74 | 0,
      titledist: 0
    };
  }();
  var rule156 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -86 | 0,
      titledist: 0
    };
  }();
  var rule157 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -100 | 0,
      titledist: 0
    };
  }();
  var rule158 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -112 | 0,
      titledist: 0
    };
  }();
  var rule159 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -128 | 0,
      titledist: 0
    };
  }();
  var rule160 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -126 | 0,
      titledist: 0
    };
  }();
  var rule163 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -7517 | 0,
      titledist: 0
    };
  }();
  var rule164 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -8383 | 0,
      titledist: 0
    };
  }();
  var rule165 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -8262 | 0,
      titledist: 0
    };
  }();
  var rule166 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 28,
      titledist: 0
    };
  }();
  var rule172 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10743 | 0,
      titledist: 0
    };
  }();
  var rule173 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -3814 | 0,
      titledist: 0
    };
  }();
  var rule174 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10727 | 0,
      titledist: 0
    };
  }();
  var rule177 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10780 | 0,
      titledist: 0
    };
  }();
  var rule178 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10749 | 0,
      titledist: 0
    };
  }();
  var rule179 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10783 | 0,
      titledist: 0
    };
  }();
  var rule180 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10782 | 0,
      titledist: 0
    };
  }();
  var rule181 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10815 | 0,
      titledist: 0
    };
  }();
  var rule183 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -35332 | 0,
      titledist: 0
    };
  }();
  var rule184 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42280 | 0,
      titledist: 0
    };
  }();
  var rule186 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42308 | 0,
      titledist: 0
    };
  }();
  var rule187 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42319 | 0,
      titledist: 0
    };
  }();
  var rule188 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42315 | 0,
      titledist: 0
    };
  }();
  var rule189 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42305 | 0,
      titledist: 0
    };
  }();
  var rule190 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42258 | 0,
      titledist: 0
    };
  }();
  var rule191 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42282 | 0,
      titledist: 0
    };
  }();
  var rule192 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42261 | 0,
      titledist: 0
    };
  }();
  var rule193 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 928,
      titledist: 0
    };
  }();
  var rule194 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -48 | 0,
      titledist: 0
    };
  }();
  var rule195 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42307 | 0,
      titledist: 0
    };
  }();
  var rule196 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -35384 | 0,
      titledist: 0
    };
  }();
  var rule201 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 40,
      titledist: 0
    };
  }();
  var rule203 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 34,
      titledist: 0
    };
  }();
  var rule22 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 1,
      titledist: 0
    };
  }();
  var rule24 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -199 | 0,
      titledist: 0
    };
  }();
  var rule26 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -121 | 0,
      titledist: 0
    };
  }();
  var rule29 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 210,
      titledist: 0
    };
  }();
  var rule30 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 206,
      titledist: 0
    };
  }();
  var rule31 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 205,
      titledist: 0
    };
  }();
  var rule32 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 79,
      titledist: 0
    };
  }();
  var rule33 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 202,
      titledist: 0
    };
  }();
  var rule34 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 203,
      titledist: 0
    };
  }();
  var rule35 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 207,
      titledist: 0
    };
  }();
  var rule37 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 211,
      titledist: 0
    };
  }();
  var rule38 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 209,
      titledist: 0
    };
  }();
  var rule40 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 213,
      titledist: 0
    };
  }();
  var rule42 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 214,
      titledist: 0
    };
  }();
  var rule43 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 218,
      titledist: 0
    };
  }();
  var rule44 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 217,
      titledist: 0
    };
  }();
  var rule45 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 219,
      titledist: 0
    };
  }();
  var rule47 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 2,
      titledist: 1
    };
  }();
  var rule51 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -97 | 0,
      titledist: 0
    };
  }();
  var rule52 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -56 | 0,
      titledist: 0
    };
  }();
  var rule53 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -130 | 0,
      titledist: 0
    };
  }();
  var rule54 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 10795,
      titledist: 0
    };
  }();
  var rule55 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -163 | 0,
      titledist: 0
    };
  }();
  var rule56 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 10792,
      titledist: 0
    };
  }();
  var rule58 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -195 | 0,
      titledist: 0
    };
  }();
  var rule59 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 69,
      titledist: 0
    };
  }();
  var rule60 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 71,
      titledist: 0
    };
  }();
  var rule9 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 32,
      titledist: 0
    };
  }();
  var rule94 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 116,
      titledist: 0
    };
  }();
  var rule95 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 38,
      titledist: 0
    };
  }();
  var rule96 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 37,
      titledist: 0
    };
  }();
  var rule97 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 64,
      titledist: 0
    };
  }();
  var rule98 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 63,
      titledist: 0
    };
  }();
  var gencatLT = 524288;
  var rule151 = /* @__PURE__ */ function() {
    return {
      category: gencatLT,
      unicodeCat: NUMCAT_LT.value,
      possible: 1,
      updist: 0,
      lowdist: -8 | 0,
      titledist: 0
    };
  }();
  var rule154 = /* @__PURE__ */ function() {
    return {
      category: gencatLT,
      unicodeCat: NUMCAT_LT.value,
      possible: 1,
      updist: 0,
      lowdist: -9 | 0,
      titledist: 0
    };
  }();
  var rule48 = /* @__PURE__ */ function() {
    return {
      category: gencatLT,
      unicodeCat: NUMCAT_LT.value,
      possible: 1,
      updist: -1 | 0,
      lowdist: 1,
      titledist: 0
    };
  }();
  var gencatLO = 16384;
  var rule14 = /* @__PURE__ */ function() {
    return {
      category: gencatLO,
      unicodeCat: NUMCAT_LO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatLM = 1048576;
  var rule91 = /* @__PURE__ */ function() {
    return {
      category: gencatLM,
      unicodeCat: NUMCAT_LM.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatLL = 4096;
  var rule100 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -37 | 0,
      lowdist: 0,
      titledist: -37 | 0
    };
  }();
  var rule101 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -31 | 0,
      lowdist: 0,
      titledist: -31 | 0
    };
  }();
  var rule102 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -64 | 0,
      lowdist: 0,
      titledist: -64 | 0
    };
  }();
  var rule103 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -63 | 0,
      lowdist: 0,
      titledist: -63 | 0
    };
  }();
  var rule105 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -62 | 0,
      lowdist: 0,
      titledist: -62 | 0
    };
  }();
  var rule106 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -57 | 0,
      lowdist: 0,
      titledist: -57 | 0
    };
  }();
  var rule108 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -47 | 0,
      lowdist: 0,
      titledist: -47 | 0
    };
  }();
  var rule109 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -54 | 0,
      lowdist: 0,
      titledist: -54 | 0
    };
  }();
  var rule110 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -8 | 0,
      lowdist: 0,
      titledist: -8 | 0
    };
  }();
  var rule111 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -86 | 0,
      lowdist: 0,
      titledist: -86 | 0
    };
  }();
  var rule112 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -80 | 0,
      lowdist: 0,
      titledist: -80 | 0
    };
  }();
  var rule113 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 7,
      lowdist: 0,
      titledist: 7
    };
  }();
  var rule114 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -116 | 0,
      lowdist: 0,
      titledist: -116 | 0
    };
  }();
  var rule116 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -96 | 0,
      lowdist: 0,
      titledist: -96 | 0
    };
  }();
  var rule12 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -32 | 0,
      lowdist: 0,
      titledist: -32 | 0
    };
  }();
  var rule121 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -15 | 0,
      lowdist: 0,
      titledist: -15 | 0
    };
  }();
  var rule123 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -48 | 0,
      lowdist: 0,
      titledist: -48 | 0
    };
  }();
  var rule126 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 3008,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule129 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6254 | 0,
      lowdist: 0,
      titledist: -6254 | 0
    };
  }();
  var rule130 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6253 | 0,
      lowdist: 0,
      titledist: -6253 | 0
    };
  }();
  var rule131 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6244 | 0,
      lowdist: 0,
      titledist: -6244 | 0
    };
  }();
  var rule132 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6242 | 0,
      lowdist: 0,
      titledist: -6242 | 0
    };
  }();
  var rule133 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6243 | 0,
      lowdist: 0,
      titledist: -6243 | 0
    };
  }();
  var rule134 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6236 | 0,
      lowdist: 0,
      titledist: -6236 | 0
    };
  }();
  var rule135 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6181 | 0,
      lowdist: 0,
      titledist: -6181 | 0
    };
  }();
  var rule136 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 35266,
      lowdist: 0,
      titledist: 35266
    };
  }();
  var rule138 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 35332,
      lowdist: 0,
      titledist: 35332
    };
  }();
  var rule139 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 3814,
      lowdist: 0,
      titledist: 3814
    };
  }();
  var rule140 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 35384,
      lowdist: 0,
      titledist: 35384
    };
  }();
  var rule141 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -59 | 0,
      lowdist: 0,
      titledist: -59 | 0
    };
  }();
  var rule143 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 8,
      lowdist: 0,
      titledist: 8
    };
  }();
  var rule145 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 74,
      lowdist: 0,
      titledist: 74
    };
  }();
  var rule146 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 86,
      lowdist: 0,
      titledist: 86
    };
  }();
  var rule147 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 100,
      lowdist: 0,
      titledist: 100
    };
  }();
  var rule148 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 128,
      lowdist: 0,
      titledist: 128
    };
  }();
  var rule149 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 112,
      lowdist: 0,
      titledist: 112
    };
  }();
  var rule150 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 126,
      lowdist: 0,
      titledist: 126
    };
  }();
  var rule152 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 9,
      lowdist: 0,
      titledist: 9
    };
  }();
  var rule155 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -7205 | 0,
      lowdist: 0,
      titledist: -7205 | 0
    };
  }();
  var rule167 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -28 | 0,
      lowdist: 0,
      titledist: -28 | 0
    };
  }();
  var rule175 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -10795 | 0,
      lowdist: 0,
      titledist: -10795 | 0
    };
  }();
  var rule176 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -10792 | 0,
      lowdist: 0,
      titledist: -10792 | 0
    };
  }();
  var rule18 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 743,
      lowdist: 0,
      titledist: 743
    };
  }();
  var rule182 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -7264 | 0,
      lowdist: 0,
      titledist: -7264 | 0
    };
  }();
  var rule185 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 48,
      lowdist: 0,
      titledist: 48
    };
  }();
  var rule197 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -928 | 0,
      lowdist: 0,
      titledist: -928 | 0
    };
  }();
  var rule198 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -38864 | 0,
      lowdist: 0,
      titledist: -38864 | 0
    };
  }();
  var rule20 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule202 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -40 | 0,
      lowdist: 0,
      titledist: -40 | 0
    };
  }();
  var rule204 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -34 | 0,
      lowdist: 0,
      titledist: -34 | 0
    };
  }();
  var rule21 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 121,
      lowdist: 0,
      titledist: 121
    };
  }();
  var rule23 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -1 | 0,
      lowdist: 0,
      titledist: -1 | 0
    };
  }();
  var rule25 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -232 | 0,
      lowdist: 0,
      titledist: -232 | 0
    };
  }();
  var rule27 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -300 | 0,
      lowdist: 0,
      titledist: -300 | 0
    };
  }();
  var rule28 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 195,
      lowdist: 0,
      titledist: 195
    };
  }();
  var rule36 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 97,
      lowdist: 0,
      titledist: 97
    };
  }();
  var rule39 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 163,
      lowdist: 0,
      titledist: 163
    };
  }();
  var rule41 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 130,
      lowdist: 0,
      titledist: 130
    };
  }();
  var rule46 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 56,
      lowdist: 0,
      titledist: 56
    };
  }();
  var rule49 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -2 | 0,
      lowdist: 0,
      titledist: -1 | 0
    };
  }();
  var rule50 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -79 | 0,
      lowdist: 0,
      titledist: -79 | 0
    };
  }();
  var rule57 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10815,
      lowdist: 0,
      titledist: 10815
    };
  }();
  var rule61 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10783,
      lowdist: 0,
      titledist: 10783
    };
  }();
  var rule62 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10780,
      lowdist: 0,
      titledist: 10780
    };
  }();
  var rule63 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10782,
      lowdist: 0,
      titledist: 10782
    };
  }();
  var rule64 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -210 | 0,
      lowdist: 0,
      titledist: -210 | 0
    };
  }();
  var rule65 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -206 | 0,
      lowdist: 0,
      titledist: -206 | 0
    };
  }();
  var rule66 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -205 | 0,
      lowdist: 0,
      titledist: -205 | 0
    };
  }();
  var rule67 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -202 | 0,
      lowdist: 0,
      titledist: -202 | 0
    };
  }();
  var rule68 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -203 | 0,
      lowdist: 0,
      titledist: -203 | 0
    };
  }();
  var rule69 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42319,
      lowdist: 0,
      titledist: 42319
    };
  }();
  var rule70 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42315,
      lowdist: 0,
      titledist: 42315
    };
  }();
  var rule71 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -207 | 0,
      lowdist: 0,
      titledist: -207 | 0
    };
  }();
  var rule72 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42280,
      lowdist: 0,
      titledist: 42280
    };
  }();
  var rule73 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42308,
      lowdist: 0,
      titledist: 42308
    };
  }();
  var rule74 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -209 | 0,
      lowdist: 0,
      titledist: -209 | 0
    };
  }();
  var rule75 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -211 | 0,
      lowdist: 0,
      titledist: -211 | 0
    };
  }();
  var rule76 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10743,
      lowdist: 0,
      titledist: 10743
    };
  }();
  var rule77 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42305,
      lowdist: 0,
      titledist: 42305
    };
  }();
  var rule78 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10749,
      lowdist: 0,
      titledist: 10749
    };
  }();
  var rule79 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -213 | 0,
      lowdist: 0,
      titledist: -213 | 0
    };
  }();
  var rule80 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -214 | 0,
      lowdist: 0,
      titledist: -214 | 0
    };
  }();
  var rule81 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10727,
      lowdist: 0,
      titledist: 10727
    };
  }();
  var rule82 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -218 | 0,
      lowdist: 0,
      titledist: -218 | 0
    };
  }();
  var rule83 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42307,
      lowdist: 0,
      titledist: 42307
    };
  }();
  var rule84 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42282,
      lowdist: 0,
      titledist: 42282
    };
  }();
  var rule85 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -69 | 0,
      lowdist: 0,
      titledist: -69 | 0
    };
  }();
  var rule86 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -217 | 0,
      lowdist: 0,
      titledist: -217 | 0
    };
  }();
  var rule87 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -71 | 0,
      lowdist: 0,
      titledist: -71 | 0
    };
  }();
  var rule88 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -219 | 0,
      lowdist: 0,
      titledist: -219 | 0
    };
  }();
  var rule89 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42261,
      lowdist: 0,
      titledist: 42261
    };
  }();
  var rule90 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42258,
      lowdist: 0,
      titledist: 42258
    };
  }();
  var rule99 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -38 | 0,
      lowdist: 0,
      titledist: -38 | 0
    };
  }();
  var gencatCS = 134217728;
  var rule199 = /* @__PURE__ */ function() {
    return {
      category: gencatCS,
      unicodeCat: NUMCAT_CS.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatCO = 268435456;
  var rule200 = /* @__PURE__ */ function() {
    return {
      category: gencatCO,
      unicodeCat: NUMCAT_CO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatCF = 65536;
  var rule16 = /* @__PURE__ */ function() {
    return {
      category: gencatCF,
      unicodeCat: NUMCAT_CF.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatCC = 1;
  var rule0 = /* @__PURE__ */ function() {
    return {
      category: gencatCC,
      unicodeCat: NUMCAT_CC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var convchars = [{
    start: 65,
    length: 26,
    convRule: rule9
  }, {
    start: 97,
    length: 26,
    convRule: rule12
  }, {
    start: 181,
    length: 1,
    convRule: rule18
  }, {
    start: 192,
    length: 23,
    convRule: rule9
  }, {
    start: 216,
    length: 7,
    convRule: rule9
  }, {
    start: 224,
    length: 23,
    convRule: rule12
  }, {
    start: 248,
    length: 7,
    convRule: rule12
  }, {
    start: 255,
    length: 1,
    convRule: rule21
  }, {
    start: 256,
    length: 1,
    convRule: rule22
  }, {
    start: 257,
    length: 1,
    convRule: rule23
  }, {
    start: 258,
    length: 1,
    convRule: rule22
  }, {
    start: 259,
    length: 1,
    convRule: rule23
  }, {
    start: 260,
    length: 1,
    convRule: rule22
  }, {
    start: 261,
    length: 1,
    convRule: rule23
  }, {
    start: 262,
    length: 1,
    convRule: rule22
  }, {
    start: 263,
    length: 1,
    convRule: rule23
  }, {
    start: 264,
    length: 1,
    convRule: rule22
  }, {
    start: 265,
    length: 1,
    convRule: rule23
  }, {
    start: 266,
    length: 1,
    convRule: rule22
  }, {
    start: 267,
    length: 1,
    convRule: rule23
  }, {
    start: 268,
    length: 1,
    convRule: rule22
  }, {
    start: 269,
    length: 1,
    convRule: rule23
  }, {
    start: 270,
    length: 1,
    convRule: rule22
  }, {
    start: 271,
    length: 1,
    convRule: rule23
  }, {
    start: 272,
    length: 1,
    convRule: rule22
  }, {
    start: 273,
    length: 1,
    convRule: rule23
  }, {
    start: 274,
    length: 1,
    convRule: rule22
  }, {
    start: 275,
    length: 1,
    convRule: rule23
  }, {
    start: 276,
    length: 1,
    convRule: rule22
  }, {
    start: 277,
    length: 1,
    convRule: rule23
  }, {
    start: 278,
    length: 1,
    convRule: rule22
  }, {
    start: 279,
    length: 1,
    convRule: rule23
  }, {
    start: 280,
    length: 1,
    convRule: rule22
  }, {
    start: 281,
    length: 1,
    convRule: rule23
  }, {
    start: 282,
    length: 1,
    convRule: rule22
  }, {
    start: 283,
    length: 1,
    convRule: rule23
  }, {
    start: 284,
    length: 1,
    convRule: rule22
  }, {
    start: 285,
    length: 1,
    convRule: rule23
  }, {
    start: 286,
    length: 1,
    convRule: rule22
  }, {
    start: 287,
    length: 1,
    convRule: rule23
  }, {
    start: 288,
    length: 1,
    convRule: rule22
  }, {
    start: 289,
    length: 1,
    convRule: rule23
  }, {
    start: 290,
    length: 1,
    convRule: rule22
  }, {
    start: 291,
    length: 1,
    convRule: rule23
  }, {
    start: 292,
    length: 1,
    convRule: rule22
  }, {
    start: 293,
    length: 1,
    convRule: rule23
  }, {
    start: 294,
    length: 1,
    convRule: rule22
  }, {
    start: 295,
    length: 1,
    convRule: rule23
  }, {
    start: 296,
    length: 1,
    convRule: rule22
  }, {
    start: 297,
    length: 1,
    convRule: rule23
  }, {
    start: 298,
    length: 1,
    convRule: rule22
  }, {
    start: 299,
    length: 1,
    convRule: rule23
  }, {
    start: 300,
    length: 1,
    convRule: rule22
  }, {
    start: 301,
    length: 1,
    convRule: rule23
  }, {
    start: 302,
    length: 1,
    convRule: rule22
  }, {
    start: 303,
    length: 1,
    convRule: rule23
  }, {
    start: 304,
    length: 1,
    convRule: rule24
  }, {
    start: 305,
    length: 1,
    convRule: rule25
  }, {
    start: 306,
    length: 1,
    convRule: rule22
  }, {
    start: 307,
    length: 1,
    convRule: rule23
  }, {
    start: 308,
    length: 1,
    convRule: rule22
  }, {
    start: 309,
    length: 1,
    convRule: rule23
  }, {
    start: 310,
    length: 1,
    convRule: rule22
  }, {
    start: 311,
    length: 1,
    convRule: rule23
  }, {
    start: 313,
    length: 1,
    convRule: rule22
  }, {
    start: 314,
    length: 1,
    convRule: rule23
  }, {
    start: 315,
    length: 1,
    convRule: rule22
  }, {
    start: 316,
    length: 1,
    convRule: rule23
  }, {
    start: 317,
    length: 1,
    convRule: rule22
  }, {
    start: 318,
    length: 1,
    convRule: rule23
  }, {
    start: 319,
    length: 1,
    convRule: rule22
  }, {
    start: 320,
    length: 1,
    convRule: rule23
  }, {
    start: 321,
    length: 1,
    convRule: rule22
  }, {
    start: 322,
    length: 1,
    convRule: rule23
  }, {
    start: 323,
    length: 1,
    convRule: rule22
  }, {
    start: 324,
    length: 1,
    convRule: rule23
  }, {
    start: 325,
    length: 1,
    convRule: rule22
  }, {
    start: 326,
    length: 1,
    convRule: rule23
  }, {
    start: 327,
    length: 1,
    convRule: rule22
  }, {
    start: 328,
    length: 1,
    convRule: rule23
  }, {
    start: 330,
    length: 1,
    convRule: rule22
  }, {
    start: 331,
    length: 1,
    convRule: rule23
  }, {
    start: 332,
    length: 1,
    convRule: rule22
  }, {
    start: 333,
    length: 1,
    convRule: rule23
  }, {
    start: 334,
    length: 1,
    convRule: rule22
  }, {
    start: 335,
    length: 1,
    convRule: rule23
  }, {
    start: 336,
    length: 1,
    convRule: rule22
  }, {
    start: 337,
    length: 1,
    convRule: rule23
  }, {
    start: 338,
    length: 1,
    convRule: rule22
  }, {
    start: 339,
    length: 1,
    convRule: rule23
  }, {
    start: 340,
    length: 1,
    convRule: rule22
  }, {
    start: 341,
    length: 1,
    convRule: rule23
  }, {
    start: 342,
    length: 1,
    convRule: rule22
  }, {
    start: 343,
    length: 1,
    convRule: rule23
  }, {
    start: 344,
    length: 1,
    convRule: rule22
  }, {
    start: 345,
    length: 1,
    convRule: rule23
  }, {
    start: 346,
    length: 1,
    convRule: rule22
  }, {
    start: 347,
    length: 1,
    convRule: rule23
  }, {
    start: 348,
    length: 1,
    convRule: rule22
  }, {
    start: 349,
    length: 1,
    convRule: rule23
  }, {
    start: 350,
    length: 1,
    convRule: rule22
  }, {
    start: 351,
    length: 1,
    convRule: rule23
  }, {
    start: 352,
    length: 1,
    convRule: rule22
  }, {
    start: 353,
    length: 1,
    convRule: rule23
  }, {
    start: 354,
    length: 1,
    convRule: rule22
  }, {
    start: 355,
    length: 1,
    convRule: rule23
  }, {
    start: 356,
    length: 1,
    convRule: rule22
  }, {
    start: 357,
    length: 1,
    convRule: rule23
  }, {
    start: 358,
    length: 1,
    convRule: rule22
  }, {
    start: 359,
    length: 1,
    convRule: rule23
  }, {
    start: 360,
    length: 1,
    convRule: rule22
  }, {
    start: 361,
    length: 1,
    convRule: rule23
  }, {
    start: 362,
    length: 1,
    convRule: rule22
  }, {
    start: 363,
    length: 1,
    convRule: rule23
  }, {
    start: 364,
    length: 1,
    convRule: rule22
  }, {
    start: 365,
    length: 1,
    convRule: rule23
  }, {
    start: 366,
    length: 1,
    convRule: rule22
  }, {
    start: 367,
    length: 1,
    convRule: rule23
  }, {
    start: 368,
    length: 1,
    convRule: rule22
  }, {
    start: 369,
    length: 1,
    convRule: rule23
  }, {
    start: 370,
    length: 1,
    convRule: rule22
  }, {
    start: 371,
    length: 1,
    convRule: rule23
  }, {
    start: 372,
    length: 1,
    convRule: rule22
  }, {
    start: 373,
    length: 1,
    convRule: rule23
  }, {
    start: 374,
    length: 1,
    convRule: rule22
  }, {
    start: 375,
    length: 1,
    convRule: rule23
  }, {
    start: 376,
    length: 1,
    convRule: rule26
  }, {
    start: 377,
    length: 1,
    convRule: rule22
  }, {
    start: 378,
    length: 1,
    convRule: rule23
  }, {
    start: 379,
    length: 1,
    convRule: rule22
  }, {
    start: 380,
    length: 1,
    convRule: rule23
  }, {
    start: 381,
    length: 1,
    convRule: rule22
  }, {
    start: 382,
    length: 1,
    convRule: rule23
  }, {
    start: 383,
    length: 1,
    convRule: rule27
  }, {
    start: 384,
    length: 1,
    convRule: rule28
  }, {
    start: 385,
    length: 1,
    convRule: rule29
  }, {
    start: 386,
    length: 1,
    convRule: rule22
  }, {
    start: 387,
    length: 1,
    convRule: rule23
  }, {
    start: 388,
    length: 1,
    convRule: rule22
  }, {
    start: 389,
    length: 1,
    convRule: rule23
  }, {
    start: 390,
    length: 1,
    convRule: rule30
  }, {
    start: 391,
    length: 1,
    convRule: rule22
  }, {
    start: 392,
    length: 1,
    convRule: rule23
  }, {
    start: 393,
    length: 2,
    convRule: rule31
  }, {
    start: 395,
    length: 1,
    convRule: rule22
  }, {
    start: 396,
    length: 1,
    convRule: rule23
  }, {
    start: 398,
    length: 1,
    convRule: rule32
  }, {
    start: 399,
    length: 1,
    convRule: rule33
  }, {
    start: 400,
    length: 1,
    convRule: rule34
  }, {
    start: 401,
    length: 1,
    convRule: rule22
  }, {
    start: 402,
    length: 1,
    convRule: rule23
  }, {
    start: 403,
    length: 1,
    convRule: rule31
  }, {
    start: 404,
    length: 1,
    convRule: rule35
  }, {
    start: 405,
    length: 1,
    convRule: rule36
  }, {
    start: 406,
    length: 1,
    convRule: rule37
  }, {
    start: 407,
    length: 1,
    convRule: rule38
  }, {
    start: 408,
    length: 1,
    convRule: rule22
  }, {
    start: 409,
    length: 1,
    convRule: rule23
  }, {
    start: 410,
    length: 1,
    convRule: rule39
  }, {
    start: 412,
    length: 1,
    convRule: rule37
  }, {
    start: 413,
    length: 1,
    convRule: rule40
  }, {
    start: 414,
    length: 1,
    convRule: rule41
  }, {
    start: 415,
    length: 1,
    convRule: rule42
  }, {
    start: 416,
    length: 1,
    convRule: rule22
  }, {
    start: 417,
    length: 1,
    convRule: rule23
  }, {
    start: 418,
    length: 1,
    convRule: rule22
  }, {
    start: 419,
    length: 1,
    convRule: rule23
  }, {
    start: 420,
    length: 1,
    convRule: rule22
  }, {
    start: 421,
    length: 1,
    convRule: rule23
  }, {
    start: 422,
    length: 1,
    convRule: rule43
  }, {
    start: 423,
    length: 1,
    convRule: rule22
  }, {
    start: 424,
    length: 1,
    convRule: rule23
  }, {
    start: 425,
    length: 1,
    convRule: rule43
  }, {
    start: 428,
    length: 1,
    convRule: rule22
  }, {
    start: 429,
    length: 1,
    convRule: rule23
  }, {
    start: 430,
    length: 1,
    convRule: rule43
  }, {
    start: 431,
    length: 1,
    convRule: rule22
  }, {
    start: 432,
    length: 1,
    convRule: rule23
  }, {
    start: 433,
    length: 2,
    convRule: rule44
  }, {
    start: 435,
    length: 1,
    convRule: rule22
  }, {
    start: 436,
    length: 1,
    convRule: rule23
  }, {
    start: 437,
    length: 1,
    convRule: rule22
  }, {
    start: 438,
    length: 1,
    convRule: rule23
  }, {
    start: 439,
    length: 1,
    convRule: rule45
  }, {
    start: 440,
    length: 1,
    convRule: rule22
  }, {
    start: 441,
    length: 1,
    convRule: rule23
  }, {
    start: 444,
    length: 1,
    convRule: rule22
  }, {
    start: 445,
    length: 1,
    convRule: rule23
  }, {
    start: 447,
    length: 1,
    convRule: rule46
  }, {
    start: 452,
    length: 1,
    convRule: rule47
  }, {
    start: 453,
    length: 1,
    convRule: rule48
  }, {
    start: 454,
    length: 1,
    convRule: rule49
  }, {
    start: 455,
    length: 1,
    convRule: rule47
  }, {
    start: 456,
    length: 1,
    convRule: rule48
  }, {
    start: 457,
    length: 1,
    convRule: rule49
  }, {
    start: 458,
    length: 1,
    convRule: rule47
  }, {
    start: 459,
    length: 1,
    convRule: rule48
  }, {
    start: 460,
    length: 1,
    convRule: rule49
  }, {
    start: 461,
    length: 1,
    convRule: rule22
  }, {
    start: 462,
    length: 1,
    convRule: rule23
  }, {
    start: 463,
    length: 1,
    convRule: rule22
  }, {
    start: 464,
    length: 1,
    convRule: rule23
  }, {
    start: 465,
    length: 1,
    convRule: rule22
  }, {
    start: 466,
    length: 1,
    convRule: rule23
  }, {
    start: 467,
    length: 1,
    convRule: rule22
  }, {
    start: 468,
    length: 1,
    convRule: rule23
  }, {
    start: 469,
    length: 1,
    convRule: rule22
  }, {
    start: 470,
    length: 1,
    convRule: rule23
  }, {
    start: 471,
    length: 1,
    convRule: rule22
  }, {
    start: 472,
    length: 1,
    convRule: rule23
  }, {
    start: 473,
    length: 1,
    convRule: rule22
  }, {
    start: 474,
    length: 1,
    convRule: rule23
  }, {
    start: 475,
    length: 1,
    convRule: rule22
  }, {
    start: 476,
    length: 1,
    convRule: rule23
  }, {
    start: 477,
    length: 1,
    convRule: rule50
  }, {
    start: 478,
    length: 1,
    convRule: rule22
  }, {
    start: 479,
    length: 1,
    convRule: rule23
  }, {
    start: 480,
    length: 1,
    convRule: rule22
  }, {
    start: 481,
    length: 1,
    convRule: rule23
  }, {
    start: 482,
    length: 1,
    convRule: rule22
  }, {
    start: 483,
    length: 1,
    convRule: rule23
  }, {
    start: 484,
    length: 1,
    convRule: rule22
  }, {
    start: 485,
    length: 1,
    convRule: rule23
  }, {
    start: 486,
    length: 1,
    convRule: rule22
  }, {
    start: 487,
    length: 1,
    convRule: rule23
  }, {
    start: 488,
    length: 1,
    convRule: rule22
  }, {
    start: 489,
    length: 1,
    convRule: rule23
  }, {
    start: 490,
    length: 1,
    convRule: rule22
  }, {
    start: 491,
    length: 1,
    convRule: rule23
  }, {
    start: 492,
    length: 1,
    convRule: rule22
  }, {
    start: 493,
    length: 1,
    convRule: rule23
  }, {
    start: 494,
    length: 1,
    convRule: rule22
  }, {
    start: 495,
    length: 1,
    convRule: rule23
  }, {
    start: 497,
    length: 1,
    convRule: rule47
  }, {
    start: 498,
    length: 1,
    convRule: rule48
  }, {
    start: 499,
    length: 1,
    convRule: rule49
  }, {
    start: 500,
    length: 1,
    convRule: rule22
  }, {
    start: 501,
    length: 1,
    convRule: rule23
  }, {
    start: 502,
    length: 1,
    convRule: rule51
  }, {
    start: 503,
    length: 1,
    convRule: rule52
  }, {
    start: 504,
    length: 1,
    convRule: rule22
  }, {
    start: 505,
    length: 1,
    convRule: rule23
  }, {
    start: 506,
    length: 1,
    convRule: rule22
  }, {
    start: 507,
    length: 1,
    convRule: rule23
  }, {
    start: 508,
    length: 1,
    convRule: rule22
  }, {
    start: 509,
    length: 1,
    convRule: rule23
  }, {
    start: 510,
    length: 1,
    convRule: rule22
  }, {
    start: 511,
    length: 1,
    convRule: rule23
  }, {
    start: 512,
    length: 1,
    convRule: rule22
  }, {
    start: 513,
    length: 1,
    convRule: rule23
  }, {
    start: 514,
    length: 1,
    convRule: rule22
  }, {
    start: 515,
    length: 1,
    convRule: rule23
  }, {
    start: 516,
    length: 1,
    convRule: rule22
  }, {
    start: 517,
    length: 1,
    convRule: rule23
  }, {
    start: 518,
    length: 1,
    convRule: rule22
  }, {
    start: 519,
    length: 1,
    convRule: rule23
  }, {
    start: 520,
    length: 1,
    convRule: rule22
  }, {
    start: 521,
    length: 1,
    convRule: rule23
  }, {
    start: 522,
    length: 1,
    convRule: rule22
  }, {
    start: 523,
    length: 1,
    convRule: rule23
  }, {
    start: 524,
    length: 1,
    convRule: rule22
  }, {
    start: 525,
    length: 1,
    convRule: rule23
  }, {
    start: 526,
    length: 1,
    convRule: rule22
  }, {
    start: 527,
    length: 1,
    convRule: rule23
  }, {
    start: 528,
    length: 1,
    convRule: rule22
  }, {
    start: 529,
    length: 1,
    convRule: rule23
  }, {
    start: 530,
    length: 1,
    convRule: rule22
  }, {
    start: 531,
    length: 1,
    convRule: rule23
  }, {
    start: 532,
    length: 1,
    convRule: rule22
  }, {
    start: 533,
    length: 1,
    convRule: rule23
  }, {
    start: 534,
    length: 1,
    convRule: rule22
  }, {
    start: 535,
    length: 1,
    convRule: rule23
  }, {
    start: 536,
    length: 1,
    convRule: rule22
  }, {
    start: 537,
    length: 1,
    convRule: rule23
  }, {
    start: 538,
    length: 1,
    convRule: rule22
  }, {
    start: 539,
    length: 1,
    convRule: rule23
  }, {
    start: 540,
    length: 1,
    convRule: rule22
  }, {
    start: 541,
    length: 1,
    convRule: rule23
  }, {
    start: 542,
    length: 1,
    convRule: rule22
  }, {
    start: 543,
    length: 1,
    convRule: rule23
  }, {
    start: 544,
    length: 1,
    convRule: rule53
  }, {
    start: 546,
    length: 1,
    convRule: rule22
  }, {
    start: 547,
    length: 1,
    convRule: rule23
  }, {
    start: 548,
    length: 1,
    convRule: rule22
  }, {
    start: 549,
    length: 1,
    convRule: rule23
  }, {
    start: 550,
    length: 1,
    convRule: rule22
  }, {
    start: 551,
    length: 1,
    convRule: rule23
  }, {
    start: 552,
    length: 1,
    convRule: rule22
  }, {
    start: 553,
    length: 1,
    convRule: rule23
  }, {
    start: 554,
    length: 1,
    convRule: rule22
  }, {
    start: 555,
    length: 1,
    convRule: rule23
  }, {
    start: 556,
    length: 1,
    convRule: rule22
  }, {
    start: 557,
    length: 1,
    convRule: rule23
  }, {
    start: 558,
    length: 1,
    convRule: rule22
  }, {
    start: 559,
    length: 1,
    convRule: rule23
  }, {
    start: 560,
    length: 1,
    convRule: rule22
  }, {
    start: 561,
    length: 1,
    convRule: rule23
  }, {
    start: 562,
    length: 1,
    convRule: rule22
  }, {
    start: 563,
    length: 1,
    convRule: rule23
  }, {
    start: 570,
    length: 1,
    convRule: rule54
  }, {
    start: 571,
    length: 1,
    convRule: rule22
  }, {
    start: 572,
    length: 1,
    convRule: rule23
  }, {
    start: 573,
    length: 1,
    convRule: rule55
  }, {
    start: 574,
    length: 1,
    convRule: rule56
  }, {
    start: 575,
    length: 2,
    convRule: rule57
  }, {
    start: 577,
    length: 1,
    convRule: rule22
  }, {
    start: 578,
    length: 1,
    convRule: rule23
  }, {
    start: 579,
    length: 1,
    convRule: rule58
  }, {
    start: 580,
    length: 1,
    convRule: rule59
  }, {
    start: 581,
    length: 1,
    convRule: rule60
  }, {
    start: 582,
    length: 1,
    convRule: rule22
  }, {
    start: 583,
    length: 1,
    convRule: rule23
  }, {
    start: 584,
    length: 1,
    convRule: rule22
  }, {
    start: 585,
    length: 1,
    convRule: rule23
  }, {
    start: 586,
    length: 1,
    convRule: rule22
  }, {
    start: 587,
    length: 1,
    convRule: rule23
  }, {
    start: 588,
    length: 1,
    convRule: rule22
  }, {
    start: 589,
    length: 1,
    convRule: rule23
  }, {
    start: 590,
    length: 1,
    convRule: rule22
  }, {
    start: 591,
    length: 1,
    convRule: rule23
  }, {
    start: 592,
    length: 1,
    convRule: rule61
  }, {
    start: 593,
    length: 1,
    convRule: rule62
  }, {
    start: 594,
    length: 1,
    convRule: rule63
  }, {
    start: 595,
    length: 1,
    convRule: rule64
  }, {
    start: 596,
    length: 1,
    convRule: rule65
  }, {
    start: 598,
    length: 2,
    convRule: rule66
  }, {
    start: 601,
    length: 1,
    convRule: rule67
  }, {
    start: 603,
    length: 1,
    convRule: rule68
  }, {
    start: 604,
    length: 1,
    convRule: rule69
  }, {
    start: 608,
    length: 1,
    convRule: rule66
  }, {
    start: 609,
    length: 1,
    convRule: rule70
  }, {
    start: 611,
    length: 1,
    convRule: rule71
  }, {
    start: 613,
    length: 1,
    convRule: rule72
  }, {
    start: 614,
    length: 1,
    convRule: rule73
  }, {
    start: 616,
    length: 1,
    convRule: rule74
  }, {
    start: 617,
    length: 1,
    convRule: rule75
  }, {
    start: 618,
    length: 1,
    convRule: rule73
  }, {
    start: 619,
    length: 1,
    convRule: rule76
  }, {
    start: 620,
    length: 1,
    convRule: rule77
  }, {
    start: 623,
    length: 1,
    convRule: rule75
  }, {
    start: 625,
    length: 1,
    convRule: rule78
  }, {
    start: 626,
    length: 1,
    convRule: rule79
  }, {
    start: 629,
    length: 1,
    convRule: rule80
  }, {
    start: 637,
    length: 1,
    convRule: rule81
  }, {
    start: 640,
    length: 1,
    convRule: rule82
  }, {
    start: 642,
    length: 1,
    convRule: rule83
  }, {
    start: 643,
    length: 1,
    convRule: rule82
  }, {
    start: 647,
    length: 1,
    convRule: rule84
  }, {
    start: 648,
    length: 1,
    convRule: rule82
  }, {
    start: 649,
    length: 1,
    convRule: rule85
  }, {
    start: 650,
    length: 2,
    convRule: rule86
  }, {
    start: 652,
    length: 1,
    convRule: rule87
  }, {
    start: 658,
    length: 1,
    convRule: rule88
  }, {
    start: 669,
    length: 1,
    convRule: rule89
  }, {
    start: 670,
    length: 1,
    convRule: rule90
  }, {
    start: 837,
    length: 1,
    convRule: rule93
  }, {
    start: 880,
    length: 1,
    convRule: rule22
  }, {
    start: 881,
    length: 1,
    convRule: rule23
  }, {
    start: 882,
    length: 1,
    convRule: rule22
  }, {
    start: 883,
    length: 1,
    convRule: rule23
  }, {
    start: 886,
    length: 1,
    convRule: rule22
  }, {
    start: 887,
    length: 1,
    convRule: rule23
  }, {
    start: 891,
    length: 3,
    convRule: rule41
  }, {
    start: 895,
    length: 1,
    convRule: rule94
  }, {
    start: 902,
    length: 1,
    convRule: rule95
  }, {
    start: 904,
    length: 3,
    convRule: rule96
  }, {
    start: 908,
    length: 1,
    convRule: rule97
  }, {
    start: 910,
    length: 2,
    convRule: rule98
  }, {
    start: 913,
    length: 17,
    convRule: rule9
  }, {
    start: 931,
    length: 9,
    convRule: rule9
  }, {
    start: 940,
    length: 1,
    convRule: rule99
  }, {
    start: 941,
    length: 3,
    convRule: rule100
  }, {
    start: 945,
    length: 17,
    convRule: rule12
  }, {
    start: 962,
    length: 1,
    convRule: rule101
  }, {
    start: 963,
    length: 9,
    convRule: rule12
  }, {
    start: 972,
    length: 1,
    convRule: rule102
  }, {
    start: 973,
    length: 2,
    convRule: rule103
  }, {
    start: 975,
    length: 1,
    convRule: rule104
  }, {
    start: 976,
    length: 1,
    convRule: rule105
  }, {
    start: 977,
    length: 1,
    convRule: rule106
  }, {
    start: 981,
    length: 1,
    convRule: rule108
  }, {
    start: 982,
    length: 1,
    convRule: rule109
  }, {
    start: 983,
    length: 1,
    convRule: rule110
  }, {
    start: 984,
    length: 1,
    convRule: rule22
  }, {
    start: 985,
    length: 1,
    convRule: rule23
  }, {
    start: 986,
    length: 1,
    convRule: rule22
  }, {
    start: 987,
    length: 1,
    convRule: rule23
  }, {
    start: 988,
    length: 1,
    convRule: rule22
  }, {
    start: 989,
    length: 1,
    convRule: rule23
  }, {
    start: 990,
    length: 1,
    convRule: rule22
  }, {
    start: 991,
    length: 1,
    convRule: rule23
  }, {
    start: 992,
    length: 1,
    convRule: rule22
  }, {
    start: 993,
    length: 1,
    convRule: rule23
  }, {
    start: 994,
    length: 1,
    convRule: rule22
  }, {
    start: 995,
    length: 1,
    convRule: rule23
  }, {
    start: 996,
    length: 1,
    convRule: rule22
  }, {
    start: 997,
    length: 1,
    convRule: rule23
  }, {
    start: 998,
    length: 1,
    convRule: rule22
  }, {
    start: 999,
    length: 1,
    convRule: rule23
  }, {
    start: 1e3,
    length: 1,
    convRule: rule22
  }, {
    start: 1001,
    length: 1,
    convRule: rule23
  }, {
    start: 1002,
    length: 1,
    convRule: rule22
  }, {
    start: 1003,
    length: 1,
    convRule: rule23
  }, {
    start: 1004,
    length: 1,
    convRule: rule22
  }, {
    start: 1005,
    length: 1,
    convRule: rule23
  }, {
    start: 1006,
    length: 1,
    convRule: rule22
  }, {
    start: 1007,
    length: 1,
    convRule: rule23
  }, {
    start: 1008,
    length: 1,
    convRule: rule111
  }, {
    start: 1009,
    length: 1,
    convRule: rule112
  }, {
    start: 1010,
    length: 1,
    convRule: rule113
  }, {
    start: 1011,
    length: 1,
    convRule: rule114
  }, {
    start: 1012,
    length: 1,
    convRule: rule115
  }, {
    start: 1013,
    length: 1,
    convRule: rule116
  }, {
    start: 1015,
    length: 1,
    convRule: rule22
  }, {
    start: 1016,
    length: 1,
    convRule: rule23
  }, {
    start: 1017,
    length: 1,
    convRule: rule117
  }, {
    start: 1018,
    length: 1,
    convRule: rule22
  }, {
    start: 1019,
    length: 1,
    convRule: rule23
  }, {
    start: 1021,
    length: 3,
    convRule: rule53
  }, {
    start: 1024,
    length: 16,
    convRule: rule118
  }, {
    start: 1040,
    length: 32,
    convRule: rule9
  }, {
    start: 1072,
    length: 32,
    convRule: rule12
  }, {
    start: 1104,
    length: 16,
    convRule: rule112
  }, {
    start: 1120,
    length: 1,
    convRule: rule22
  }, {
    start: 1121,
    length: 1,
    convRule: rule23
  }, {
    start: 1122,
    length: 1,
    convRule: rule22
  }, {
    start: 1123,
    length: 1,
    convRule: rule23
  }, {
    start: 1124,
    length: 1,
    convRule: rule22
  }, {
    start: 1125,
    length: 1,
    convRule: rule23
  }, {
    start: 1126,
    length: 1,
    convRule: rule22
  }, {
    start: 1127,
    length: 1,
    convRule: rule23
  }, {
    start: 1128,
    length: 1,
    convRule: rule22
  }, {
    start: 1129,
    length: 1,
    convRule: rule23
  }, {
    start: 1130,
    length: 1,
    convRule: rule22
  }, {
    start: 1131,
    length: 1,
    convRule: rule23
  }, {
    start: 1132,
    length: 1,
    convRule: rule22
  }, {
    start: 1133,
    length: 1,
    convRule: rule23
  }, {
    start: 1134,
    length: 1,
    convRule: rule22
  }, {
    start: 1135,
    length: 1,
    convRule: rule23
  }, {
    start: 1136,
    length: 1,
    convRule: rule22
  }, {
    start: 1137,
    length: 1,
    convRule: rule23
  }, {
    start: 1138,
    length: 1,
    convRule: rule22
  }, {
    start: 1139,
    length: 1,
    convRule: rule23
  }, {
    start: 1140,
    length: 1,
    convRule: rule22
  }, {
    start: 1141,
    length: 1,
    convRule: rule23
  }, {
    start: 1142,
    length: 1,
    convRule: rule22
  }, {
    start: 1143,
    length: 1,
    convRule: rule23
  }, {
    start: 1144,
    length: 1,
    convRule: rule22
  }, {
    start: 1145,
    length: 1,
    convRule: rule23
  }, {
    start: 1146,
    length: 1,
    convRule: rule22
  }, {
    start: 1147,
    length: 1,
    convRule: rule23
  }, {
    start: 1148,
    length: 1,
    convRule: rule22
  }, {
    start: 1149,
    length: 1,
    convRule: rule23
  }, {
    start: 1150,
    length: 1,
    convRule: rule22
  }, {
    start: 1151,
    length: 1,
    convRule: rule23
  }, {
    start: 1152,
    length: 1,
    convRule: rule22
  }, {
    start: 1153,
    length: 1,
    convRule: rule23
  }, {
    start: 1162,
    length: 1,
    convRule: rule22
  }, {
    start: 1163,
    length: 1,
    convRule: rule23
  }, {
    start: 1164,
    length: 1,
    convRule: rule22
  }, {
    start: 1165,
    length: 1,
    convRule: rule23
  }, {
    start: 1166,
    length: 1,
    convRule: rule22
  }, {
    start: 1167,
    length: 1,
    convRule: rule23
  }, {
    start: 1168,
    length: 1,
    convRule: rule22
  }, {
    start: 1169,
    length: 1,
    convRule: rule23
  }, {
    start: 1170,
    length: 1,
    convRule: rule22
  }, {
    start: 1171,
    length: 1,
    convRule: rule23
  }, {
    start: 1172,
    length: 1,
    convRule: rule22
  }, {
    start: 1173,
    length: 1,
    convRule: rule23
  }, {
    start: 1174,
    length: 1,
    convRule: rule22
  }, {
    start: 1175,
    length: 1,
    convRule: rule23
  }, {
    start: 1176,
    length: 1,
    convRule: rule22
  }, {
    start: 1177,
    length: 1,
    convRule: rule23
  }, {
    start: 1178,
    length: 1,
    convRule: rule22
  }, {
    start: 1179,
    length: 1,
    convRule: rule23
  }, {
    start: 1180,
    length: 1,
    convRule: rule22
  }, {
    start: 1181,
    length: 1,
    convRule: rule23
  }, {
    start: 1182,
    length: 1,
    convRule: rule22
  }, {
    start: 1183,
    length: 1,
    convRule: rule23
  }, {
    start: 1184,
    length: 1,
    convRule: rule22
  }, {
    start: 1185,
    length: 1,
    convRule: rule23
  }, {
    start: 1186,
    length: 1,
    convRule: rule22
  }, {
    start: 1187,
    length: 1,
    convRule: rule23
  }, {
    start: 1188,
    length: 1,
    convRule: rule22
  }, {
    start: 1189,
    length: 1,
    convRule: rule23
  }, {
    start: 1190,
    length: 1,
    convRule: rule22
  }, {
    start: 1191,
    length: 1,
    convRule: rule23
  }, {
    start: 1192,
    length: 1,
    convRule: rule22
  }, {
    start: 1193,
    length: 1,
    convRule: rule23
  }, {
    start: 1194,
    length: 1,
    convRule: rule22
  }, {
    start: 1195,
    length: 1,
    convRule: rule23
  }, {
    start: 1196,
    length: 1,
    convRule: rule22
  }, {
    start: 1197,
    length: 1,
    convRule: rule23
  }, {
    start: 1198,
    length: 1,
    convRule: rule22
  }, {
    start: 1199,
    length: 1,
    convRule: rule23
  }, {
    start: 1200,
    length: 1,
    convRule: rule22
  }, {
    start: 1201,
    length: 1,
    convRule: rule23
  }, {
    start: 1202,
    length: 1,
    convRule: rule22
  }, {
    start: 1203,
    length: 1,
    convRule: rule23
  }, {
    start: 1204,
    length: 1,
    convRule: rule22
  }, {
    start: 1205,
    length: 1,
    convRule: rule23
  }, {
    start: 1206,
    length: 1,
    convRule: rule22
  }, {
    start: 1207,
    length: 1,
    convRule: rule23
  }, {
    start: 1208,
    length: 1,
    convRule: rule22
  }, {
    start: 1209,
    length: 1,
    convRule: rule23
  }, {
    start: 1210,
    length: 1,
    convRule: rule22
  }, {
    start: 1211,
    length: 1,
    convRule: rule23
  }, {
    start: 1212,
    length: 1,
    convRule: rule22
  }, {
    start: 1213,
    length: 1,
    convRule: rule23
  }, {
    start: 1214,
    length: 1,
    convRule: rule22
  }, {
    start: 1215,
    length: 1,
    convRule: rule23
  }, {
    start: 1216,
    length: 1,
    convRule: rule120
  }, {
    start: 1217,
    length: 1,
    convRule: rule22
  }, {
    start: 1218,
    length: 1,
    convRule: rule23
  }, {
    start: 1219,
    length: 1,
    convRule: rule22
  }, {
    start: 1220,
    length: 1,
    convRule: rule23
  }, {
    start: 1221,
    length: 1,
    convRule: rule22
  }, {
    start: 1222,
    length: 1,
    convRule: rule23
  }, {
    start: 1223,
    length: 1,
    convRule: rule22
  }, {
    start: 1224,
    length: 1,
    convRule: rule23
  }, {
    start: 1225,
    length: 1,
    convRule: rule22
  }, {
    start: 1226,
    length: 1,
    convRule: rule23
  }, {
    start: 1227,
    length: 1,
    convRule: rule22
  }, {
    start: 1228,
    length: 1,
    convRule: rule23
  }, {
    start: 1229,
    length: 1,
    convRule: rule22
  }, {
    start: 1230,
    length: 1,
    convRule: rule23
  }, {
    start: 1231,
    length: 1,
    convRule: rule121
  }, {
    start: 1232,
    length: 1,
    convRule: rule22
  }, {
    start: 1233,
    length: 1,
    convRule: rule23
  }, {
    start: 1234,
    length: 1,
    convRule: rule22
  }, {
    start: 1235,
    length: 1,
    convRule: rule23
  }, {
    start: 1236,
    length: 1,
    convRule: rule22
  }, {
    start: 1237,
    length: 1,
    convRule: rule23
  }, {
    start: 1238,
    length: 1,
    convRule: rule22
  }, {
    start: 1239,
    length: 1,
    convRule: rule23
  }, {
    start: 1240,
    length: 1,
    convRule: rule22
  }, {
    start: 1241,
    length: 1,
    convRule: rule23
  }, {
    start: 1242,
    length: 1,
    convRule: rule22
  }, {
    start: 1243,
    length: 1,
    convRule: rule23
  }, {
    start: 1244,
    length: 1,
    convRule: rule22
  }, {
    start: 1245,
    length: 1,
    convRule: rule23
  }, {
    start: 1246,
    length: 1,
    convRule: rule22
  }, {
    start: 1247,
    length: 1,
    convRule: rule23
  }, {
    start: 1248,
    length: 1,
    convRule: rule22
  }, {
    start: 1249,
    length: 1,
    convRule: rule23
  }, {
    start: 1250,
    length: 1,
    convRule: rule22
  }, {
    start: 1251,
    length: 1,
    convRule: rule23
  }, {
    start: 1252,
    length: 1,
    convRule: rule22
  }, {
    start: 1253,
    length: 1,
    convRule: rule23
  }, {
    start: 1254,
    length: 1,
    convRule: rule22
  }, {
    start: 1255,
    length: 1,
    convRule: rule23
  }, {
    start: 1256,
    length: 1,
    convRule: rule22
  }, {
    start: 1257,
    length: 1,
    convRule: rule23
  }, {
    start: 1258,
    length: 1,
    convRule: rule22
  }, {
    start: 1259,
    length: 1,
    convRule: rule23
  }, {
    start: 1260,
    length: 1,
    convRule: rule22
  }, {
    start: 1261,
    length: 1,
    convRule: rule23
  }, {
    start: 1262,
    length: 1,
    convRule: rule22
  }, {
    start: 1263,
    length: 1,
    convRule: rule23
  }, {
    start: 1264,
    length: 1,
    convRule: rule22
  }, {
    start: 1265,
    length: 1,
    convRule: rule23
  }, {
    start: 1266,
    length: 1,
    convRule: rule22
  }, {
    start: 1267,
    length: 1,
    convRule: rule23
  }, {
    start: 1268,
    length: 1,
    convRule: rule22
  }, {
    start: 1269,
    length: 1,
    convRule: rule23
  }, {
    start: 1270,
    length: 1,
    convRule: rule22
  }, {
    start: 1271,
    length: 1,
    convRule: rule23
  }, {
    start: 1272,
    length: 1,
    convRule: rule22
  }, {
    start: 1273,
    length: 1,
    convRule: rule23
  }, {
    start: 1274,
    length: 1,
    convRule: rule22
  }, {
    start: 1275,
    length: 1,
    convRule: rule23
  }, {
    start: 1276,
    length: 1,
    convRule: rule22
  }, {
    start: 1277,
    length: 1,
    convRule: rule23
  }, {
    start: 1278,
    length: 1,
    convRule: rule22
  }, {
    start: 1279,
    length: 1,
    convRule: rule23
  }, {
    start: 1280,
    length: 1,
    convRule: rule22
  }, {
    start: 1281,
    length: 1,
    convRule: rule23
  }, {
    start: 1282,
    length: 1,
    convRule: rule22
  }, {
    start: 1283,
    length: 1,
    convRule: rule23
  }, {
    start: 1284,
    length: 1,
    convRule: rule22
  }, {
    start: 1285,
    length: 1,
    convRule: rule23
  }, {
    start: 1286,
    length: 1,
    convRule: rule22
  }, {
    start: 1287,
    length: 1,
    convRule: rule23
  }, {
    start: 1288,
    length: 1,
    convRule: rule22
  }, {
    start: 1289,
    length: 1,
    convRule: rule23
  }, {
    start: 1290,
    length: 1,
    convRule: rule22
  }, {
    start: 1291,
    length: 1,
    convRule: rule23
  }, {
    start: 1292,
    length: 1,
    convRule: rule22
  }, {
    start: 1293,
    length: 1,
    convRule: rule23
  }, {
    start: 1294,
    length: 1,
    convRule: rule22
  }, {
    start: 1295,
    length: 1,
    convRule: rule23
  }, {
    start: 1296,
    length: 1,
    convRule: rule22
  }, {
    start: 1297,
    length: 1,
    convRule: rule23
  }, {
    start: 1298,
    length: 1,
    convRule: rule22
  }, {
    start: 1299,
    length: 1,
    convRule: rule23
  }, {
    start: 1300,
    length: 1,
    convRule: rule22
  }, {
    start: 1301,
    length: 1,
    convRule: rule23
  }, {
    start: 1302,
    length: 1,
    convRule: rule22
  }, {
    start: 1303,
    length: 1,
    convRule: rule23
  }, {
    start: 1304,
    length: 1,
    convRule: rule22
  }, {
    start: 1305,
    length: 1,
    convRule: rule23
  }, {
    start: 1306,
    length: 1,
    convRule: rule22
  }, {
    start: 1307,
    length: 1,
    convRule: rule23
  }, {
    start: 1308,
    length: 1,
    convRule: rule22
  }, {
    start: 1309,
    length: 1,
    convRule: rule23
  }, {
    start: 1310,
    length: 1,
    convRule: rule22
  }, {
    start: 1311,
    length: 1,
    convRule: rule23
  }, {
    start: 1312,
    length: 1,
    convRule: rule22
  }, {
    start: 1313,
    length: 1,
    convRule: rule23
  }, {
    start: 1314,
    length: 1,
    convRule: rule22
  }, {
    start: 1315,
    length: 1,
    convRule: rule23
  }, {
    start: 1316,
    length: 1,
    convRule: rule22
  }, {
    start: 1317,
    length: 1,
    convRule: rule23
  }, {
    start: 1318,
    length: 1,
    convRule: rule22
  }, {
    start: 1319,
    length: 1,
    convRule: rule23
  }, {
    start: 1320,
    length: 1,
    convRule: rule22
  }, {
    start: 1321,
    length: 1,
    convRule: rule23
  }, {
    start: 1322,
    length: 1,
    convRule: rule22
  }, {
    start: 1323,
    length: 1,
    convRule: rule23
  }, {
    start: 1324,
    length: 1,
    convRule: rule22
  }, {
    start: 1325,
    length: 1,
    convRule: rule23
  }, {
    start: 1326,
    length: 1,
    convRule: rule22
  }, {
    start: 1327,
    length: 1,
    convRule: rule23
  }, {
    start: 1329,
    length: 38,
    convRule: rule122
  }, {
    start: 1377,
    length: 38,
    convRule: rule123
  }, {
    start: 4256,
    length: 38,
    convRule: rule125
  }, {
    start: 4295,
    length: 1,
    convRule: rule125
  }, {
    start: 4301,
    length: 1,
    convRule: rule125
  }, {
    start: 4304,
    length: 43,
    convRule: rule126
  }, {
    start: 4349,
    length: 3,
    convRule: rule126
  }, {
    start: 5024,
    length: 80,
    convRule: rule127
  }, {
    start: 5104,
    length: 6,
    convRule: rule104
  }, {
    start: 5112,
    length: 6,
    convRule: rule110
  }, {
    start: 7296,
    length: 1,
    convRule: rule129
  }, {
    start: 7297,
    length: 1,
    convRule: rule130
  }, {
    start: 7298,
    length: 1,
    convRule: rule131
  }, {
    start: 7299,
    length: 2,
    convRule: rule132
  }, {
    start: 7301,
    length: 1,
    convRule: rule133
  }, {
    start: 7302,
    length: 1,
    convRule: rule134
  }, {
    start: 7303,
    length: 1,
    convRule: rule135
  }, {
    start: 7304,
    length: 1,
    convRule: rule136
  }, {
    start: 7312,
    length: 43,
    convRule: rule137
  }, {
    start: 7357,
    length: 3,
    convRule: rule137
  }, {
    start: 7545,
    length: 1,
    convRule: rule138
  }, {
    start: 7549,
    length: 1,
    convRule: rule139
  }, {
    start: 7566,
    length: 1,
    convRule: rule140
  }, {
    start: 7680,
    length: 1,
    convRule: rule22
  }, {
    start: 7681,
    length: 1,
    convRule: rule23
  }, {
    start: 7682,
    length: 1,
    convRule: rule22
  }, {
    start: 7683,
    length: 1,
    convRule: rule23
  }, {
    start: 7684,
    length: 1,
    convRule: rule22
  }, {
    start: 7685,
    length: 1,
    convRule: rule23
  }, {
    start: 7686,
    length: 1,
    convRule: rule22
  }, {
    start: 7687,
    length: 1,
    convRule: rule23
  }, {
    start: 7688,
    length: 1,
    convRule: rule22
  }, {
    start: 7689,
    length: 1,
    convRule: rule23
  }, {
    start: 7690,
    length: 1,
    convRule: rule22
  }, {
    start: 7691,
    length: 1,
    convRule: rule23
  }, {
    start: 7692,
    length: 1,
    convRule: rule22
  }, {
    start: 7693,
    length: 1,
    convRule: rule23
  }, {
    start: 7694,
    length: 1,
    convRule: rule22
  }, {
    start: 7695,
    length: 1,
    convRule: rule23
  }, {
    start: 7696,
    length: 1,
    convRule: rule22
  }, {
    start: 7697,
    length: 1,
    convRule: rule23
  }, {
    start: 7698,
    length: 1,
    convRule: rule22
  }, {
    start: 7699,
    length: 1,
    convRule: rule23
  }, {
    start: 7700,
    length: 1,
    convRule: rule22
  }, {
    start: 7701,
    length: 1,
    convRule: rule23
  }, {
    start: 7702,
    length: 1,
    convRule: rule22
  }, {
    start: 7703,
    length: 1,
    convRule: rule23
  }, {
    start: 7704,
    length: 1,
    convRule: rule22
  }, {
    start: 7705,
    length: 1,
    convRule: rule23
  }, {
    start: 7706,
    length: 1,
    convRule: rule22
  }, {
    start: 7707,
    length: 1,
    convRule: rule23
  }, {
    start: 7708,
    length: 1,
    convRule: rule22
  }, {
    start: 7709,
    length: 1,
    convRule: rule23
  }, {
    start: 7710,
    length: 1,
    convRule: rule22
  }, {
    start: 7711,
    length: 1,
    convRule: rule23
  }, {
    start: 7712,
    length: 1,
    convRule: rule22
  }, {
    start: 7713,
    length: 1,
    convRule: rule23
  }, {
    start: 7714,
    length: 1,
    convRule: rule22
  }, {
    start: 7715,
    length: 1,
    convRule: rule23
  }, {
    start: 7716,
    length: 1,
    convRule: rule22
  }, {
    start: 7717,
    length: 1,
    convRule: rule23
  }, {
    start: 7718,
    length: 1,
    convRule: rule22
  }, {
    start: 7719,
    length: 1,
    convRule: rule23
  }, {
    start: 7720,
    length: 1,
    convRule: rule22
  }, {
    start: 7721,
    length: 1,
    convRule: rule23
  }, {
    start: 7722,
    length: 1,
    convRule: rule22
  }, {
    start: 7723,
    length: 1,
    convRule: rule23
  }, {
    start: 7724,
    length: 1,
    convRule: rule22
  }, {
    start: 7725,
    length: 1,
    convRule: rule23
  }, {
    start: 7726,
    length: 1,
    convRule: rule22
  }, {
    start: 7727,
    length: 1,
    convRule: rule23
  }, {
    start: 7728,
    length: 1,
    convRule: rule22
  }, {
    start: 7729,
    length: 1,
    convRule: rule23
  }, {
    start: 7730,
    length: 1,
    convRule: rule22
  }, {
    start: 7731,
    length: 1,
    convRule: rule23
  }, {
    start: 7732,
    length: 1,
    convRule: rule22
  }, {
    start: 7733,
    length: 1,
    convRule: rule23
  }, {
    start: 7734,
    length: 1,
    convRule: rule22
  }, {
    start: 7735,
    length: 1,
    convRule: rule23
  }, {
    start: 7736,
    length: 1,
    convRule: rule22
  }, {
    start: 7737,
    length: 1,
    convRule: rule23
  }, {
    start: 7738,
    length: 1,
    convRule: rule22
  }, {
    start: 7739,
    length: 1,
    convRule: rule23
  }, {
    start: 7740,
    length: 1,
    convRule: rule22
  }, {
    start: 7741,
    length: 1,
    convRule: rule23
  }, {
    start: 7742,
    length: 1,
    convRule: rule22
  }, {
    start: 7743,
    length: 1,
    convRule: rule23
  }, {
    start: 7744,
    length: 1,
    convRule: rule22
  }, {
    start: 7745,
    length: 1,
    convRule: rule23
  }, {
    start: 7746,
    length: 1,
    convRule: rule22
  }, {
    start: 7747,
    length: 1,
    convRule: rule23
  }, {
    start: 7748,
    length: 1,
    convRule: rule22
  }, {
    start: 7749,
    length: 1,
    convRule: rule23
  }, {
    start: 7750,
    length: 1,
    convRule: rule22
  }, {
    start: 7751,
    length: 1,
    convRule: rule23
  }, {
    start: 7752,
    length: 1,
    convRule: rule22
  }, {
    start: 7753,
    length: 1,
    convRule: rule23
  }, {
    start: 7754,
    length: 1,
    convRule: rule22
  }, {
    start: 7755,
    length: 1,
    convRule: rule23
  }, {
    start: 7756,
    length: 1,
    convRule: rule22
  }, {
    start: 7757,
    length: 1,
    convRule: rule23
  }, {
    start: 7758,
    length: 1,
    convRule: rule22
  }, {
    start: 7759,
    length: 1,
    convRule: rule23
  }, {
    start: 7760,
    length: 1,
    convRule: rule22
  }, {
    start: 7761,
    length: 1,
    convRule: rule23
  }, {
    start: 7762,
    length: 1,
    convRule: rule22
  }, {
    start: 7763,
    length: 1,
    convRule: rule23
  }, {
    start: 7764,
    length: 1,
    convRule: rule22
  }, {
    start: 7765,
    length: 1,
    convRule: rule23
  }, {
    start: 7766,
    length: 1,
    convRule: rule22
  }, {
    start: 7767,
    length: 1,
    convRule: rule23
  }, {
    start: 7768,
    length: 1,
    convRule: rule22
  }, {
    start: 7769,
    length: 1,
    convRule: rule23
  }, {
    start: 7770,
    length: 1,
    convRule: rule22
  }, {
    start: 7771,
    length: 1,
    convRule: rule23
  }, {
    start: 7772,
    length: 1,
    convRule: rule22
  }, {
    start: 7773,
    length: 1,
    convRule: rule23
  }, {
    start: 7774,
    length: 1,
    convRule: rule22
  }, {
    start: 7775,
    length: 1,
    convRule: rule23
  }, {
    start: 7776,
    length: 1,
    convRule: rule22
  }, {
    start: 7777,
    length: 1,
    convRule: rule23
  }, {
    start: 7778,
    length: 1,
    convRule: rule22
  }, {
    start: 7779,
    length: 1,
    convRule: rule23
  }, {
    start: 7780,
    length: 1,
    convRule: rule22
  }, {
    start: 7781,
    length: 1,
    convRule: rule23
  }, {
    start: 7782,
    length: 1,
    convRule: rule22
  }, {
    start: 7783,
    length: 1,
    convRule: rule23
  }, {
    start: 7784,
    length: 1,
    convRule: rule22
  }, {
    start: 7785,
    length: 1,
    convRule: rule23
  }, {
    start: 7786,
    length: 1,
    convRule: rule22
  }, {
    start: 7787,
    length: 1,
    convRule: rule23
  }, {
    start: 7788,
    length: 1,
    convRule: rule22
  }, {
    start: 7789,
    length: 1,
    convRule: rule23
  }, {
    start: 7790,
    length: 1,
    convRule: rule22
  }, {
    start: 7791,
    length: 1,
    convRule: rule23
  }, {
    start: 7792,
    length: 1,
    convRule: rule22
  }, {
    start: 7793,
    length: 1,
    convRule: rule23
  }, {
    start: 7794,
    length: 1,
    convRule: rule22
  }, {
    start: 7795,
    length: 1,
    convRule: rule23
  }, {
    start: 7796,
    length: 1,
    convRule: rule22
  }, {
    start: 7797,
    length: 1,
    convRule: rule23
  }, {
    start: 7798,
    length: 1,
    convRule: rule22
  }, {
    start: 7799,
    length: 1,
    convRule: rule23
  }, {
    start: 7800,
    length: 1,
    convRule: rule22
  }, {
    start: 7801,
    length: 1,
    convRule: rule23
  }, {
    start: 7802,
    length: 1,
    convRule: rule22
  }, {
    start: 7803,
    length: 1,
    convRule: rule23
  }, {
    start: 7804,
    length: 1,
    convRule: rule22
  }, {
    start: 7805,
    length: 1,
    convRule: rule23
  }, {
    start: 7806,
    length: 1,
    convRule: rule22
  }, {
    start: 7807,
    length: 1,
    convRule: rule23
  }, {
    start: 7808,
    length: 1,
    convRule: rule22
  }, {
    start: 7809,
    length: 1,
    convRule: rule23
  }, {
    start: 7810,
    length: 1,
    convRule: rule22
  }, {
    start: 7811,
    length: 1,
    convRule: rule23
  }, {
    start: 7812,
    length: 1,
    convRule: rule22
  }, {
    start: 7813,
    length: 1,
    convRule: rule23
  }, {
    start: 7814,
    length: 1,
    convRule: rule22
  }, {
    start: 7815,
    length: 1,
    convRule: rule23
  }, {
    start: 7816,
    length: 1,
    convRule: rule22
  }, {
    start: 7817,
    length: 1,
    convRule: rule23
  }, {
    start: 7818,
    length: 1,
    convRule: rule22
  }, {
    start: 7819,
    length: 1,
    convRule: rule23
  }, {
    start: 7820,
    length: 1,
    convRule: rule22
  }, {
    start: 7821,
    length: 1,
    convRule: rule23
  }, {
    start: 7822,
    length: 1,
    convRule: rule22
  }, {
    start: 7823,
    length: 1,
    convRule: rule23
  }, {
    start: 7824,
    length: 1,
    convRule: rule22
  }, {
    start: 7825,
    length: 1,
    convRule: rule23
  }, {
    start: 7826,
    length: 1,
    convRule: rule22
  }, {
    start: 7827,
    length: 1,
    convRule: rule23
  }, {
    start: 7828,
    length: 1,
    convRule: rule22
  }, {
    start: 7829,
    length: 1,
    convRule: rule23
  }, {
    start: 7835,
    length: 1,
    convRule: rule141
  }, {
    start: 7838,
    length: 1,
    convRule: rule142
  }, {
    start: 7840,
    length: 1,
    convRule: rule22
  }, {
    start: 7841,
    length: 1,
    convRule: rule23
  }, {
    start: 7842,
    length: 1,
    convRule: rule22
  }, {
    start: 7843,
    length: 1,
    convRule: rule23
  }, {
    start: 7844,
    length: 1,
    convRule: rule22
  }, {
    start: 7845,
    length: 1,
    convRule: rule23
  }, {
    start: 7846,
    length: 1,
    convRule: rule22
  }, {
    start: 7847,
    length: 1,
    convRule: rule23
  }, {
    start: 7848,
    length: 1,
    convRule: rule22
  }, {
    start: 7849,
    length: 1,
    convRule: rule23
  }, {
    start: 7850,
    length: 1,
    convRule: rule22
  }, {
    start: 7851,
    length: 1,
    convRule: rule23
  }, {
    start: 7852,
    length: 1,
    convRule: rule22
  }, {
    start: 7853,
    length: 1,
    convRule: rule23
  }, {
    start: 7854,
    length: 1,
    convRule: rule22
  }, {
    start: 7855,
    length: 1,
    convRule: rule23
  }, {
    start: 7856,
    length: 1,
    convRule: rule22
  }, {
    start: 7857,
    length: 1,
    convRule: rule23
  }, {
    start: 7858,
    length: 1,
    convRule: rule22
  }, {
    start: 7859,
    length: 1,
    convRule: rule23
  }, {
    start: 7860,
    length: 1,
    convRule: rule22
  }, {
    start: 7861,
    length: 1,
    convRule: rule23
  }, {
    start: 7862,
    length: 1,
    convRule: rule22
  }, {
    start: 7863,
    length: 1,
    convRule: rule23
  }, {
    start: 7864,
    length: 1,
    convRule: rule22
  }, {
    start: 7865,
    length: 1,
    convRule: rule23
  }, {
    start: 7866,
    length: 1,
    convRule: rule22
  }, {
    start: 7867,
    length: 1,
    convRule: rule23
  }, {
    start: 7868,
    length: 1,
    convRule: rule22
  }, {
    start: 7869,
    length: 1,
    convRule: rule23
  }, {
    start: 7870,
    length: 1,
    convRule: rule22
  }, {
    start: 7871,
    length: 1,
    convRule: rule23
  }, {
    start: 7872,
    length: 1,
    convRule: rule22
  }, {
    start: 7873,
    length: 1,
    convRule: rule23
  }, {
    start: 7874,
    length: 1,
    convRule: rule22
  }, {
    start: 7875,
    length: 1,
    convRule: rule23
  }, {
    start: 7876,
    length: 1,
    convRule: rule22
  }, {
    start: 7877,
    length: 1,
    convRule: rule23
  }, {
    start: 7878,
    length: 1,
    convRule: rule22
  }, {
    start: 7879,
    length: 1,
    convRule: rule23
  }, {
    start: 7880,
    length: 1,
    convRule: rule22
  }, {
    start: 7881,
    length: 1,
    convRule: rule23
  }, {
    start: 7882,
    length: 1,
    convRule: rule22
  }, {
    start: 7883,
    length: 1,
    convRule: rule23
  }, {
    start: 7884,
    length: 1,
    convRule: rule22
  }, {
    start: 7885,
    length: 1,
    convRule: rule23
  }, {
    start: 7886,
    length: 1,
    convRule: rule22
  }, {
    start: 7887,
    length: 1,
    convRule: rule23
  }, {
    start: 7888,
    length: 1,
    convRule: rule22
  }, {
    start: 7889,
    length: 1,
    convRule: rule23
  }, {
    start: 7890,
    length: 1,
    convRule: rule22
  }, {
    start: 7891,
    length: 1,
    convRule: rule23
  }, {
    start: 7892,
    length: 1,
    convRule: rule22
  }, {
    start: 7893,
    length: 1,
    convRule: rule23
  }, {
    start: 7894,
    length: 1,
    convRule: rule22
  }, {
    start: 7895,
    length: 1,
    convRule: rule23
  }, {
    start: 7896,
    length: 1,
    convRule: rule22
  }, {
    start: 7897,
    length: 1,
    convRule: rule23
  }, {
    start: 7898,
    length: 1,
    convRule: rule22
  }, {
    start: 7899,
    length: 1,
    convRule: rule23
  }, {
    start: 7900,
    length: 1,
    convRule: rule22
  }, {
    start: 7901,
    length: 1,
    convRule: rule23
  }, {
    start: 7902,
    length: 1,
    convRule: rule22
  }, {
    start: 7903,
    length: 1,
    convRule: rule23
  }, {
    start: 7904,
    length: 1,
    convRule: rule22
  }, {
    start: 7905,
    length: 1,
    convRule: rule23
  }, {
    start: 7906,
    length: 1,
    convRule: rule22
  }, {
    start: 7907,
    length: 1,
    convRule: rule23
  }, {
    start: 7908,
    length: 1,
    convRule: rule22
  }, {
    start: 7909,
    length: 1,
    convRule: rule23
  }, {
    start: 7910,
    length: 1,
    convRule: rule22
  }, {
    start: 7911,
    length: 1,
    convRule: rule23
  }, {
    start: 7912,
    length: 1,
    convRule: rule22
  }, {
    start: 7913,
    length: 1,
    convRule: rule23
  }, {
    start: 7914,
    length: 1,
    convRule: rule22
  }, {
    start: 7915,
    length: 1,
    convRule: rule23
  }, {
    start: 7916,
    length: 1,
    convRule: rule22
  }, {
    start: 7917,
    length: 1,
    convRule: rule23
  }, {
    start: 7918,
    length: 1,
    convRule: rule22
  }, {
    start: 7919,
    length: 1,
    convRule: rule23
  }, {
    start: 7920,
    length: 1,
    convRule: rule22
  }, {
    start: 7921,
    length: 1,
    convRule: rule23
  }, {
    start: 7922,
    length: 1,
    convRule: rule22
  }, {
    start: 7923,
    length: 1,
    convRule: rule23
  }, {
    start: 7924,
    length: 1,
    convRule: rule22
  }, {
    start: 7925,
    length: 1,
    convRule: rule23
  }, {
    start: 7926,
    length: 1,
    convRule: rule22
  }, {
    start: 7927,
    length: 1,
    convRule: rule23
  }, {
    start: 7928,
    length: 1,
    convRule: rule22
  }, {
    start: 7929,
    length: 1,
    convRule: rule23
  }, {
    start: 7930,
    length: 1,
    convRule: rule22
  }, {
    start: 7931,
    length: 1,
    convRule: rule23
  }, {
    start: 7932,
    length: 1,
    convRule: rule22
  }, {
    start: 7933,
    length: 1,
    convRule: rule23
  }, {
    start: 7934,
    length: 1,
    convRule: rule22
  }, {
    start: 7935,
    length: 1,
    convRule: rule23
  }, {
    start: 7936,
    length: 8,
    convRule: rule143
  }, {
    start: 7944,
    length: 8,
    convRule: rule144
  }, {
    start: 7952,
    length: 6,
    convRule: rule143
  }, {
    start: 7960,
    length: 6,
    convRule: rule144
  }, {
    start: 7968,
    length: 8,
    convRule: rule143
  }, {
    start: 7976,
    length: 8,
    convRule: rule144
  }, {
    start: 7984,
    length: 8,
    convRule: rule143
  }, {
    start: 7992,
    length: 8,
    convRule: rule144
  }, {
    start: 8e3,
    length: 6,
    convRule: rule143
  }, {
    start: 8008,
    length: 6,
    convRule: rule144
  }, {
    start: 8017,
    length: 1,
    convRule: rule143
  }, {
    start: 8019,
    length: 1,
    convRule: rule143
  }, {
    start: 8021,
    length: 1,
    convRule: rule143
  }, {
    start: 8023,
    length: 1,
    convRule: rule143
  }, {
    start: 8025,
    length: 1,
    convRule: rule144
  }, {
    start: 8027,
    length: 1,
    convRule: rule144
  }, {
    start: 8029,
    length: 1,
    convRule: rule144
  }, {
    start: 8031,
    length: 1,
    convRule: rule144
  }, {
    start: 8032,
    length: 8,
    convRule: rule143
  }, {
    start: 8040,
    length: 8,
    convRule: rule144
  }, {
    start: 8048,
    length: 2,
    convRule: rule145
  }, {
    start: 8050,
    length: 4,
    convRule: rule146
  }, {
    start: 8054,
    length: 2,
    convRule: rule147
  }, {
    start: 8056,
    length: 2,
    convRule: rule148
  }, {
    start: 8058,
    length: 2,
    convRule: rule149
  }, {
    start: 8060,
    length: 2,
    convRule: rule150
  }, {
    start: 8064,
    length: 8,
    convRule: rule143
  }, {
    start: 8072,
    length: 8,
    convRule: rule151
  }, {
    start: 8080,
    length: 8,
    convRule: rule143
  }, {
    start: 8088,
    length: 8,
    convRule: rule151
  }, {
    start: 8096,
    length: 8,
    convRule: rule143
  }, {
    start: 8104,
    length: 8,
    convRule: rule151
  }, {
    start: 8112,
    length: 2,
    convRule: rule143
  }, {
    start: 8115,
    length: 1,
    convRule: rule152
  }, {
    start: 8120,
    length: 2,
    convRule: rule144
  }, {
    start: 8122,
    length: 2,
    convRule: rule153
  }, {
    start: 8124,
    length: 1,
    convRule: rule154
  }, {
    start: 8126,
    length: 1,
    convRule: rule155
  }, {
    start: 8131,
    length: 1,
    convRule: rule152
  }, {
    start: 8136,
    length: 4,
    convRule: rule156
  }, {
    start: 8140,
    length: 1,
    convRule: rule154
  }, {
    start: 8144,
    length: 2,
    convRule: rule143
  }, {
    start: 8152,
    length: 2,
    convRule: rule144
  }, {
    start: 8154,
    length: 2,
    convRule: rule157
  }, {
    start: 8160,
    length: 2,
    convRule: rule143
  }, {
    start: 8165,
    length: 1,
    convRule: rule113
  }, {
    start: 8168,
    length: 2,
    convRule: rule144
  }, {
    start: 8170,
    length: 2,
    convRule: rule158
  }, {
    start: 8172,
    length: 1,
    convRule: rule117
  }, {
    start: 8179,
    length: 1,
    convRule: rule152
  }, {
    start: 8184,
    length: 2,
    convRule: rule159
  }, {
    start: 8186,
    length: 2,
    convRule: rule160
  }, {
    start: 8188,
    length: 1,
    convRule: rule154
  }, {
    start: 8486,
    length: 1,
    convRule: rule163
  }, {
    start: 8490,
    length: 1,
    convRule: rule164
  }, {
    start: 8491,
    length: 1,
    convRule: rule165
  }, {
    start: 8498,
    length: 1,
    convRule: rule166
  }, {
    start: 8526,
    length: 1,
    convRule: rule167
  }, {
    start: 8544,
    length: 16,
    convRule: rule168
  }, {
    start: 8560,
    length: 16,
    convRule: rule169
  }, {
    start: 8579,
    length: 1,
    convRule: rule22
  }, {
    start: 8580,
    length: 1,
    convRule: rule23
  }, {
    start: 9398,
    length: 26,
    convRule: rule170
  }, {
    start: 9424,
    length: 26,
    convRule: rule171
  }, {
    start: 11264,
    length: 47,
    convRule: rule122
  }, {
    start: 11312,
    length: 47,
    convRule: rule123
  }, {
    start: 11360,
    length: 1,
    convRule: rule22
  }, {
    start: 11361,
    length: 1,
    convRule: rule23
  }, {
    start: 11362,
    length: 1,
    convRule: rule172
  }, {
    start: 11363,
    length: 1,
    convRule: rule173
  }, {
    start: 11364,
    length: 1,
    convRule: rule174
  }, {
    start: 11365,
    length: 1,
    convRule: rule175
  }, {
    start: 11366,
    length: 1,
    convRule: rule176
  }, {
    start: 11367,
    length: 1,
    convRule: rule22
  }, {
    start: 11368,
    length: 1,
    convRule: rule23
  }, {
    start: 11369,
    length: 1,
    convRule: rule22
  }, {
    start: 11370,
    length: 1,
    convRule: rule23
  }, {
    start: 11371,
    length: 1,
    convRule: rule22
  }, {
    start: 11372,
    length: 1,
    convRule: rule23
  }, {
    start: 11373,
    length: 1,
    convRule: rule177
  }, {
    start: 11374,
    length: 1,
    convRule: rule178
  }, {
    start: 11375,
    length: 1,
    convRule: rule179
  }, {
    start: 11376,
    length: 1,
    convRule: rule180
  }, {
    start: 11378,
    length: 1,
    convRule: rule22
  }, {
    start: 11379,
    length: 1,
    convRule: rule23
  }, {
    start: 11381,
    length: 1,
    convRule: rule22
  }, {
    start: 11382,
    length: 1,
    convRule: rule23
  }, {
    start: 11390,
    length: 2,
    convRule: rule181
  }, {
    start: 11392,
    length: 1,
    convRule: rule22
  }, {
    start: 11393,
    length: 1,
    convRule: rule23
  }, {
    start: 11394,
    length: 1,
    convRule: rule22
  }, {
    start: 11395,
    length: 1,
    convRule: rule23
  }, {
    start: 11396,
    length: 1,
    convRule: rule22
  }, {
    start: 11397,
    length: 1,
    convRule: rule23
  }, {
    start: 11398,
    length: 1,
    convRule: rule22
  }, {
    start: 11399,
    length: 1,
    convRule: rule23
  }, {
    start: 11400,
    length: 1,
    convRule: rule22
  }, {
    start: 11401,
    length: 1,
    convRule: rule23
  }, {
    start: 11402,
    length: 1,
    convRule: rule22
  }, {
    start: 11403,
    length: 1,
    convRule: rule23
  }, {
    start: 11404,
    length: 1,
    convRule: rule22
  }, {
    start: 11405,
    length: 1,
    convRule: rule23
  }, {
    start: 11406,
    length: 1,
    convRule: rule22
  }, {
    start: 11407,
    length: 1,
    convRule: rule23
  }, {
    start: 11408,
    length: 1,
    convRule: rule22
  }, {
    start: 11409,
    length: 1,
    convRule: rule23
  }, {
    start: 11410,
    length: 1,
    convRule: rule22
  }, {
    start: 11411,
    length: 1,
    convRule: rule23
  }, {
    start: 11412,
    length: 1,
    convRule: rule22
  }, {
    start: 11413,
    length: 1,
    convRule: rule23
  }, {
    start: 11414,
    length: 1,
    convRule: rule22
  }, {
    start: 11415,
    length: 1,
    convRule: rule23
  }, {
    start: 11416,
    length: 1,
    convRule: rule22
  }, {
    start: 11417,
    length: 1,
    convRule: rule23
  }, {
    start: 11418,
    length: 1,
    convRule: rule22
  }, {
    start: 11419,
    length: 1,
    convRule: rule23
  }, {
    start: 11420,
    length: 1,
    convRule: rule22
  }, {
    start: 11421,
    length: 1,
    convRule: rule23
  }, {
    start: 11422,
    length: 1,
    convRule: rule22
  }, {
    start: 11423,
    length: 1,
    convRule: rule23
  }, {
    start: 11424,
    length: 1,
    convRule: rule22
  }, {
    start: 11425,
    length: 1,
    convRule: rule23
  }, {
    start: 11426,
    length: 1,
    convRule: rule22
  }, {
    start: 11427,
    length: 1,
    convRule: rule23
  }, {
    start: 11428,
    length: 1,
    convRule: rule22
  }, {
    start: 11429,
    length: 1,
    convRule: rule23
  }, {
    start: 11430,
    length: 1,
    convRule: rule22
  }, {
    start: 11431,
    length: 1,
    convRule: rule23
  }, {
    start: 11432,
    length: 1,
    convRule: rule22
  }, {
    start: 11433,
    length: 1,
    convRule: rule23
  }, {
    start: 11434,
    length: 1,
    convRule: rule22
  }, {
    start: 11435,
    length: 1,
    convRule: rule23
  }, {
    start: 11436,
    length: 1,
    convRule: rule22
  }, {
    start: 11437,
    length: 1,
    convRule: rule23
  }, {
    start: 11438,
    length: 1,
    convRule: rule22
  }, {
    start: 11439,
    length: 1,
    convRule: rule23
  }, {
    start: 11440,
    length: 1,
    convRule: rule22
  }, {
    start: 11441,
    length: 1,
    convRule: rule23
  }, {
    start: 11442,
    length: 1,
    convRule: rule22
  }, {
    start: 11443,
    length: 1,
    convRule: rule23
  }, {
    start: 11444,
    length: 1,
    convRule: rule22
  }, {
    start: 11445,
    length: 1,
    convRule: rule23
  }, {
    start: 11446,
    length: 1,
    convRule: rule22
  }, {
    start: 11447,
    length: 1,
    convRule: rule23
  }, {
    start: 11448,
    length: 1,
    convRule: rule22
  }, {
    start: 11449,
    length: 1,
    convRule: rule23
  }, {
    start: 11450,
    length: 1,
    convRule: rule22
  }, {
    start: 11451,
    length: 1,
    convRule: rule23
  }, {
    start: 11452,
    length: 1,
    convRule: rule22
  }, {
    start: 11453,
    length: 1,
    convRule: rule23
  }, {
    start: 11454,
    length: 1,
    convRule: rule22
  }, {
    start: 11455,
    length: 1,
    convRule: rule23
  }, {
    start: 11456,
    length: 1,
    convRule: rule22
  }, {
    start: 11457,
    length: 1,
    convRule: rule23
  }, {
    start: 11458,
    length: 1,
    convRule: rule22
  }, {
    start: 11459,
    length: 1,
    convRule: rule23
  }, {
    start: 11460,
    length: 1,
    convRule: rule22
  }, {
    start: 11461,
    length: 1,
    convRule: rule23
  }, {
    start: 11462,
    length: 1,
    convRule: rule22
  }, {
    start: 11463,
    length: 1,
    convRule: rule23
  }, {
    start: 11464,
    length: 1,
    convRule: rule22
  }, {
    start: 11465,
    length: 1,
    convRule: rule23
  }, {
    start: 11466,
    length: 1,
    convRule: rule22
  }, {
    start: 11467,
    length: 1,
    convRule: rule23
  }, {
    start: 11468,
    length: 1,
    convRule: rule22
  }, {
    start: 11469,
    length: 1,
    convRule: rule23
  }, {
    start: 11470,
    length: 1,
    convRule: rule22
  }, {
    start: 11471,
    length: 1,
    convRule: rule23
  }, {
    start: 11472,
    length: 1,
    convRule: rule22
  }, {
    start: 11473,
    length: 1,
    convRule: rule23
  }, {
    start: 11474,
    length: 1,
    convRule: rule22
  }, {
    start: 11475,
    length: 1,
    convRule: rule23
  }, {
    start: 11476,
    length: 1,
    convRule: rule22
  }, {
    start: 11477,
    length: 1,
    convRule: rule23
  }, {
    start: 11478,
    length: 1,
    convRule: rule22
  }, {
    start: 11479,
    length: 1,
    convRule: rule23
  }, {
    start: 11480,
    length: 1,
    convRule: rule22
  }, {
    start: 11481,
    length: 1,
    convRule: rule23
  }, {
    start: 11482,
    length: 1,
    convRule: rule22
  }, {
    start: 11483,
    length: 1,
    convRule: rule23
  }, {
    start: 11484,
    length: 1,
    convRule: rule22
  }, {
    start: 11485,
    length: 1,
    convRule: rule23
  }, {
    start: 11486,
    length: 1,
    convRule: rule22
  }, {
    start: 11487,
    length: 1,
    convRule: rule23
  }, {
    start: 11488,
    length: 1,
    convRule: rule22
  }, {
    start: 11489,
    length: 1,
    convRule: rule23
  }, {
    start: 11490,
    length: 1,
    convRule: rule22
  }, {
    start: 11491,
    length: 1,
    convRule: rule23
  }, {
    start: 11499,
    length: 1,
    convRule: rule22
  }, {
    start: 11500,
    length: 1,
    convRule: rule23
  }, {
    start: 11501,
    length: 1,
    convRule: rule22
  }, {
    start: 11502,
    length: 1,
    convRule: rule23
  }, {
    start: 11506,
    length: 1,
    convRule: rule22
  }, {
    start: 11507,
    length: 1,
    convRule: rule23
  }, {
    start: 11520,
    length: 38,
    convRule: rule182
  }, {
    start: 11559,
    length: 1,
    convRule: rule182
  }, {
    start: 11565,
    length: 1,
    convRule: rule182
  }, {
    start: 42560,
    length: 1,
    convRule: rule22
  }, {
    start: 42561,
    length: 1,
    convRule: rule23
  }, {
    start: 42562,
    length: 1,
    convRule: rule22
  }, {
    start: 42563,
    length: 1,
    convRule: rule23
  }, {
    start: 42564,
    length: 1,
    convRule: rule22
  }, {
    start: 42565,
    length: 1,
    convRule: rule23
  }, {
    start: 42566,
    length: 1,
    convRule: rule22
  }, {
    start: 42567,
    length: 1,
    convRule: rule23
  }, {
    start: 42568,
    length: 1,
    convRule: rule22
  }, {
    start: 42569,
    length: 1,
    convRule: rule23
  }, {
    start: 42570,
    length: 1,
    convRule: rule22
  }, {
    start: 42571,
    length: 1,
    convRule: rule23
  }, {
    start: 42572,
    length: 1,
    convRule: rule22
  }, {
    start: 42573,
    length: 1,
    convRule: rule23
  }, {
    start: 42574,
    length: 1,
    convRule: rule22
  }, {
    start: 42575,
    length: 1,
    convRule: rule23
  }, {
    start: 42576,
    length: 1,
    convRule: rule22
  }, {
    start: 42577,
    length: 1,
    convRule: rule23
  }, {
    start: 42578,
    length: 1,
    convRule: rule22
  }, {
    start: 42579,
    length: 1,
    convRule: rule23
  }, {
    start: 42580,
    length: 1,
    convRule: rule22
  }, {
    start: 42581,
    length: 1,
    convRule: rule23
  }, {
    start: 42582,
    length: 1,
    convRule: rule22
  }, {
    start: 42583,
    length: 1,
    convRule: rule23
  }, {
    start: 42584,
    length: 1,
    convRule: rule22
  }, {
    start: 42585,
    length: 1,
    convRule: rule23
  }, {
    start: 42586,
    length: 1,
    convRule: rule22
  }, {
    start: 42587,
    length: 1,
    convRule: rule23
  }, {
    start: 42588,
    length: 1,
    convRule: rule22
  }, {
    start: 42589,
    length: 1,
    convRule: rule23
  }, {
    start: 42590,
    length: 1,
    convRule: rule22
  }, {
    start: 42591,
    length: 1,
    convRule: rule23
  }, {
    start: 42592,
    length: 1,
    convRule: rule22
  }, {
    start: 42593,
    length: 1,
    convRule: rule23
  }, {
    start: 42594,
    length: 1,
    convRule: rule22
  }, {
    start: 42595,
    length: 1,
    convRule: rule23
  }, {
    start: 42596,
    length: 1,
    convRule: rule22
  }, {
    start: 42597,
    length: 1,
    convRule: rule23
  }, {
    start: 42598,
    length: 1,
    convRule: rule22
  }, {
    start: 42599,
    length: 1,
    convRule: rule23
  }, {
    start: 42600,
    length: 1,
    convRule: rule22
  }, {
    start: 42601,
    length: 1,
    convRule: rule23
  }, {
    start: 42602,
    length: 1,
    convRule: rule22
  }, {
    start: 42603,
    length: 1,
    convRule: rule23
  }, {
    start: 42604,
    length: 1,
    convRule: rule22
  }, {
    start: 42605,
    length: 1,
    convRule: rule23
  }, {
    start: 42624,
    length: 1,
    convRule: rule22
  }, {
    start: 42625,
    length: 1,
    convRule: rule23
  }, {
    start: 42626,
    length: 1,
    convRule: rule22
  }, {
    start: 42627,
    length: 1,
    convRule: rule23
  }, {
    start: 42628,
    length: 1,
    convRule: rule22
  }, {
    start: 42629,
    length: 1,
    convRule: rule23
  }, {
    start: 42630,
    length: 1,
    convRule: rule22
  }, {
    start: 42631,
    length: 1,
    convRule: rule23
  }, {
    start: 42632,
    length: 1,
    convRule: rule22
  }, {
    start: 42633,
    length: 1,
    convRule: rule23
  }, {
    start: 42634,
    length: 1,
    convRule: rule22
  }, {
    start: 42635,
    length: 1,
    convRule: rule23
  }, {
    start: 42636,
    length: 1,
    convRule: rule22
  }, {
    start: 42637,
    length: 1,
    convRule: rule23
  }, {
    start: 42638,
    length: 1,
    convRule: rule22
  }, {
    start: 42639,
    length: 1,
    convRule: rule23
  }, {
    start: 42640,
    length: 1,
    convRule: rule22
  }, {
    start: 42641,
    length: 1,
    convRule: rule23
  }, {
    start: 42642,
    length: 1,
    convRule: rule22
  }, {
    start: 42643,
    length: 1,
    convRule: rule23
  }, {
    start: 42644,
    length: 1,
    convRule: rule22
  }, {
    start: 42645,
    length: 1,
    convRule: rule23
  }, {
    start: 42646,
    length: 1,
    convRule: rule22
  }, {
    start: 42647,
    length: 1,
    convRule: rule23
  }, {
    start: 42648,
    length: 1,
    convRule: rule22
  }, {
    start: 42649,
    length: 1,
    convRule: rule23
  }, {
    start: 42650,
    length: 1,
    convRule: rule22
  }, {
    start: 42651,
    length: 1,
    convRule: rule23
  }, {
    start: 42786,
    length: 1,
    convRule: rule22
  }, {
    start: 42787,
    length: 1,
    convRule: rule23
  }, {
    start: 42788,
    length: 1,
    convRule: rule22
  }, {
    start: 42789,
    length: 1,
    convRule: rule23
  }, {
    start: 42790,
    length: 1,
    convRule: rule22
  }, {
    start: 42791,
    length: 1,
    convRule: rule23
  }, {
    start: 42792,
    length: 1,
    convRule: rule22
  }, {
    start: 42793,
    length: 1,
    convRule: rule23
  }, {
    start: 42794,
    length: 1,
    convRule: rule22
  }, {
    start: 42795,
    length: 1,
    convRule: rule23
  }, {
    start: 42796,
    length: 1,
    convRule: rule22
  }, {
    start: 42797,
    length: 1,
    convRule: rule23
  }, {
    start: 42798,
    length: 1,
    convRule: rule22
  }, {
    start: 42799,
    length: 1,
    convRule: rule23
  }, {
    start: 42802,
    length: 1,
    convRule: rule22
  }, {
    start: 42803,
    length: 1,
    convRule: rule23
  }, {
    start: 42804,
    length: 1,
    convRule: rule22
  }, {
    start: 42805,
    length: 1,
    convRule: rule23
  }, {
    start: 42806,
    length: 1,
    convRule: rule22
  }, {
    start: 42807,
    length: 1,
    convRule: rule23
  }, {
    start: 42808,
    length: 1,
    convRule: rule22
  }, {
    start: 42809,
    length: 1,
    convRule: rule23
  }, {
    start: 42810,
    length: 1,
    convRule: rule22
  }, {
    start: 42811,
    length: 1,
    convRule: rule23
  }, {
    start: 42812,
    length: 1,
    convRule: rule22
  }, {
    start: 42813,
    length: 1,
    convRule: rule23
  }, {
    start: 42814,
    length: 1,
    convRule: rule22
  }, {
    start: 42815,
    length: 1,
    convRule: rule23
  }, {
    start: 42816,
    length: 1,
    convRule: rule22
  }, {
    start: 42817,
    length: 1,
    convRule: rule23
  }, {
    start: 42818,
    length: 1,
    convRule: rule22
  }, {
    start: 42819,
    length: 1,
    convRule: rule23
  }, {
    start: 42820,
    length: 1,
    convRule: rule22
  }, {
    start: 42821,
    length: 1,
    convRule: rule23
  }, {
    start: 42822,
    length: 1,
    convRule: rule22
  }, {
    start: 42823,
    length: 1,
    convRule: rule23
  }, {
    start: 42824,
    length: 1,
    convRule: rule22
  }, {
    start: 42825,
    length: 1,
    convRule: rule23
  }, {
    start: 42826,
    length: 1,
    convRule: rule22
  }, {
    start: 42827,
    length: 1,
    convRule: rule23
  }, {
    start: 42828,
    length: 1,
    convRule: rule22
  }, {
    start: 42829,
    length: 1,
    convRule: rule23
  }, {
    start: 42830,
    length: 1,
    convRule: rule22
  }, {
    start: 42831,
    length: 1,
    convRule: rule23
  }, {
    start: 42832,
    length: 1,
    convRule: rule22
  }, {
    start: 42833,
    length: 1,
    convRule: rule23
  }, {
    start: 42834,
    length: 1,
    convRule: rule22
  }, {
    start: 42835,
    length: 1,
    convRule: rule23
  }, {
    start: 42836,
    length: 1,
    convRule: rule22
  }, {
    start: 42837,
    length: 1,
    convRule: rule23
  }, {
    start: 42838,
    length: 1,
    convRule: rule22
  }, {
    start: 42839,
    length: 1,
    convRule: rule23
  }, {
    start: 42840,
    length: 1,
    convRule: rule22
  }, {
    start: 42841,
    length: 1,
    convRule: rule23
  }, {
    start: 42842,
    length: 1,
    convRule: rule22
  }, {
    start: 42843,
    length: 1,
    convRule: rule23
  }, {
    start: 42844,
    length: 1,
    convRule: rule22
  }, {
    start: 42845,
    length: 1,
    convRule: rule23
  }, {
    start: 42846,
    length: 1,
    convRule: rule22
  }, {
    start: 42847,
    length: 1,
    convRule: rule23
  }, {
    start: 42848,
    length: 1,
    convRule: rule22
  }, {
    start: 42849,
    length: 1,
    convRule: rule23
  }, {
    start: 42850,
    length: 1,
    convRule: rule22
  }, {
    start: 42851,
    length: 1,
    convRule: rule23
  }, {
    start: 42852,
    length: 1,
    convRule: rule22
  }, {
    start: 42853,
    length: 1,
    convRule: rule23
  }, {
    start: 42854,
    length: 1,
    convRule: rule22
  }, {
    start: 42855,
    length: 1,
    convRule: rule23
  }, {
    start: 42856,
    length: 1,
    convRule: rule22
  }, {
    start: 42857,
    length: 1,
    convRule: rule23
  }, {
    start: 42858,
    length: 1,
    convRule: rule22
  }, {
    start: 42859,
    length: 1,
    convRule: rule23
  }, {
    start: 42860,
    length: 1,
    convRule: rule22
  }, {
    start: 42861,
    length: 1,
    convRule: rule23
  }, {
    start: 42862,
    length: 1,
    convRule: rule22
  }, {
    start: 42863,
    length: 1,
    convRule: rule23
  }, {
    start: 42873,
    length: 1,
    convRule: rule22
  }, {
    start: 42874,
    length: 1,
    convRule: rule23
  }, {
    start: 42875,
    length: 1,
    convRule: rule22
  }, {
    start: 42876,
    length: 1,
    convRule: rule23
  }, {
    start: 42877,
    length: 1,
    convRule: rule183
  }, {
    start: 42878,
    length: 1,
    convRule: rule22
  }, {
    start: 42879,
    length: 1,
    convRule: rule23
  }, {
    start: 42880,
    length: 1,
    convRule: rule22
  }, {
    start: 42881,
    length: 1,
    convRule: rule23
  }, {
    start: 42882,
    length: 1,
    convRule: rule22
  }, {
    start: 42883,
    length: 1,
    convRule: rule23
  }, {
    start: 42884,
    length: 1,
    convRule: rule22
  }, {
    start: 42885,
    length: 1,
    convRule: rule23
  }, {
    start: 42886,
    length: 1,
    convRule: rule22
  }, {
    start: 42887,
    length: 1,
    convRule: rule23
  }, {
    start: 42891,
    length: 1,
    convRule: rule22
  }, {
    start: 42892,
    length: 1,
    convRule: rule23
  }, {
    start: 42893,
    length: 1,
    convRule: rule184
  }, {
    start: 42896,
    length: 1,
    convRule: rule22
  }, {
    start: 42897,
    length: 1,
    convRule: rule23
  }, {
    start: 42898,
    length: 1,
    convRule: rule22
  }, {
    start: 42899,
    length: 1,
    convRule: rule23
  }, {
    start: 42900,
    length: 1,
    convRule: rule185
  }, {
    start: 42902,
    length: 1,
    convRule: rule22
  }, {
    start: 42903,
    length: 1,
    convRule: rule23
  }, {
    start: 42904,
    length: 1,
    convRule: rule22
  }, {
    start: 42905,
    length: 1,
    convRule: rule23
  }, {
    start: 42906,
    length: 1,
    convRule: rule22
  }, {
    start: 42907,
    length: 1,
    convRule: rule23
  }, {
    start: 42908,
    length: 1,
    convRule: rule22
  }, {
    start: 42909,
    length: 1,
    convRule: rule23
  }, {
    start: 42910,
    length: 1,
    convRule: rule22
  }, {
    start: 42911,
    length: 1,
    convRule: rule23
  }, {
    start: 42912,
    length: 1,
    convRule: rule22
  }, {
    start: 42913,
    length: 1,
    convRule: rule23
  }, {
    start: 42914,
    length: 1,
    convRule: rule22
  }, {
    start: 42915,
    length: 1,
    convRule: rule23
  }, {
    start: 42916,
    length: 1,
    convRule: rule22
  }, {
    start: 42917,
    length: 1,
    convRule: rule23
  }, {
    start: 42918,
    length: 1,
    convRule: rule22
  }, {
    start: 42919,
    length: 1,
    convRule: rule23
  }, {
    start: 42920,
    length: 1,
    convRule: rule22
  }, {
    start: 42921,
    length: 1,
    convRule: rule23
  }, {
    start: 42922,
    length: 1,
    convRule: rule186
  }, {
    start: 42923,
    length: 1,
    convRule: rule187
  }, {
    start: 42924,
    length: 1,
    convRule: rule188
  }, {
    start: 42925,
    length: 1,
    convRule: rule189
  }, {
    start: 42926,
    length: 1,
    convRule: rule186
  }, {
    start: 42928,
    length: 1,
    convRule: rule190
  }, {
    start: 42929,
    length: 1,
    convRule: rule191
  }, {
    start: 42930,
    length: 1,
    convRule: rule192
  }, {
    start: 42931,
    length: 1,
    convRule: rule193
  }, {
    start: 42932,
    length: 1,
    convRule: rule22
  }, {
    start: 42933,
    length: 1,
    convRule: rule23
  }, {
    start: 42934,
    length: 1,
    convRule: rule22
  }, {
    start: 42935,
    length: 1,
    convRule: rule23
  }, {
    start: 42936,
    length: 1,
    convRule: rule22
  }, {
    start: 42937,
    length: 1,
    convRule: rule23
  }, {
    start: 42938,
    length: 1,
    convRule: rule22
  }, {
    start: 42939,
    length: 1,
    convRule: rule23
  }, {
    start: 42940,
    length: 1,
    convRule: rule22
  }, {
    start: 42941,
    length: 1,
    convRule: rule23
  }, {
    start: 42942,
    length: 1,
    convRule: rule22
  }, {
    start: 42943,
    length: 1,
    convRule: rule23
  }, {
    start: 42946,
    length: 1,
    convRule: rule22
  }, {
    start: 42947,
    length: 1,
    convRule: rule23
  }, {
    start: 42948,
    length: 1,
    convRule: rule194
  }, {
    start: 42949,
    length: 1,
    convRule: rule195
  }, {
    start: 42950,
    length: 1,
    convRule: rule196
  }, {
    start: 42951,
    length: 1,
    convRule: rule22
  }, {
    start: 42952,
    length: 1,
    convRule: rule23
  }, {
    start: 42953,
    length: 1,
    convRule: rule22
  }, {
    start: 42954,
    length: 1,
    convRule: rule23
  }, {
    start: 42997,
    length: 1,
    convRule: rule22
  }, {
    start: 42998,
    length: 1,
    convRule: rule23
  }, {
    start: 43859,
    length: 1,
    convRule: rule197
  }, {
    start: 43888,
    length: 80,
    convRule: rule198
  }, {
    start: 65313,
    length: 26,
    convRule: rule9
  }, {
    start: 65345,
    length: 26,
    convRule: rule12
  }, {
    start: 66560,
    length: 40,
    convRule: rule201
  }, {
    start: 66600,
    length: 40,
    convRule: rule202
  }, {
    start: 66736,
    length: 36,
    convRule: rule201
  }, {
    start: 66776,
    length: 36,
    convRule: rule202
  }, {
    start: 68736,
    length: 51,
    convRule: rule97
  }, {
    start: 68800,
    length: 51,
    convRule: rule102
  }, {
    start: 71840,
    length: 32,
    convRule: rule9
  }, {
    start: 71872,
    length: 32,
    convRule: rule12
  }, {
    start: 93760,
    length: 32,
    convRule: rule9
  }, {
    start: 93792,
    length: 32,
    convRule: rule12
  }, {
    start: 125184,
    length: 34,
    convRule: rule203
  }, {
    start: 125218,
    length: 34,
    convRule: rule204
  }];
  var bsearch = function(a2) {
    return function(array) {
      return function(size6) {
        return function(compare9) {
          var go2 = function($copy_i) {
            return function($copy_k) {
              var $tco_var_i = $copy_i;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(i2, k) {
                if (i2 > k || i2 >= length(array)) {
                  $tco_done = true;
                  return Nothing.value;
                }
                ;
                if (otherwise) {
                  var j = floor2(toNumber2(i2 + k | 0) / 2);
                  var b2 = unsafeIndex2(array)(j);
                  var v = compare9(a2)(b2);
                  if (v instanceof EQ) {
                    $tco_done = true;
                    return new Just(b2);
                  }
                  ;
                  if (v instanceof GT) {
                    $tco_var_i = j + 1 | 0;
                    $copy_k = k;
                    return;
                  }
                  ;
                  $tco_var_i = i2;
                  $copy_k = j - 1 | 0;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5622, column 3 - line 5632, column 30): " + [i2.constructor.name, k.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_i, $copy_k);
              }
              ;
              return $tco_result;
            };
          };
          return go2(0)(size6);
        };
      };
    };
  };
  var blkCmp = function(v) {
    return function(v1) {
      if (v.start >= v1.start && v.start < (v1.start + v1.length | 0)) {
        return EQ.value;
      }
      ;
      if (v.start > v1.start) {
        return GT.value;
      }
      ;
      if (otherwise) {
        return LT.value;
      }
      ;
      throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5598, column 1 - line 5598, column 45): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var getRule = function(blocks) {
    return function(unichar) {
      return function(size6) {
        var key = {
          start: unichar,
          length: 1,
          convRule: nullrule
        };
        var maybeCharBlock = bsearch(key)(blocks)(size6)(blkCmp);
        if (maybeCharBlock instanceof Nothing) {
          return Nothing.value;
        }
        ;
        if (maybeCharBlock instanceof Just) {
          return new Just(maybeCharBlock.value0.convRule);
        }
        ;
        throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5612, column 5 - line 5614, column 60): " + [maybeCharBlock.constructor.name]);
      };
    };
  };
  var caseConv = function(f) {
    return function($$char2) {
      var maybeConversionRule = getRule(convchars)($$char2)(numConvBlocks);
      if (maybeConversionRule instanceof Nothing) {
        return $$char2;
      }
      ;
      if (maybeConversionRule instanceof Just) {
        return $$char2 + f(maybeConversionRule.value0) | 0;
      }
      ;
      throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5727, column 5 - line 5729, column 53): " + [maybeConversionRule.constructor.name]);
    };
  };
  var uTowlower = /* @__PURE__ */ caseConv(function(v) {
    return v.lowdist;
  });
  var uTowupper = /* @__PURE__ */ caseConv(function(v) {
    return v.updist;
  });
  var checkAttrS = function(categories) {
    return function($$char2) {
      var maybeConversionRule = getRule(spacechars)($$char2)(numSpaceBlocks);
      if (maybeConversionRule instanceof Nothing) {
        return false;
      }
      ;
      if (maybeConversionRule instanceof Just) {
        return isJust(elemIndex2(maybeConversionRule.value0.category)(categories));
      }
      ;
      throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5654, column 5 - line 5656, column 86): " + [maybeConversionRule.constructor.name]);
    };
  };
  var uIswspace = /* @__PURE__ */ checkAttrS([gencatZS]);
  var allchars = [{
    start: 0,
    length: 32,
    convRule: rule0
  }, {
    start: 32,
    length: 1,
    convRule: rule1
  }, {
    start: 33,
    length: 3,
    convRule: rule2
  }, {
    start: 36,
    length: 1,
    convRule: rule3
  }, {
    start: 37,
    length: 3,
    convRule: rule2
  }, {
    start: 40,
    length: 1,
    convRule: rule4
  }, {
    start: 41,
    length: 1,
    convRule: rule5
  }, {
    start: 42,
    length: 1,
    convRule: rule2
  }, {
    start: 43,
    length: 1,
    convRule: rule6
  }, {
    start: 44,
    length: 1,
    convRule: rule2
  }, {
    start: 45,
    length: 1,
    convRule: rule7
  }, {
    start: 46,
    length: 2,
    convRule: rule2
  }, {
    start: 48,
    length: 10,
    convRule: rule8
  }, {
    start: 58,
    length: 2,
    convRule: rule2
  }, {
    start: 60,
    length: 3,
    convRule: rule6
  }, {
    start: 63,
    length: 2,
    convRule: rule2
  }, {
    start: 65,
    length: 26,
    convRule: rule9
  }, {
    start: 91,
    length: 1,
    convRule: rule4
  }, {
    start: 92,
    length: 1,
    convRule: rule2
  }, {
    start: 93,
    length: 1,
    convRule: rule5
  }, {
    start: 94,
    length: 1,
    convRule: rule10
  }, {
    start: 95,
    length: 1,
    convRule: rule11
  }, {
    start: 96,
    length: 1,
    convRule: rule10
  }, {
    start: 97,
    length: 26,
    convRule: rule12
  }, {
    start: 123,
    length: 1,
    convRule: rule4
  }, {
    start: 124,
    length: 1,
    convRule: rule6
  }, {
    start: 125,
    length: 1,
    convRule: rule5
  }, {
    start: 126,
    length: 1,
    convRule: rule6
  }, {
    start: 127,
    length: 33,
    convRule: rule0
  }, {
    start: 160,
    length: 1,
    convRule: rule1
  }, {
    start: 161,
    length: 1,
    convRule: rule2
  }, {
    start: 162,
    length: 4,
    convRule: rule3
  }, {
    start: 166,
    length: 1,
    convRule: rule13
  }, {
    start: 167,
    length: 1,
    convRule: rule2
  }, {
    start: 168,
    length: 1,
    convRule: rule10
  }, {
    start: 169,
    length: 1,
    convRule: rule13
  }, {
    start: 170,
    length: 1,
    convRule: rule14
  }, {
    start: 171,
    length: 1,
    convRule: rule15
  }, {
    start: 172,
    length: 1,
    convRule: rule6
  }, {
    start: 173,
    length: 1,
    convRule: rule16
  }, {
    start: 174,
    length: 1,
    convRule: rule13
  }, {
    start: 175,
    length: 1,
    convRule: rule10
  }, {
    start: 176,
    length: 1,
    convRule: rule13
  }, {
    start: 177,
    length: 1,
    convRule: rule6
  }, {
    start: 178,
    length: 2,
    convRule: rule17
  }, {
    start: 180,
    length: 1,
    convRule: rule10
  }, {
    start: 181,
    length: 1,
    convRule: rule18
  }, {
    start: 182,
    length: 2,
    convRule: rule2
  }, {
    start: 184,
    length: 1,
    convRule: rule10
  }, {
    start: 185,
    length: 1,
    convRule: rule17
  }, {
    start: 186,
    length: 1,
    convRule: rule14
  }, {
    start: 187,
    length: 1,
    convRule: rule19
  }, {
    start: 188,
    length: 3,
    convRule: rule17
  }, {
    start: 191,
    length: 1,
    convRule: rule2
  }, {
    start: 192,
    length: 23,
    convRule: rule9
  }, {
    start: 215,
    length: 1,
    convRule: rule6
  }, {
    start: 216,
    length: 7,
    convRule: rule9
  }, {
    start: 223,
    length: 1,
    convRule: rule20
  }, {
    start: 224,
    length: 23,
    convRule: rule12
  }, {
    start: 247,
    length: 1,
    convRule: rule6
  }, {
    start: 248,
    length: 7,
    convRule: rule12
  }, {
    start: 255,
    length: 1,
    convRule: rule21
  }, {
    start: 256,
    length: 1,
    convRule: rule22
  }, {
    start: 257,
    length: 1,
    convRule: rule23
  }, {
    start: 258,
    length: 1,
    convRule: rule22
  }, {
    start: 259,
    length: 1,
    convRule: rule23
  }, {
    start: 260,
    length: 1,
    convRule: rule22
  }, {
    start: 261,
    length: 1,
    convRule: rule23
  }, {
    start: 262,
    length: 1,
    convRule: rule22
  }, {
    start: 263,
    length: 1,
    convRule: rule23
  }, {
    start: 264,
    length: 1,
    convRule: rule22
  }, {
    start: 265,
    length: 1,
    convRule: rule23
  }, {
    start: 266,
    length: 1,
    convRule: rule22
  }, {
    start: 267,
    length: 1,
    convRule: rule23
  }, {
    start: 268,
    length: 1,
    convRule: rule22
  }, {
    start: 269,
    length: 1,
    convRule: rule23
  }, {
    start: 270,
    length: 1,
    convRule: rule22
  }, {
    start: 271,
    length: 1,
    convRule: rule23
  }, {
    start: 272,
    length: 1,
    convRule: rule22
  }, {
    start: 273,
    length: 1,
    convRule: rule23
  }, {
    start: 274,
    length: 1,
    convRule: rule22
  }, {
    start: 275,
    length: 1,
    convRule: rule23
  }, {
    start: 276,
    length: 1,
    convRule: rule22
  }, {
    start: 277,
    length: 1,
    convRule: rule23
  }, {
    start: 278,
    length: 1,
    convRule: rule22
  }, {
    start: 279,
    length: 1,
    convRule: rule23
  }, {
    start: 280,
    length: 1,
    convRule: rule22
  }, {
    start: 281,
    length: 1,
    convRule: rule23
  }, {
    start: 282,
    length: 1,
    convRule: rule22
  }, {
    start: 283,
    length: 1,
    convRule: rule23
  }, {
    start: 284,
    length: 1,
    convRule: rule22
  }, {
    start: 285,
    length: 1,
    convRule: rule23
  }, {
    start: 286,
    length: 1,
    convRule: rule22
  }, {
    start: 287,
    length: 1,
    convRule: rule23
  }, {
    start: 288,
    length: 1,
    convRule: rule22
  }, {
    start: 289,
    length: 1,
    convRule: rule23
  }, {
    start: 290,
    length: 1,
    convRule: rule22
  }, {
    start: 291,
    length: 1,
    convRule: rule23
  }, {
    start: 292,
    length: 1,
    convRule: rule22
  }, {
    start: 293,
    length: 1,
    convRule: rule23
  }, {
    start: 294,
    length: 1,
    convRule: rule22
  }, {
    start: 295,
    length: 1,
    convRule: rule23
  }, {
    start: 296,
    length: 1,
    convRule: rule22
  }, {
    start: 297,
    length: 1,
    convRule: rule23
  }, {
    start: 298,
    length: 1,
    convRule: rule22
  }, {
    start: 299,
    length: 1,
    convRule: rule23
  }, {
    start: 300,
    length: 1,
    convRule: rule22
  }, {
    start: 301,
    length: 1,
    convRule: rule23
  }, {
    start: 302,
    length: 1,
    convRule: rule22
  }, {
    start: 303,
    length: 1,
    convRule: rule23
  }, {
    start: 304,
    length: 1,
    convRule: rule24
  }, {
    start: 305,
    length: 1,
    convRule: rule25
  }, {
    start: 306,
    length: 1,
    convRule: rule22
  }, {
    start: 307,
    length: 1,
    convRule: rule23
  }, {
    start: 308,
    length: 1,
    convRule: rule22
  }, {
    start: 309,
    length: 1,
    convRule: rule23
  }, {
    start: 310,
    length: 1,
    convRule: rule22
  }, {
    start: 311,
    length: 1,
    convRule: rule23
  }, {
    start: 312,
    length: 1,
    convRule: rule20
  }, {
    start: 313,
    length: 1,
    convRule: rule22
  }, {
    start: 314,
    length: 1,
    convRule: rule23
  }, {
    start: 315,
    length: 1,
    convRule: rule22
  }, {
    start: 316,
    length: 1,
    convRule: rule23
  }, {
    start: 317,
    length: 1,
    convRule: rule22
  }, {
    start: 318,
    length: 1,
    convRule: rule23
  }, {
    start: 319,
    length: 1,
    convRule: rule22
  }, {
    start: 320,
    length: 1,
    convRule: rule23
  }, {
    start: 321,
    length: 1,
    convRule: rule22
  }, {
    start: 322,
    length: 1,
    convRule: rule23
  }, {
    start: 323,
    length: 1,
    convRule: rule22
  }, {
    start: 324,
    length: 1,
    convRule: rule23
  }, {
    start: 325,
    length: 1,
    convRule: rule22
  }, {
    start: 326,
    length: 1,
    convRule: rule23
  }, {
    start: 327,
    length: 1,
    convRule: rule22
  }, {
    start: 328,
    length: 1,
    convRule: rule23
  }, {
    start: 329,
    length: 1,
    convRule: rule20
  }, {
    start: 330,
    length: 1,
    convRule: rule22
  }, {
    start: 331,
    length: 1,
    convRule: rule23
  }, {
    start: 332,
    length: 1,
    convRule: rule22
  }, {
    start: 333,
    length: 1,
    convRule: rule23
  }, {
    start: 334,
    length: 1,
    convRule: rule22
  }, {
    start: 335,
    length: 1,
    convRule: rule23
  }, {
    start: 336,
    length: 1,
    convRule: rule22
  }, {
    start: 337,
    length: 1,
    convRule: rule23
  }, {
    start: 338,
    length: 1,
    convRule: rule22
  }, {
    start: 339,
    length: 1,
    convRule: rule23
  }, {
    start: 340,
    length: 1,
    convRule: rule22
  }, {
    start: 341,
    length: 1,
    convRule: rule23
  }, {
    start: 342,
    length: 1,
    convRule: rule22
  }, {
    start: 343,
    length: 1,
    convRule: rule23
  }, {
    start: 344,
    length: 1,
    convRule: rule22
  }, {
    start: 345,
    length: 1,
    convRule: rule23
  }, {
    start: 346,
    length: 1,
    convRule: rule22
  }, {
    start: 347,
    length: 1,
    convRule: rule23
  }, {
    start: 348,
    length: 1,
    convRule: rule22
  }, {
    start: 349,
    length: 1,
    convRule: rule23
  }, {
    start: 350,
    length: 1,
    convRule: rule22
  }, {
    start: 351,
    length: 1,
    convRule: rule23
  }, {
    start: 352,
    length: 1,
    convRule: rule22
  }, {
    start: 353,
    length: 1,
    convRule: rule23
  }, {
    start: 354,
    length: 1,
    convRule: rule22
  }, {
    start: 355,
    length: 1,
    convRule: rule23
  }, {
    start: 356,
    length: 1,
    convRule: rule22
  }, {
    start: 357,
    length: 1,
    convRule: rule23
  }, {
    start: 358,
    length: 1,
    convRule: rule22
  }, {
    start: 359,
    length: 1,
    convRule: rule23
  }, {
    start: 360,
    length: 1,
    convRule: rule22
  }, {
    start: 361,
    length: 1,
    convRule: rule23
  }, {
    start: 362,
    length: 1,
    convRule: rule22
  }, {
    start: 363,
    length: 1,
    convRule: rule23
  }, {
    start: 364,
    length: 1,
    convRule: rule22
  }, {
    start: 365,
    length: 1,
    convRule: rule23
  }, {
    start: 366,
    length: 1,
    convRule: rule22
  }, {
    start: 367,
    length: 1,
    convRule: rule23
  }, {
    start: 368,
    length: 1,
    convRule: rule22
  }, {
    start: 369,
    length: 1,
    convRule: rule23
  }, {
    start: 370,
    length: 1,
    convRule: rule22
  }, {
    start: 371,
    length: 1,
    convRule: rule23
  }, {
    start: 372,
    length: 1,
    convRule: rule22
  }, {
    start: 373,
    length: 1,
    convRule: rule23
  }, {
    start: 374,
    length: 1,
    convRule: rule22
  }, {
    start: 375,
    length: 1,
    convRule: rule23
  }, {
    start: 376,
    length: 1,
    convRule: rule26
  }, {
    start: 377,
    length: 1,
    convRule: rule22
  }, {
    start: 378,
    length: 1,
    convRule: rule23
  }, {
    start: 379,
    length: 1,
    convRule: rule22
  }, {
    start: 380,
    length: 1,
    convRule: rule23
  }, {
    start: 381,
    length: 1,
    convRule: rule22
  }, {
    start: 382,
    length: 1,
    convRule: rule23
  }, {
    start: 383,
    length: 1,
    convRule: rule27
  }, {
    start: 384,
    length: 1,
    convRule: rule28
  }, {
    start: 385,
    length: 1,
    convRule: rule29
  }, {
    start: 386,
    length: 1,
    convRule: rule22
  }, {
    start: 387,
    length: 1,
    convRule: rule23
  }, {
    start: 388,
    length: 1,
    convRule: rule22
  }, {
    start: 389,
    length: 1,
    convRule: rule23
  }, {
    start: 390,
    length: 1,
    convRule: rule30
  }, {
    start: 391,
    length: 1,
    convRule: rule22
  }, {
    start: 392,
    length: 1,
    convRule: rule23
  }, {
    start: 393,
    length: 2,
    convRule: rule31
  }, {
    start: 395,
    length: 1,
    convRule: rule22
  }, {
    start: 396,
    length: 1,
    convRule: rule23
  }, {
    start: 397,
    length: 1,
    convRule: rule20
  }, {
    start: 398,
    length: 1,
    convRule: rule32
  }, {
    start: 399,
    length: 1,
    convRule: rule33
  }, {
    start: 400,
    length: 1,
    convRule: rule34
  }, {
    start: 401,
    length: 1,
    convRule: rule22
  }, {
    start: 402,
    length: 1,
    convRule: rule23
  }, {
    start: 403,
    length: 1,
    convRule: rule31
  }, {
    start: 404,
    length: 1,
    convRule: rule35
  }, {
    start: 405,
    length: 1,
    convRule: rule36
  }, {
    start: 406,
    length: 1,
    convRule: rule37
  }, {
    start: 407,
    length: 1,
    convRule: rule38
  }, {
    start: 408,
    length: 1,
    convRule: rule22
  }, {
    start: 409,
    length: 1,
    convRule: rule23
  }, {
    start: 410,
    length: 1,
    convRule: rule39
  }, {
    start: 411,
    length: 1,
    convRule: rule20
  }, {
    start: 412,
    length: 1,
    convRule: rule37
  }, {
    start: 413,
    length: 1,
    convRule: rule40
  }, {
    start: 414,
    length: 1,
    convRule: rule41
  }, {
    start: 415,
    length: 1,
    convRule: rule42
  }, {
    start: 416,
    length: 1,
    convRule: rule22
  }, {
    start: 417,
    length: 1,
    convRule: rule23
  }, {
    start: 418,
    length: 1,
    convRule: rule22
  }, {
    start: 419,
    length: 1,
    convRule: rule23
  }, {
    start: 420,
    length: 1,
    convRule: rule22
  }, {
    start: 421,
    length: 1,
    convRule: rule23
  }, {
    start: 422,
    length: 1,
    convRule: rule43
  }, {
    start: 423,
    length: 1,
    convRule: rule22
  }, {
    start: 424,
    length: 1,
    convRule: rule23
  }, {
    start: 425,
    length: 1,
    convRule: rule43
  }, {
    start: 426,
    length: 2,
    convRule: rule20
  }, {
    start: 428,
    length: 1,
    convRule: rule22
  }, {
    start: 429,
    length: 1,
    convRule: rule23
  }, {
    start: 430,
    length: 1,
    convRule: rule43
  }, {
    start: 431,
    length: 1,
    convRule: rule22
  }, {
    start: 432,
    length: 1,
    convRule: rule23
  }, {
    start: 433,
    length: 2,
    convRule: rule44
  }, {
    start: 435,
    length: 1,
    convRule: rule22
  }, {
    start: 436,
    length: 1,
    convRule: rule23
  }, {
    start: 437,
    length: 1,
    convRule: rule22
  }, {
    start: 438,
    length: 1,
    convRule: rule23
  }, {
    start: 439,
    length: 1,
    convRule: rule45
  }, {
    start: 440,
    length: 1,
    convRule: rule22
  }, {
    start: 441,
    length: 1,
    convRule: rule23
  }, {
    start: 442,
    length: 1,
    convRule: rule20
  }, {
    start: 443,
    length: 1,
    convRule: rule14
  }, {
    start: 444,
    length: 1,
    convRule: rule22
  }, {
    start: 445,
    length: 1,
    convRule: rule23
  }, {
    start: 446,
    length: 1,
    convRule: rule20
  }, {
    start: 447,
    length: 1,
    convRule: rule46
  }, {
    start: 448,
    length: 4,
    convRule: rule14
  }, {
    start: 452,
    length: 1,
    convRule: rule47
  }, {
    start: 453,
    length: 1,
    convRule: rule48
  }, {
    start: 454,
    length: 1,
    convRule: rule49
  }, {
    start: 455,
    length: 1,
    convRule: rule47
  }, {
    start: 456,
    length: 1,
    convRule: rule48
  }, {
    start: 457,
    length: 1,
    convRule: rule49
  }, {
    start: 458,
    length: 1,
    convRule: rule47
  }, {
    start: 459,
    length: 1,
    convRule: rule48
  }, {
    start: 460,
    length: 1,
    convRule: rule49
  }, {
    start: 461,
    length: 1,
    convRule: rule22
  }, {
    start: 462,
    length: 1,
    convRule: rule23
  }, {
    start: 463,
    length: 1,
    convRule: rule22
  }, {
    start: 464,
    length: 1,
    convRule: rule23
  }, {
    start: 465,
    length: 1,
    convRule: rule22
  }, {
    start: 466,
    length: 1,
    convRule: rule23
  }, {
    start: 467,
    length: 1,
    convRule: rule22
  }, {
    start: 468,
    length: 1,
    convRule: rule23
  }, {
    start: 469,
    length: 1,
    convRule: rule22
  }, {
    start: 470,
    length: 1,
    convRule: rule23
  }, {
    start: 471,
    length: 1,
    convRule: rule22
  }, {
    start: 472,
    length: 1,
    convRule: rule23
  }, {
    start: 473,
    length: 1,
    convRule: rule22
  }, {
    start: 474,
    length: 1,
    convRule: rule23
  }, {
    start: 475,
    length: 1,
    convRule: rule22
  }, {
    start: 476,
    length: 1,
    convRule: rule23
  }, {
    start: 477,
    length: 1,
    convRule: rule50
  }, {
    start: 478,
    length: 1,
    convRule: rule22
  }, {
    start: 479,
    length: 1,
    convRule: rule23
  }, {
    start: 480,
    length: 1,
    convRule: rule22
  }, {
    start: 481,
    length: 1,
    convRule: rule23
  }, {
    start: 482,
    length: 1,
    convRule: rule22
  }, {
    start: 483,
    length: 1,
    convRule: rule23
  }, {
    start: 484,
    length: 1,
    convRule: rule22
  }, {
    start: 485,
    length: 1,
    convRule: rule23
  }, {
    start: 486,
    length: 1,
    convRule: rule22
  }, {
    start: 487,
    length: 1,
    convRule: rule23
  }, {
    start: 488,
    length: 1,
    convRule: rule22
  }, {
    start: 489,
    length: 1,
    convRule: rule23
  }, {
    start: 490,
    length: 1,
    convRule: rule22
  }, {
    start: 491,
    length: 1,
    convRule: rule23
  }, {
    start: 492,
    length: 1,
    convRule: rule22
  }, {
    start: 493,
    length: 1,
    convRule: rule23
  }, {
    start: 494,
    length: 1,
    convRule: rule22
  }, {
    start: 495,
    length: 1,
    convRule: rule23
  }, {
    start: 496,
    length: 1,
    convRule: rule20
  }, {
    start: 497,
    length: 1,
    convRule: rule47
  }, {
    start: 498,
    length: 1,
    convRule: rule48
  }, {
    start: 499,
    length: 1,
    convRule: rule49
  }, {
    start: 500,
    length: 1,
    convRule: rule22
  }, {
    start: 501,
    length: 1,
    convRule: rule23
  }, {
    start: 502,
    length: 1,
    convRule: rule51
  }, {
    start: 503,
    length: 1,
    convRule: rule52
  }, {
    start: 504,
    length: 1,
    convRule: rule22
  }, {
    start: 505,
    length: 1,
    convRule: rule23
  }, {
    start: 506,
    length: 1,
    convRule: rule22
  }, {
    start: 507,
    length: 1,
    convRule: rule23
  }, {
    start: 508,
    length: 1,
    convRule: rule22
  }, {
    start: 509,
    length: 1,
    convRule: rule23
  }, {
    start: 510,
    length: 1,
    convRule: rule22
  }, {
    start: 511,
    length: 1,
    convRule: rule23
  }, {
    start: 512,
    length: 1,
    convRule: rule22
  }, {
    start: 513,
    length: 1,
    convRule: rule23
  }, {
    start: 514,
    length: 1,
    convRule: rule22
  }, {
    start: 515,
    length: 1,
    convRule: rule23
  }, {
    start: 516,
    length: 1,
    convRule: rule22
  }, {
    start: 517,
    length: 1,
    convRule: rule23
  }, {
    start: 518,
    length: 1,
    convRule: rule22
  }, {
    start: 519,
    length: 1,
    convRule: rule23
  }, {
    start: 520,
    length: 1,
    convRule: rule22
  }, {
    start: 521,
    length: 1,
    convRule: rule23
  }, {
    start: 522,
    length: 1,
    convRule: rule22
  }, {
    start: 523,
    length: 1,
    convRule: rule23
  }, {
    start: 524,
    length: 1,
    convRule: rule22
  }, {
    start: 525,
    length: 1,
    convRule: rule23
  }, {
    start: 526,
    length: 1,
    convRule: rule22
  }, {
    start: 527,
    length: 1,
    convRule: rule23
  }, {
    start: 528,
    length: 1,
    convRule: rule22
  }, {
    start: 529,
    length: 1,
    convRule: rule23
  }, {
    start: 530,
    length: 1,
    convRule: rule22
  }, {
    start: 531,
    length: 1,
    convRule: rule23
  }, {
    start: 532,
    length: 1,
    convRule: rule22
  }, {
    start: 533,
    length: 1,
    convRule: rule23
  }, {
    start: 534,
    length: 1,
    convRule: rule22
  }, {
    start: 535,
    length: 1,
    convRule: rule23
  }, {
    start: 536,
    length: 1,
    convRule: rule22
  }, {
    start: 537,
    length: 1,
    convRule: rule23
  }, {
    start: 538,
    length: 1,
    convRule: rule22
  }, {
    start: 539,
    length: 1,
    convRule: rule23
  }, {
    start: 540,
    length: 1,
    convRule: rule22
  }, {
    start: 541,
    length: 1,
    convRule: rule23
  }, {
    start: 542,
    length: 1,
    convRule: rule22
  }, {
    start: 543,
    length: 1,
    convRule: rule23
  }, {
    start: 544,
    length: 1,
    convRule: rule53
  }, {
    start: 545,
    length: 1,
    convRule: rule20
  }, {
    start: 546,
    length: 1,
    convRule: rule22
  }, {
    start: 547,
    length: 1,
    convRule: rule23
  }, {
    start: 548,
    length: 1,
    convRule: rule22
  }, {
    start: 549,
    length: 1,
    convRule: rule23
  }, {
    start: 550,
    length: 1,
    convRule: rule22
  }, {
    start: 551,
    length: 1,
    convRule: rule23
  }, {
    start: 552,
    length: 1,
    convRule: rule22
  }, {
    start: 553,
    length: 1,
    convRule: rule23
  }, {
    start: 554,
    length: 1,
    convRule: rule22
  }, {
    start: 555,
    length: 1,
    convRule: rule23
  }, {
    start: 556,
    length: 1,
    convRule: rule22
  }, {
    start: 557,
    length: 1,
    convRule: rule23
  }, {
    start: 558,
    length: 1,
    convRule: rule22
  }, {
    start: 559,
    length: 1,
    convRule: rule23
  }, {
    start: 560,
    length: 1,
    convRule: rule22
  }, {
    start: 561,
    length: 1,
    convRule: rule23
  }, {
    start: 562,
    length: 1,
    convRule: rule22
  }, {
    start: 563,
    length: 1,
    convRule: rule23
  }, {
    start: 564,
    length: 6,
    convRule: rule20
  }, {
    start: 570,
    length: 1,
    convRule: rule54
  }, {
    start: 571,
    length: 1,
    convRule: rule22
  }, {
    start: 572,
    length: 1,
    convRule: rule23
  }, {
    start: 573,
    length: 1,
    convRule: rule55
  }, {
    start: 574,
    length: 1,
    convRule: rule56
  }, {
    start: 575,
    length: 2,
    convRule: rule57
  }, {
    start: 577,
    length: 1,
    convRule: rule22
  }, {
    start: 578,
    length: 1,
    convRule: rule23
  }, {
    start: 579,
    length: 1,
    convRule: rule58
  }, {
    start: 580,
    length: 1,
    convRule: rule59
  }, {
    start: 581,
    length: 1,
    convRule: rule60
  }, {
    start: 582,
    length: 1,
    convRule: rule22
  }, {
    start: 583,
    length: 1,
    convRule: rule23
  }, {
    start: 584,
    length: 1,
    convRule: rule22
  }, {
    start: 585,
    length: 1,
    convRule: rule23
  }, {
    start: 586,
    length: 1,
    convRule: rule22
  }, {
    start: 587,
    length: 1,
    convRule: rule23
  }, {
    start: 588,
    length: 1,
    convRule: rule22
  }, {
    start: 589,
    length: 1,
    convRule: rule23
  }, {
    start: 590,
    length: 1,
    convRule: rule22
  }, {
    start: 591,
    length: 1,
    convRule: rule23
  }, {
    start: 592,
    length: 1,
    convRule: rule61
  }, {
    start: 593,
    length: 1,
    convRule: rule62
  }, {
    start: 594,
    length: 1,
    convRule: rule63
  }, {
    start: 595,
    length: 1,
    convRule: rule64
  }, {
    start: 596,
    length: 1,
    convRule: rule65
  }, {
    start: 597,
    length: 1,
    convRule: rule20
  }, {
    start: 598,
    length: 2,
    convRule: rule66
  }, {
    start: 600,
    length: 1,
    convRule: rule20
  }, {
    start: 601,
    length: 1,
    convRule: rule67
  }, {
    start: 602,
    length: 1,
    convRule: rule20
  }, {
    start: 603,
    length: 1,
    convRule: rule68
  }, {
    start: 604,
    length: 1,
    convRule: rule69
  }, {
    start: 605,
    length: 3,
    convRule: rule20
  }, {
    start: 608,
    length: 1,
    convRule: rule66
  }, {
    start: 609,
    length: 1,
    convRule: rule70
  }, {
    start: 610,
    length: 1,
    convRule: rule20
  }, {
    start: 611,
    length: 1,
    convRule: rule71
  }, {
    start: 612,
    length: 1,
    convRule: rule20
  }, {
    start: 613,
    length: 1,
    convRule: rule72
  }, {
    start: 614,
    length: 1,
    convRule: rule73
  }, {
    start: 615,
    length: 1,
    convRule: rule20
  }, {
    start: 616,
    length: 1,
    convRule: rule74
  }, {
    start: 617,
    length: 1,
    convRule: rule75
  }, {
    start: 618,
    length: 1,
    convRule: rule73
  }, {
    start: 619,
    length: 1,
    convRule: rule76
  }, {
    start: 620,
    length: 1,
    convRule: rule77
  }, {
    start: 621,
    length: 2,
    convRule: rule20
  }, {
    start: 623,
    length: 1,
    convRule: rule75
  }, {
    start: 624,
    length: 1,
    convRule: rule20
  }, {
    start: 625,
    length: 1,
    convRule: rule78
  }, {
    start: 626,
    length: 1,
    convRule: rule79
  }, {
    start: 627,
    length: 2,
    convRule: rule20
  }, {
    start: 629,
    length: 1,
    convRule: rule80
  }, {
    start: 630,
    length: 7,
    convRule: rule20
  }, {
    start: 637,
    length: 1,
    convRule: rule81
  }, {
    start: 638,
    length: 2,
    convRule: rule20
  }, {
    start: 640,
    length: 1,
    convRule: rule82
  }, {
    start: 641,
    length: 1,
    convRule: rule20
  }, {
    start: 642,
    length: 1,
    convRule: rule83
  }, {
    start: 643,
    length: 1,
    convRule: rule82
  }, {
    start: 644,
    length: 3,
    convRule: rule20
  }, {
    start: 647,
    length: 1,
    convRule: rule84
  }, {
    start: 648,
    length: 1,
    convRule: rule82
  }, {
    start: 649,
    length: 1,
    convRule: rule85
  }, {
    start: 650,
    length: 2,
    convRule: rule86
  }, {
    start: 652,
    length: 1,
    convRule: rule87
  }, {
    start: 653,
    length: 5,
    convRule: rule20
  }, {
    start: 658,
    length: 1,
    convRule: rule88
  }, {
    start: 659,
    length: 1,
    convRule: rule20
  }, {
    start: 660,
    length: 1,
    convRule: rule14
  }, {
    start: 661,
    length: 8,
    convRule: rule20
  }, {
    start: 669,
    length: 1,
    convRule: rule89
  }, {
    start: 670,
    length: 1,
    convRule: rule90
  }, {
    start: 671,
    length: 17,
    convRule: rule20
  }, {
    start: 688,
    length: 18,
    convRule: rule91
  }, {
    start: 706,
    length: 4,
    convRule: rule10
  }, {
    start: 710,
    length: 12,
    convRule: rule91
  }, {
    start: 722,
    length: 14,
    convRule: rule10
  }, {
    start: 736,
    length: 5,
    convRule: rule91
  }, {
    start: 741,
    length: 7,
    convRule: rule10
  }, {
    start: 748,
    length: 1,
    convRule: rule91
  }, {
    start: 749,
    length: 1,
    convRule: rule10
  }, {
    start: 750,
    length: 1,
    convRule: rule91
  }, {
    start: 751,
    length: 17,
    convRule: rule10
  }, {
    start: 768,
    length: 69,
    convRule: rule92
  }, {
    start: 837,
    length: 1,
    convRule: rule93
  }, {
    start: 838,
    length: 42,
    convRule: rule92
  }, {
    start: 880,
    length: 1,
    convRule: rule22
  }, {
    start: 881,
    length: 1,
    convRule: rule23
  }, {
    start: 882,
    length: 1,
    convRule: rule22
  }, {
    start: 883,
    length: 1,
    convRule: rule23
  }, {
    start: 884,
    length: 1,
    convRule: rule91
  }, {
    start: 885,
    length: 1,
    convRule: rule10
  }, {
    start: 886,
    length: 1,
    convRule: rule22
  }, {
    start: 887,
    length: 1,
    convRule: rule23
  }, {
    start: 890,
    length: 1,
    convRule: rule91
  }, {
    start: 891,
    length: 3,
    convRule: rule41
  }, {
    start: 894,
    length: 1,
    convRule: rule2
  }, {
    start: 895,
    length: 1,
    convRule: rule94
  }, {
    start: 900,
    length: 2,
    convRule: rule10
  }, {
    start: 902,
    length: 1,
    convRule: rule95
  }, {
    start: 903,
    length: 1,
    convRule: rule2
  }, {
    start: 904,
    length: 3,
    convRule: rule96
  }, {
    start: 908,
    length: 1,
    convRule: rule97
  }, {
    start: 910,
    length: 2,
    convRule: rule98
  }, {
    start: 912,
    length: 1,
    convRule: rule20
  }, {
    start: 913,
    length: 17,
    convRule: rule9
  }, {
    start: 931,
    length: 9,
    convRule: rule9
  }, {
    start: 940,
    length: 1,
    convRule: rule99
  }, {
    start: 941,
    length: 3,
    convRule: rule100
  }, {
    start: 944,
    length: 1,
    convRule: rule20
  }, {
    start: 945,
    length: 17,
    convRule: rule12
  }, {
    start: 962,
    length: 1,
    convRule: rule101
  }, {
    start: 963,
    length: 9,
    convRule: rule12
  }, {
    start: 972,
    length: 1,
    convRule: rule102
  }, {
    start: 973,
    length: 2,
    convRule: rule103
  }, {
    start: 975,
    length: 1,
    convRule: rule104
  }, {
    start: 976,
    length: 1,
    convRule: rule105
  }, {
    start: 977,
    length: 1,
    convRule: rule106
  }, {
    start: 978,
    length: 3,
    convRule: rule107
  }, {
    start: 981,
    length: 1,
    convRule: rule108
  }, {
    start: 982,
    length: 1,
    convRule: rule109
  }, {
    start: 983,
    length: 1,
    convRule: rule110
  }, {
    start: 984,
    length: 1,
    convRule: rule22
  }, {
    start: 985,
    length: 1,
    convRule: rule23
  }, {
    start: 986,
    length: 1,
    convRule: rule22
  }, {
    start: 987,
    length: 1,
    convRule: rule23
  }, {
    start: 988,
    length: 1,
    convRule: rule22
  }, {
    start: 989,
    length: 1,
    convRule: rule23
  }, {
    start: 990,
    length: 1,
    convRule: rule22
  }, {
    start: 991,
    length: 1,
    convRule: rule23
  }, {
    start: 992,
    length: 1,
    convRule: rule22
  }, {
    start: 993,
    length: 1,
    convRule: rule23
  }, {
    start: 994,
    length: 1,
    convRule: rule22
  }, {
    start: 995,
    length: 1,
    convRule: rule23
  }, {
    start: 996,
    length: 1,
    convRule: rule22
  }, {
    start: 997,
    length: 1,
    convRule: rule23
  }, {
    start: 998,
    length: 1,
    convRule: rule22
  }, {
    start: 999,
    length: 1,
    convRule: rule23
  }, {
    start: 1e3,
    length: 1,
    convRule: rule22
  }, {
    start: 1001,
    length: 1,
    convRule: rule23
  }, {
    start: 1002,
    length: 1,
    convRule: rule22
  }, {
    start: 1003,
    length: 1,
    convRule: rule23
  }, {
    start: 1004,
    length: 1,
    convRule: rule22
  }, {
    start: 1005,
    length: 1,
    convRule: rule23
  }, {
    start: 1006,
    length: 1,
    convRule: rule22
  }, {
    start: 1007,
    length: 1,
    convRule: rule23
  }, {
    start: 1008,
    length: 1,
    convRule: rule111
  }, {
    start: 1009,
    length: 1,
    convRule: rule112
  }, {
    start: 1010,
    length: 1,
    convRule: rule113
  }, {
    start: 1011,
    length: 1,
    convRule: rule114
  }, {
    start: 1012,
    length: 1,
    convRule: rule115
  }, {
    start: 1013,
    length: 1,
    convRule: rule116
  }, {
    start: 1014,
    length: 1,
    convRule: rule6
  }, {
    start: 1015,
    length: 1,
    convRule: rule22
  }, {
    start: 1016,
    length: 1,
    convRule: rule23
  }, {
    start: 1017,
    length: 1,
    convRule: rule117
  }, {
    start: 1018,
    length: 1,
    convRule: rule22
  }, {
    start: 1019,
    length: 1,
    convRule: rule23
  }, {
    start: 1020,
    length: 1,
    convRule: rule20
  }, {
    start: 1021,
    length: 3,
    convRule: rule53
  }, {
    start: 1024,
    length: 16,
    convRule: rule118
  }, {
    start: 1040,
    length: 32,
    convRule: rule9
  }, {
    start: 1072,
    length: 32,
    convRule: rule12
  }, {
    start: 1104,
    length: 16,
    convRule: rule112
  }, {
    start: 1120,
    length: 1,
    convRule: rule22
  }, {
    start: 1121,
    length: 1,
    convRule: rule23
  }, {
    start: 1122,
    length: 1,
    convRule: rule22
  }, {
    start: 1123,
    length: 1,
    convRule: rule23
  }, {
    start: 1124,
    length: 1,
    convRule: rule22
  }, {
    start: 1125,
    length: 1,
    convRule: rule23
  }, {
    start: 1126,
    length: 1,
    convRule: rule22
  }, {
    start: 1127,
    length: 1,
    convRule: rule23
  }, {
    start: 1128,
    length: 1,
    convRule: rule22
  }, {
    start: 1129,
    length: 1,
    convRule: rule23
  }, {
    start: 1130,
    length: 1,
    convRule: rule22
  }, {
    start: 1131,
    length: 1,
    convRule: rule23
  }, {
    start: 1132,
    length: 1,
    convRule: rule22
  }, {
    start: 1133,
    length: 1,
    convRule: rule23
  }, {
    start: 1134,
    length: 1,
    convRule: rule22
  }, {
    start: 1135,
    length: 1,
    convRule: rule23
  }, {
    start: 1136,
    length: 1,
    convRule: rule22
  }, {
    start: 1137,
    length: 1,
    convRule: rule23
  }, {
    start: 1138,
    length: 1,
    convRule: rule22
  }, {
    start: 1139,
    length: 1,
    convRule: rule23
  }, {
    start: 1140,
    length: 1,
    convRule: rule22
  }, {
    start: 1141,
    length: 1,
    convRule: rule23
  }, {
    start: 1142,
    length: 1,
    convRule: rule22
  }, {
    start: 1143,
    length: 1,
    convRule: rule23
  }, {
    start: 1144,
    length: 1,
    convRule: rule22
  }, {
    start: 1145,
    length: 1,
    convRule: rule23
  }, {
    start: 1146,
    length: 1,
    convRule: rule22
  }, {
    start: 1147,
    length: 1,
    convRule: rule23
  }, {
    start: 1148,
    length: 1,
    convRule: rule22
  }, {
    start: 1149,
    length: 1,
    convRule: rule23
  }, {
    start: 1150,
    length: 1,
    convRule: rule22
  }, {
    start: 1151,
    length: 1,
    convRule: rule23
  }, {
    start: 1152,
    length: 1,
    convRule: rule22
  }, {
    start: 1153,
    length: 1,
    convRule: rule23
  }, {
    start: 1154,
    length: 1,
    convRule: rule13
  }, {
    start: 1155,
    length: 5,
    convRule: rule92
  }, {
    start: 1160,
    length: 2,
    convRule: rule119
  }, {
    start: 1162,
    length: 1,
    convRule: rule22
  }, {
    start: 1163,
    length: 1,
    convRule: rule23
  }, {
    start: 1164,
    length: 1,
    convRule: rule22
  }, {
    start: 1165,
    length: 1,
    convRule: rule23
  }, {
    start: 1166,
    length: 1,
    convRule: rule22
  }, {
    start: 1167,
    length: 1,
    convRule: rule23
  }, {
    start: 1168,
    length: 1,
    convRule: rule22
  }, {
    start: 1169,
    length: 1,
    convRule: rule23
  }, {
    start: 1170,
    length: 1,
    convRule: rule22
  }, {
    start: 1171,
    length: 1,
    convRule: rule23
  }, {
    start: 1172,
    length: 1,
    convRule: rule22
  }, {
    start: 1173,
    length: 1,
    convRule: rule23
  }, {
    start: 1174,
    length: 1,
    convRule: rule22
  }, {
    start: 1175,
    length: 1,
    convRule: rule23
  }, {
    start: 1176,
    length: 1,
    convRule: rule22
  }, {
    start: 1177,
    length: 1,
    convRule: rule23
  }, {
    start: 1178,
    length: 1,
    convRule: rule22
  }, {
    start: 1179,
    length: 1,
    convRule: rule23
  }, {
    start: 1180,
    length: 1,
    convRule: rule22
  }, {
    start: 1181,
    length: 1,
    convRule: rule23
  }, {
    start: 1182,
    length: 1,
    convRule: rule22
  }, {
    start: 1183,
    length: 1,
    convRule: rule23
  }, {
    start: 1184,
    length: 1,
    convRule: rule22
  }, {
    start: 1185,
    length: 1,
    convRule: rule23
  }, {
    start: 1186,
    length: 1,
    convRule: rule22
  }, {
    start: 1187,
    length: 1,
    convRule: rule23
  }, {
    start: 1188,
    length: 1,
    convRule: rule22
  }, {
    start: 1189,
    length: 1,
    convRule: rule23
  }, {
    start: 1190,
    length: 1,
    convRule: rule22
  }, {
    start: 1191,
    length: 1,
    convRule: rule23
  }, {
    start: 1192,
    length: 1,
    convRule: rule22
  }, {
    start: 1193,
    length: 1,
    convRule: rule23
  }, {
    start: 1194,
    length: 1,
    convRule: rule22
  }, {
    start: 1195,
    length: 1,
    convRule: rule23
  }, {
    start: 1196,
    length: 1,
    convRule: rule22
  }, {
    start: 1197,
    length: 1,
    convRule: rule23
  }, {
    start: 1198,
    length: 1,
    convRule: rule22
  }, {
    start: 1199,
    length: 1,
    convRule: rule23
  }, {
    start: 1200,
    length: 1,
    convRule: rule22
  }, {
    start: 1201,
    length: 1,
    convRule: rule23
  }, {
    start: 1202,
    length: 1,
    convRule: rule22
  }, {
    start: 1203,
    length: 1,
    convRule: rule23
  }, {
    start: 1204,
    length: 1,
    convRule: rule22
  }, {
    start: 1205,
    length: 1,
    convRule: rule23
  }, {
    start: 1206,
    length: 1,
    convRule: rule22
  }, {
    start: 1207,
    length: 1,
    convRule: rule23
  }, {
    start: 1208,
    length: 1,
    convRule: rule22
  }, {
    start: 1209,
    length: 1,
    convRule: rule23
  }, {
    start: 1210,
    length: 1,
    convRule: rule22
  }, {
    start: 1211,
    length: 1,
    convRule: rule23
  }, {
    start: 1212,
    length: 1,
    convRule: rule22
  }, {
    start: 1213,
    length: 1,
    convRule: rule23
  }, {
    start: 1214,
    length: 1,
    convRule: rule22
  }, {
    start: 1215,
    length: 1,
    convRule: rule23
  }, {
    start: 1216,
    length: 1,
    convRule: rule120
  }, {
    start: 1217,
    length: 1,
    convRule: rule22
  }, {
    start: 1218,
    length: 1,
    convRule: rule23
  }, {
    start: 1219,
    length: 1,
    convRule: rule22
  }, {
    start: 1220,
    length: 1,
    convRule: rule23
  }, {
    start: 1221,
    length: 1,
    convRule: rule22
  }, {
    start: 1222,
    length: 1,
    convRule: rule23
  }, {
    start: 1223,
    length: 1,
    convRule: rule22
  }, {
    start: 1224,
    length: 1,
    convRule: rule23
  }, {
    start: 1225,
    length: 1,
    convRule: rule22
  }, {
    start: 1226,
    length: 1,
    convRule: rule23
  }, {
    start: 1227,
    length: 1,
    convRule: rule22
  }, {
    start: 1228,
    length: 1,
    convRule: rule23
  }, {
    start: 1229,
    length: 1,
    convRule: rule22
  }, {
    start: 1230,
    length: 1,
    convRule: rule23
  }, {
    start: 1231,
    length: 1,
    convRule: rule121
  }, {
    start: 1232,
    length: 1,
    convRule: rule22
  }, {
    start: 1233,
    length: 1,
    convRule: rule23
  }, {
    start: 1234,
    length: 1,
    convRule: rule22
  }, {
    start: 1235,
    length: 1,
    convRule: rule23
  }, {
    start: 1236,
    length: 1,
    convRule: rule22
  }, {
    start: 1237,
    length: 1,
    convRule: rule23
  }, {
    start: 1238,
    length: 1,
    convRule: rule22
  }, {
    start: 1239,
    length: 1,
    convRule: rule23
  }, {
    start: 1240,
    length: 1,
    convRule: rule22
  }, {
    start: 1241,
    length: 1,
    convRule: rule23
  }, {
    start: 1242,
    length: 1,
    convRule: rule22
  }, {
    start: 1243,
    length: 1,
    convRule: rule23
  }, {
    start: 1244,
    length: 1,
    convRule: rule22
  }, {
    start: 1245,
    length: 1,
    convRule: rule23
  }, {
    start: 1246,
    length: 1,
    convRule: rule22
  }, {
    start: 1247,
    length: 1,
    convRule: rule23
  }, {
    start: 1248,
    length: 1,
    convRule: rule22
  }, {
    start: 1249,
    length: 1,
    convRule: rule23
  }, {
    start: 1250,
    length: 1,
    convRule: rule22
  }, {
    start: 1251,
    length: 1,
    convRule: rule23
  }, {
    start: 1252,
    length: 1,
    convRule: rule22
  }, {
    start: 1253,
    length: 1,
    convRule: rule23
  }, {
    start: 1254,
    length: 1,
    convRule: rule22
  }, {
    start: 1255,
    length: 1,
    convRule: rule23
  }, {
    start: 1256,
    length: 1,
    convRule: rule22
  }, {
    start: 1257,
    length: 1,
    convRule: rule23
  }, {
    start: 1258,
    length: 1,
    convRule: rule22
  }, {
    start: 1259,
    length: 1,
    convRule: rule23
  }, {
    start: 1260,
    length: 1,
    convRule: rule22
  }, {
    start: 1261,
    length: 1,
    convRule: rule23
  }, {
    start: 1262,
    length: 1,
    convRule: rule22
  }, {
    start: 1263,
    length: 1,
    convRule: rule23
  }, {
    start: 1264,
    length: 1,
    convRule: rule22
  }, {
    start: 1265,
    length: 1,
    convRule: rule23
  }, {
    start: 1266,
    length: 1,
    convRule: rule22
  }, {
    start: 1267,
    length: 1,
    convRule: rule23
  }, {
    start: 1268,
    length: 1,
    convRule: rule22
  }, {
    start: 1269,
    length: 1,
    convRule: rule23
  }, {
    start: 1270,
    length: 1,
    convRule: rule22
  }, {
    start: 1271,
    length: 1,
    convRule: rule23
  }, {
    start: 1272,
    length: 1,
    convRule: rule22
  }, {
    start: 1273,
    length: 1,
    convRule: rule23
  }, {
    start: 1274,
    length: 1,
    convRule: rule22
  }, {
    start: 1275,
    length: 1,
    convRule: rule23
  }, {
    start: 1276,
    length: 1,
    convRule: rule22
  }, {
    start: 1277,
    length: 1,
    convRule: rule23
  }, {
    start: 1278,
    length: 1,
    convRule: rule22
  }, {
    start: 1279,
    length: 1,
    convRule: rule23
  }, {
    start: 1280,
    length: 1,
    convRule: rule22
  }, {
    start: 1281,
    length: 1,
    convRule: rule23
  }, {
    start: 1282,
    length: 1,
    convRule: rule22
  }, {
    start: 1283,
    length: 1,
    convRule: rule23
  }, {
    start: 1284,
    length: 1,
    convRule: rule22
  }, {
    start: 1285,
    length: 1,
    convRule: rule23
  }, {
    start: 1286,
    length: 1,
    convRule: rule22
  }, {
    start: 1287,
    length: 1,
    convRule: rule23
  }, {
    start: 1288,
    length: 1,
    convRule: rule22
  }, {
    start: 1289,
    length: 1,
    convRule: rule23
  }, {
    start: 1290,
    length: 1,
    convRule: rule22
  }, {
    start: 1291,
    length: 1,
    convRule: rule23
  }, {
    start: 1292,
    length: 1,
    convRule: rule22
  }, {
    start: 1293,
    length: 1,
    convRule: rule23
  }, {
    start: 1294,
    length: 1,
    convRule: rule22
  }, {
    start: 1295,
    length: 1,
    convRule: rule23
  }, {
    start: 1296,
    length: 1,
    convRule: rule22
  }, {
    start: 1297,
    length: 1,
    convRule: rule23
  }, {
    start: 1298,
    length: 1,
    convRule: rule22
  }, {
    start: 1299,
    length: 1,
    convRule: rule23
  }, {
    start: 1300,
    length: 1,
    convRule: rule22
  }, {
    start: 1301,
    length: 1,
    convRule: rule23
  }, {
    start: 1302,
    length: 1,
    convRule: rule22
  }, {
    start: 1303,
    length: 1,
    convRule: rule23
  }, {
    start: 1304,
    length: 1,
    convRule: rule22
  }, {
    start: 1305,
    length: 1,
    convRule: rule23
  }, {
    start: 1306,
    length: 1,
    convRule: rule22
  }, {
    start: 1307,
    length: 1,
    convRule: rule23
  }, {
    start: 1308,
    length: 1,
    convRule: rule22
  }, {
    start: 1309,
    length: 1,
    convRule: rule23
  }, {
    start: 1310,
    length: 1,
    convRule: rule22
  }, {
    start: 1311,
    length: 1,
    convRule: rule23
  }, {
    start: 1312,
    length: 1,
    convRule: rule22
  }, {
    start: 1313,
    length: 1,
    convRule: rule23
  }, {
    start: 1314,
    length: 1,
    convRule: rule22
  }, {
    start: 1315,
    length: 1,
    convRule: rule23
  }, {
    start: 1316,
    length: 1,
    convRule: rule22
  }, {
    start: 1317,
    length: 1,
    convRule: rule23
  }, {
    start: 1318,
    length: 1,
    convRule: rule22
  }, {
    start: 1319,
    length: 1,
    convRule: rule23
  }, {
    start: 1320,
    length: 1,
    convRule: rule22
  }, {
    start: 1321,
    length: 1,
    convRule: rule23
  }, {
    start: 1322,
    length: 1,
    convRule: rule22
  }, {
    start: 1323,
    length: 1,
    convRule: rule23
  }, {
    start: 1324,
    length: 1,
    convRule: rule22
  }, {
    start: 1325,
    length: 1,
    convRule: rule23
  }, {
    start: 1326,
    length: 1,
    convRule: rule22
  }, {
    start: 1327,
    length: 1,
    convRule: rule23
  }, {
    start: 1329,
    length: 38,
    convRule: rule122
  }, {
    start: 1369,
    length: 1,
    convRule: rule91
  }, {
    start: 1370,
    length: 6,
    convRule: rule2
  }, {
    start: 1376,
    length: 1,
    convRule: rule20
  }, {
    start: 1377,
    length: 38,
    convRule: rule123
  }, {
    start: 1415,
    length: 2,
    convRule: rule20
  }, {
    start: 1417,
    length: 1,
    convRule: rule2
  }, {
    start: 1418,
    length: 1,
    convRule: rule7
  }, {
    start: 1421,
    length: 2,
    convRule: rule13
  }, {
    start: 1423,
    length: 1,
    convRule: rule3
  }, {
    start: 1425,
    length: 45,
    convRule: rule92
  }, {
    start: 1470,
    length: 1,
    convRule: rule7
  }, {
    start: 1471,
    length: 1,
    convRule: rule92
  }, {
    start: 1472,
    length: 1,
    convRule: rule2
  }, {
    start: 1473,
    length: 2,
    convRule: rule92
  }, {
    start: 1475,
    length: 1,
    convRule: rule2
  }, {
    start: 1476,
    length: 2,
    convRule: rule92
  }, {
    start: 1478,
    length: 1,
    convRule: rule2
  }, {
    start: 1479,
    length: 1,
    convRule: rule92
  }, {
    start: 1488,
    length: 27,
    convRule: rule14
  }, {
    start: 1519,
    length: 4,
    convRule: rule14
  }, {
    start: 1523,
    length: 2,
    convRule: rule2
  }, {
    start: 1536,
    length: 6,
    convRule: rule16
  }, {
    start: 1542,
    length: 3,
    convRule: rule6
  }, {
    start: 1545,
    length: 2,
    convRule: rule2
  }, {
    start: 1547,
    length: 1,
    convRule: rule3
  }, {
    start: 1548,
    length: 2,
    convRule: rule2
  }, {
    start: 1550,
    length: 2,
    convRule: rule13
  }, {
    start: 1552,
    length: 11,
    convRule: rule92
  }, {
    start: 1563,
    length: 1,
    convRule: rule2
  }, {
    start: 1564,
    length: 1,
    convRule: rule16
  }, {
    start: 1566,
    length: 2,
    convRule: rule2
  }, {
    start: 1568,
    length: 32,
    convRule: rule14
  }, {
    start: 1600,
    length: 1,
    convRule: rule91
  }, {
    start: 1601,
    length: 10,
    convRule: rule14
  }, {
    start: 1611,
    length: 21,
    convRule: rule92
  }, {
    start: 1632,
    length: 10,
    convRule: rule8
  }, {
    start: 1642,
    length: 4,
    convRule: rule2
  }, {
    start: 1646,
    length: 2,
    convRule: rule14
  }, {
    start: 1648,
    length: 1,
    convRule: rule92
  }, {
    start: 1649,
    length: 99,
    convRule: rule14
  }, {
    start: 1748,
    length: 1,
    convRule: rule2
  }, {
    start: 1749,
    length: 1,
    convRule: rule14
  }, {
    start: 1750,
    length: 7,
    convRule: rule92
  }, {
    start: 1757,
    length: 1,
    convRule: rule16
  }, {
    start: 1758,
    length: 1,
    convRule: rule13
  }, {
    start: 1759,
    length: 6,
    convRule: rule92
  }, {
    start: 1765,
    length: 2,
    convRule: rule91
  }, {
    start: 1767,
    length: 2,
    convRule: rule92
  }, {
    start: 1769,
    length: 1,
    convRule: rule13
  }, {
    start: 1770,
    length: 4,
    convRule: rule92
  }, {
    start: 1774,
    length: 2,
    convRule: rule14
  }, {
    start: 1776,
    length: 10,
    convRule: rule8
  }, {
    start: 1786,
    length: 3,
    convRule: rule14
  }, {
    start: 1789,
    length: 2,
    convRule: rule13
  }, {
    start: 1791,
    length: 1,
    convRule: rule14
  }, {
    start: 1792,
    length: 14,
    convRule: rule2
  }, {
    start: 1807,
    length: 1,
    convRule: rule16
  }, {
    start: 1808,
    length: 1,
    convRule: rule14
  }, {
    start: 1809,
    length: 1,
    convRule: rule92
  }, {
    start: 1810,
    length: 30,
    convRule: rule14
  }, {
    start: 1840,
    length: 27,
    convRule: rule92
  }, {
    start: 1869,
    length: 89,
    convRule: rule14
  }, {
    start: 1958,
    length: 11,
    convRule: rule92
  }, {
    start: 1969,
    length: 1,
    convRule: rule14
  }, {
    start: 1984,
    length: 10,
    convRule: rule8
  }, {
    start: 1994,
    length: 33,
    convRule: rule14
  }, {
    start: 2027,
    length: 9,
    convRule: rule92
  }, {
    start: 2036,
    length: 2,
    convRule: rule91
  }, {
    start: 2038,
    length: 1,
    convRule: rule13
  }, {
    start: 2039,
    length: 3,
    convRule: rule2
  }, {
    start: 2042,
    length: 1,
    convRule: rule91
  }, {
    start: 2045,
    length: 1,
    convRule: rule92
  }, {
    start: 2046,
    length: 2,
    convRule: rule3
  }, {
    start: 2048,
    length: 22,
    convRule: rule14
  }, {
    start: 2070,
    length: 4,
    convRule: rule92
  }, {
    start: 2074,
    length: 1,
    convRule: rule91
  }, {
    start: 2075,
    length: 9,
    convRule: rule92
  }, {
    start: 2084,
    length: 1,
    convRule: rule91
  }, {
    start: 2085,
    length: 3,
    convRule: rule92
  }, {
    start: 2088,
    length: 1,
    convRule: rule91
  }, {
    start: 2089,
    length: 5,
    convRule: rule92
  }, {
    start: 2096,
    length: 15,
    convRule: rule2
  }, {
    start: 2112,
    length: 25,
    convRule: rule14
  }, {
    start: 2137,
    length: 3,
    convRule: rule92
  }, {
    start: 2142,
    length: 1,
    convRule: rule2
  }, {
    start: 2144,
    length: 11,
    convRule: rule14
  }, {
    start: 2208,
    length: 21,
    convRule: rule14
  }, {
    start: 2230,
    length: 18,
    convRule: rule14
  }, {
    start: 2259,
    length: 15,
    convRule: rule92
  }, {
    start: 2274,
    length: 1,
    convRule: rule16
  }, {
    start: 2275,
    length: 32,
    convRule: rule92
  }, {
    start: 2307,
    length: 1,
    convRule: rule124
  }, {
    start: 2308,
    length: 54,
    convRule: rule14
  }, {
    start: 2362,
    length: 1,
    convRule: rule92
  }, {
    start: 2363,
    length: 1,
    convRule: rule124
  }, {
    start: 2364,
    length: 1,
    convRule: rule92
  }, {
    start: 2365,
    length: 1,
    convRule: rule14
  }, {
    start: 2366,
    length: 3,
    convRule: rule124
  }, {
    start: 2369,
    length: 8,
    convRule: rule92
  }, {
    start: 2377,
    length: 4,
    convRule: rule124
  }, {
    start: 2381,
    length: 1,
    convRule: rule92
  }, {
    start: 2382,
    length: 2,
    convRule: rule124
  }, {
    start: 2384,
    length: 1,
    convRule: rule14
  }, {
    start: 2385,
    length: 7,
    convRule: rule92
  }, {
    start: 2392,
    length: 10,
    convRule: rule14
  }, {
    start: 2402,
    length: 2,
    convRule: rule92
  }, {
    start: 2404,
    length: 2,
    convRule: rule2
  }, {
    start: 2406,
    length: 10,
    convRule: rule8
  }, {
    start: 2416,
    length: 1,
    convRule: rule2
  }, {
    start: 2417,
    length: 1,
    convRule: rule91
  }, {
    start: 2418,
    length: 15,
    convRule: rule14
  }, {
    start: 2433,
    length: 1,
    convRule: rule92
  }, {
    start: 2434,
    length: 2,
    convRule: rule124
  }, {
    start: 2437,
    length: 8,
    convRule: rule14
  }, {
    start: 2447,
    length: 2,
    convRule: rule14
  }, {
    start: 2451,
    length: 22,
    convRule: rule14
  }, {
    start: 2474,
    length: 7,
    convRule: rule14
  }, {
    start: 2482,
    length: 1,
    convRule: rule14
  }, {
    start: 2486,
    length: 4,
    convRule: rule14
  }, {
    start: 2492,
    length: 1,
    convRule: rule92
  }, {
    start: 2493,
    length: 1,
    convRule: rule14
  }, {
    start: 2494,
    length: 3,
    convRule: rule124
  }, {
    start: 2497,
    length: 4,
    convRule: rule92
  }, {
    start: 2503,
    length: 2,
    convRule: rule124
  }, {
    start: 2507,
    length: 2,
    convRule: rule124
  }, {
    start: 2509,
    length: 1,
    convRule: rule92
  }, {
    start: 2510,
    length: 1,
    convRule: rule14
  }, {
    start: 2519,
    length: 1,
    convRule: rule124
  }, {
    start: 2524,
    length: 2,
    convRule: rule14
  }, {
    start: 2527,
    length: 3,
    convRule: rule14
  }, {
    start: 2530,
    length: 2,
    convRule: rule92
  }, {
    start: 2534,
    length: 10,
    convRule: rule8
  }, {
    start: 2544,
    length: 2,
    convRule: rule14
  }, {
    start: 2546,
    length: 2,
    convRule: rule3
  }, {
    start: 2548,
    length: 6,
    convRule: rule17
  }, {
    start: 2554,
    length: 1,
    convRule: rule13
  }, {
    start: 2555,
    length: 1,
    convRule: rule3
  }, {
    start: 2556,
    length: 1,
    convRule: rule14
  }, {
    start: 2557,
    length: 1,
    convRule: rule2
  }, {
    start: 2558,
    length: 1,
    convRule: rule92
  }, {
    start: 2561,
    length: 2,
    convRule: rule92
  }, {
    start: 2563,
    length: 1,
    convRule: rule124
  }, {
    start: 2565,
    length: 6,
    convRule: rule14
  }, {
    start: 2575,
    length: 2,
    convRule: rule14
  }, {
    start: 2579,
    length: 22,
    convRule: rule14
  }, {
    start: 2602,
    length: 7,
    convRule: rule14
  }, {
    start: 2610,
    length: 2,
    convRule: rule14
  }, {
    start: 2613,
    length: 2,
    convRule: rule14
  }, {
    start: 2616,
    length: 2,
    convRule: rule14
  }, {
    start: 2620,
    length: 1,
    convRule: rule92
  }, {
    start: 2622,
    length: 3,
    convRule: rule124
  }, {
    start: 2625,
    length: 2,
    convRule: rule92
  }, {
    start: 2631,
    length: 2,
    convRule: rule92
  }, {
    start: 2635,
    length: 3,
    convRule: rule92
  }, {
    start: 2641,
    length: 1,
    convRule: rule92
  }, {
    start: 2649,
    length: 4,
    convRule: rule14
  }, {
    start: 2654,
    length: 1,
    convRule: rule14
  }, {
    start: 2662,
    length: 10,
    convRule: rule8
  }, {
    start: 2672,
    length: 2,
    convRule: rule92
  }, {
    start: 2674,
    length: 3,
    convRule: rule14
  }, {
    start: 2677,
    length: 1,
    convRule: rule92
  }, {
    start: 2678,
    length: 1,
    convRule: rule2
  }, {
    start: 2689,
    length: 2,
    convRule: rule92
  }, {
    start: 2691,
    length: 1,
    convRule: rule124
  }, {
    start: 2693,
    length: 9,
    convRule: rule14
  }, {
    start: 2703,
    length: 3,
    convRule: rule14
  }, {
    start: 2707,
    length: 22,
    convRule: rule14
  }, {
    start: 2730,
    length: 7,
    convRule: rule14
  }, {
    start: 2738,
    length: 2,
    convRule: rule14
  }, {
    start: 2741,
    length: 5,
    convRule: rule14
  }, {
    start: 2748,
    length: 1,
    convRule: rule92
  }, {
    start: 2749,
    length: 1,
    convRule: rule14
  }, {
    start: 2750,
    length: 3,
    convRule: rule124
  }, {
    start: 2753,
    length: 5,
    convRule: rule92
  }, {
    start: 2759,
    length: 2,
    convRule: rule92
  }, {
    start: 2761,
    length: 1,
    convRule: rule124
  }, {
    start: 2763,
    length: 2,
    convRule: rule124
  }, {
    start: 2765,
    length: 1,
    convRule: rule92
  }, {
    start: 2768,
    length: 1,
    convRule: rule14
  }, {
    start: 2784,
    length: 2,
    convRule: rule14
  }, {
    start: 2786,
    length: 2,
    convRule: rule92
  }, {
    start: 2790,
    length: 10,
    convRule: rule8
  }, {
    start: 2800,
    length: 1,
    convRule: rule2
  }, {
    start: 2801,
    length: 1,
    convRule: rule3
  }, {
    start: 2809,
    length: 1,
    convRule: rule14
  }, {
    start: 2810,
    length: 6,
    convRule: rule92
  }, {
    start: 2817,
    length: 1,
    convRule: rule92
  }, {
    start: 2818,
    length: 2,
    convRule: rule124
  }, {
    start: 2821,
    length: 8,
    convRule: rule14
  }, {
    start: 2831,
    length: 2,
    convRule: rule14
  }, {
    start: 2835,
    length: 22,
    convRule: rule14
  }, {
    start: 2858,
    length: 7,
    convRule: rule14
  }, {
    start: 2866,
    length: 2,
    convRule: rule14
  }, {
    start: 2869,
    length: 5,
    convRule: rule14
  }, {
    start: 2876,
    length: 1,
    convRule: rule92
  }, {
    start: 2877,
    length: 1,
    convRule: rule14
  }, {
    start: 2878,
    length: 1,
    convRule: rule124
  }, {
    start: 2879,
    length: 1,
    convRule: rule92
  }, {
    start: 2880,
    length: 1,
    convRule: rule124
  }, {
    start: 2881,
    length: 4,
    convRule: rule92
  }, {
    start: 2887,
    length: 2,
    convRule: rule124
  }, {
    start: 2891,
    length: 2,
    convRule: rule124
  }, {
    start: 2893,
    length: 1,
    convRule: rule92
  }, {
    start: 2901,
    length: 2,
    convRule: rule92
  }, {
    start: 2903,
    length: 1,
    convRule: rule124
  }, {
    start: 2908,
    length: 2,
    convRule: rule14
  }, {
    start: 2911,
    length: 3,
    convRule: rule14
  }, {
    start: 2914,
    length: 2,
    convRule: rule92
  }, {
    start: 2918,
    length: 10,
    convRule: rule8
  }, {
    start: 2928,
    length: 1,
    convRule: rule13
  }, {
    start: 2929,
    length: 1,
    convRule: rule14
  }, {
    start: 2930,
    length: 6,
    convRule: rule17
  }, {
    start: 2946,
    length: 1,
    convRule: rule92
  }, {
    start: 2947,
    length: 1,
    convRule: rule14
  }, {
    start: 2949,
    length: 6,
    convRule: rule14
  }, {
    start: 2958,
    length: 3,
    convRule: rule14
  }, {
    start: 2962,
    length: 4,
    convRule: rule14
  }, {
    start: 2969,
    length: 2,
    convRule: rule14
  }, {
    start: 2972,
    length: 1,
    convRule: rule14
  }, {
    start: 2974,
    length: 2,
    convRule: rule14
  }, {
    start: 2979,
    length: 2,
    convRule: rule14
  }, {
    start: 2984,
    length: 3,
    convRule: rule14
  }, {
    start: 2990,
    length: 12,
    convRule: rule14
  }, {
    start: 3006,
    length: 2,
    convRule: rule124
  }, {
    start: 3008,
    length: 1,
    convRule: rule92
  }, {
    start: 3009,
    length: 2,
    convRule: rule124
  }, {
    start: 3014,
    length: 3,
    convRule: rule124
  }, {
    start: 3018,
    length: 3,
    convRule: rule124
  }, {
    start: 3021,
    length: 1,
    convRule: rule92
  }, {
    start: 3024,
    length: 1,
    convRule: rule14
  }, {
    start: 3031,
    length: 1,
    convRule: rule124
  }, {
    start: 3046,
    length: 10,
    convRule: rule8
  }, {
    start: 3056,
    length: 3,
    convRule: rule17
  }, {
    start: 3059,
    length: 6,
    convRule: rule13
  }, {
    start: 3065,
    length: 1,
    convRule: rule3
  }, {
    start: 3066,
    length: 1,
    convRule: rule13
  }, {
    start: 3072,
    length: 1,
    convRule: rule92
  }, {
    start: 3073,
    length: 3,
    convRule: rule124
  }, {
    start: 3076,
    length: 1,
    convRule: rule92
  }, {
    start: 3077,
    length: 8,
    convRule: rule14
  }, {
    start: 3086,
    length: 3,
    convRule: rule14
  }, {
    start: 3090,
    length: 23,
    convRule: rule14
  }, {
    start: 3114,
    length: 16,
    convRule: rule14
  }, {
    start: 3133,
    length: 1,
    convRule: rule14
  }, {
    start: 3134,
    length: 3,
    convRule: rule92
  }, {
    start: 3137,
    length: 4,
    convRule: rule124
  }, {
    start: 3142,
    length: 3,
    convRule: rule92
  }, {
    start: 3146,
    length: 4,
    convRule: rule92
  }, {
    start: 3157,
    length: 2,
    convRule: rule92
  }, {
    start: 3160,
    length: 3,
    convRule: rule14
  }, {
    start: 3168,
    length: 2,
    convRule: rule14
  }, {
    start: 3170,
    length: 2,
    convRule: rule92
  }, {
    start: 3174,
    length: 10,
    convRule: rule8
  }, {
    start: 3191,
    length: 1,
    convRule: rule2
  }, {
    start: 3192,
    length: 7,
    convRule: rule17
  }, {
    start: 3199,
    length: 1,
    convRule: rule13
  }, {
    start: 3200,
    length: 1,
    convRule: rule14
  }, {
    start: 3201,
    length: 1,
    convRule: rule92
  }, {
    start: 3202,
    length: 2,
    convRule: rule124
  }, {
    start: 3204,
    length: 1,
    convRule: rule2
  }, {
    start: 3205,
    length: 8,
    convRule: rule14
  }, {
    start: 3214,
    length: 3,
    convRule: rule14
  }, {
    start: 3218,
    length: 23,
    convRule: rule14
  }, {
    start: 3242,
    length: 10,
    convRule: rule14
  }, {
    start: 3253,
    length: 5,
    convRule: rule14
  }, {
    start: 3260,
    length: 1,
    convRule: rule92
  }, {
    start: 3261,
    length: 1,
    convRule: rule14
  }, {
    start: 3262,
    length: 1,
    convRule: rule124
  }, {
    start: 3263,
    length: 1,
    convRule: rule92
  }, {
    start: 3264,
    length: 5,
    convRule: rule124
  }, {
    start: 3270,
    length: 1,
    convRule: rule92
  }, {
    start: 3271,
    length: 2,
    convRule: rule124
  }, {
    start: 3274,
    length: 2,
    convRule: rule124
  }, {
    start: 3276,
    length: 2,
    convRule: rule92
  }, {
    start: 3285,
    length: 2,
    convRule: rule124
  }, {
    start: 3294,
    length: 1,
    convRule: rule14
  }, {
    start: 3296,
    length: 2,
    convRule: rule14
  }, {
    start: 3298,
    length: 2,
    convRule: rule92
  }, {
    start: 3302,
    length: 10,
    convRule: rule8
  }, {
    start: 3313,
    length: 2,
    convRule: rule14
  }, {
    start: 3328,
    length: 2,
    convRule: rule92
  }, {
    start: 3330,
    length: 2,
    convRule: rule124
  }, {
    start: 3332,
    length: 9,
    convRule: rule14
  }, {
    start: 3342,
    length: 3,
    convRule: rule14
  }, {
    start: 3346,
    length: 41,
    convRule: rule14
  }, {
    start: 3387,
    length: 2,
    convRule: rule92
  }, {
    start: 3389,
    length: 1,
    convRule: rule14
  }, {
    start: 3390,
    length: 3,
    convRule: rule124
  }, {
    start: 3393,
    length: 4,
    convRule: rule92
  }, {
    start: 3398,
    length: 3,
    convRule: rule124
  }, {
    start: 3402,
    length: 3,
    convRule: rule124
  }, {
    start: 3405,
    length: 1,
    convRule: rule92
  }, {
    start: 3406,
    length: 1,
    convRule: rule14
  }, {
    start: 3407,
    length: 1,
    convRule: rule13
  }, {
    start: 3412,
    length: 3,
    convRule: rule14
  }, {
    start: 3415,
    length: 1,
    convRule: rule124
  }, {
    start: 3416,
    length: 7,
    convRule: rule17
  }, {
    start: 3423,
    length: 3,
    convRule: rule14
  }, {
    start: 3426,
    length: 2,
    convRule: rule92
  }, {
    start: 3430,
    length: 10,
    convRule: rule8
  }, {
    start: 3440,
    length: 9,
    convRule: rule17
  }, {
    start: 3449,
    length: 1,
    convRule: rule13
  }, {
    start: 3450,
    length: 6,
    convRule: rule14
  }, {
    start: 3457,
    length: 1,
    convRule: rule92
  }, {
    start: 3458,
    length: 2,
    convRule: rule124
  }, {
    start: 3461,
    length: 18,
    convRule: rule14
  }, {
    start: 3482,
    length: 24,
    convRule: rule14
  }, {
    start: 3507,
    length: 9,
    convRule: rule14
  }, {
    start: 3517,
    length: 1,
    convRule: rule14
  }, {
    start: 3520,
    length: 7,
    convRule: rule14
  }, {
    start: 3530,
    length: 1,
    convRule: rule92
  }, {
    start: 3535,
    length: 3,
    convRule: rule124
  }, {
    start: 3538,
    length: 3,
    convRule: rule92
  }, {
    start: 3542,
    length: 1,
    convRule: rule92
  }, {
    start: 3544,
    length: 8,
    convRule: rule124
  }, {
    start: 3558,
    length: 10,
    convRule: rule8
  }, {
    start: 3570,
    length: 2,
    convRule: rule124
  }, {
    start: 3572,
    length: 1,
    convRule: rule2
  }, {
    start: 3585,
    length: 48,
    convRule: rule14
  }, {
    start: 3633,
    length: 1,
    convRule: rule92
  }, {
    start: 3634,
    length: 2,
    convRule: rule14
  }, {
    start: 3636,
    length: 7,
    convRule: rule92
  }, {
    start: 3647,
    length: 1,
    convRule: rule3
  }, {
    start: 3648,
    length: 6,
    convRule: rule14
  }, {
    start: 3654,
    length: 1,
    convRule: rule91
  }, {
    start: 3655,
    length: 8,
    convRule: rule92
  }, {
    start: 3663,
    length: 1,
    convRule: rule2
  }, {
    start: 3664,
    length: 10,
    convRule: rule8
  }, {
    start: 3674,
    length: 2,
    convRule: rule2
  }, {
    start: 3713,
    length: 2,
    convRule: rule14
  }, {
    start: 3716,
    length: 1,
    convRule: rule14
  }, {
    start: 3718,
    length: 5,
    convRule: rule14
  }, {
    start: 3724,
    length: 24,
    convRule: rule14
  }, {
    start: 3749,
    length: 1,
    convRule: rule14
  }, {
    start: 3751,
    length: 10,
    convRule: rule14
  }, {
    start: 3761,
    length: 1,
    convRule: rule92
  }, {
    start: 3762,
    length: 2,
    convRule: rule14
  }, {
    start: 3764,
    length: 9,
    convRule: rule92
  }, {
    start: 3773,
    length: 1,
    convRule: rule14
  }, {
    start: 3776,
    length: 5,
    convRule: rule14
  }, {
    start: 3782,
    length: 1,
    convRule: rule91
  }, {
    start: 3784,
    length: 6,
    convRule: rule92
  }, {
    start: 3792,
    length: 10,
    convRule: rule8
  }, {
    start: 3804,
    length: 4,
    convRule: rule14
  }, {
    start: 3840,
    length: 1,
    convRule: rule14
  }, {
    start: 3841,
    length: 3,
    convRule: rule13
  }, {
    start: 3844,
    length: 15,
    convRule: rule2
  }, {
    start: 3859,
    length: 1,
    convRule: rule13
  }, {
    start: 3860,
    length: 1,
    convRule: rule2
  }, {
    start: 3861,
    length: 3,
    convRule: rule13
  }, {
    start: 3864,
    length: 2,
    convRule: rule92
  }, {
    start: 3866,
    length: 6,
    convRule: rule13
  }, {
    start: 3872,
    length: 10,
    convRule: rule8
  }, {
    start: 3882,
    length: 10,
    convRule: rule17
  }, {
    start: 3892,
    length: 1,
    convRule: rule13
  }, {
    start: 3893,
    length: 1,
    convRule: rule92
  }, {
    start: 3894,
    length: 1,
    convRule: rule13
  }, {
    start: 3895,
    length: 1,
    convRule: rule92
  }, {
    start: 3896,
    length: 1,
    convRule: rule13
  }, {
    start: 3897,
    length: 1,
    convRule: rule92
  }, {
    start: 3898,
    length: 1,
    convRule: rule4
  }, {
    start: 3899,
    length: 1,
    convRule: rule5
  }, {
    start: 3900,
    length: 1,
    convRule: rule4
  }, {
    start: 3901,
    length: 1,
    convRule: rule5
  }, {
    start: 3902,
    length: 2,
    convRule: rule124
  }, {
    start: 3904,
    length: 8,
    convRule: rule14
  }, {
    start: 3913,
    length: 36,
    convRule: rule14
  }, {
    start: 3953,
    length: 14,
    convRule: rule92
  }, {
    start: 3967,
    length: 1,
    convRule: rule124
  }, {
    start: 3968,
    length: 5,
    convRule: rule92
  }, {
    start: 3973,
    length: 1,
    convRule: rule2
  }, {
    start: 3974,
    length: 2,
    convRule: rule92
  }, {
    start: 3976,
    length: 5,
    convRule: rule14
  }, {
    start: 3981,
    length: 11,
    convRule: rule92
  }, {
    start: 3993,
    length: 36,
    convRule: rule92
  }, {
    start: 4030,
    length: 8,
    convRule: rule13
  }, {
    start: 4038,
    length: 1,
    convRule: rule92
  }, {
    start: 4039,
    length: 6,
    convRule: rule13
  }, {
    start: 4046,
    length: 2,
    convRule: rule13
  }, {
    start: 4048,
    length: 5,
    convRule: rule2
  }, {
    start: 4053,
    length: 4,
    convRule: rule13
  }, {
    start: 4057,
    length: 2,
    convRule: rule2
  }, {
    start: 4096,
    length: 43,
    convRule: rule14
  }, {
    start: 4139,
    length: 2,
    convRule: rule124
  }, {
    start: 4141,
    length: 4,
    convRule: rule92
  }, {
    start: 4145,
    length: 1,
    convRule: rule124
  }, {
    start: 4146,
    length: 6,
    convRule: rule92
  }, {
    start: 4152,
    length: 1,
    convRule: rule124
  }, {
    start: 4153,
    length: 2,
    convRule: rule92
  }, {
    start: 4155,
    length: 2,
    convRule: rule124
  }, {
    start: 4157,
    length: 2,
    convRule: rule92
  }, {
    start: 4159,
    length: 1,
    convRule: rule14
  }, {
    start: 4160,
    length: 10,
    convRule: rule8
  }, {
    start: 4170,
    length: 6,
    convRule: rule2
  }, {
    start: 4176,
    length: 6,
    convRule: rule14
  }, {
    start: 4182,
    length: 2,
    convRule: rule124
  }, {
    start: 4184,
    length: 2,
    convRule: rule92
  }, {
    start: 4186,
    length: 4,
    convRule: rule14
  }, {
    start: 4190,
    length: 3,
    convRule: rule92
  }, {
    start: 4193,
    length: 1,
    convRule: rule14
  }, {
    start: 4194,
    length: 3,
    convRule: rule124
  }, {
    start: 4197,
    length: 2,
    convRule: rule14
  }, {
    start: 4199,
    length: 7,
    convRule: rule124
  }, {
    start: 4206,
    length: 3,
    convRule: rule14
  }, {
    start: 4209,
    length: 4,
    convRule: rule92
  }, {
    start: 4213,
    length: 13,
    convRule: rule14
  }, {
    start: 4226,
    length: 1,
    convRule: rule92
  }, {
    start: 4227,
    length: 2,
    convRule: rule124
  }, {
    start: 4229,
    length: 2,
    convRule: rule92
  }, {
    start: 4231,
    length: 6,
    convRule: rule124
  }, {
    start: 4237,
    length: 1,
    convRule: rule92
  }, {
    start: 4238,
    length: 1,
    convRule: rule14
  }, {
    start: 4239,
    length: 1,
    convRule: rule124
  }, {
    start: 4240,
    length: 10,
    convRule: rule8
  }, {
    start: 4250,
    length: 3,
    convRule: rule124
  }, {
    start: 4253,
    length: 1,
    convRule: rule92
  }, {
    start: 4254,
    length: 2,
    convRule: rule13
  }, {
    start: 4256,
    length: 38,
    convRule: rule125
  }, {
    start: 4295,
    length: 1,
    convRule: rule125
  }, {
    start: 4301,
    length: 1,
    convRule: rule125
  }, {
    start: 4304,
    length: 43,
    convRule: rule126
  }, {
    start: 4347,
    length: 1,
    convRule: rule2
  }, {
    start: 4348,
    length: 1,
    convRule: rule91
  }, {
    start: 4349,
    length: 3,
    convRule: rule126
  }, {
    start: 4352,
    length: 329,
    convRule: rule14
  }, {
    start: 4682,
    length: 4,
    convRule: rule14
  }, {
    start: 4688,
    length: 7,
    convRule: rule14
  }, {
    start: 4696,
    length: 1,
    convRule: rule14
  }, {
    start: 4698,
    length: 4,
    convRule: rule14
  }, {
    start: 4704,
    length: 41,
    convRule: rule14
  }, {
    start: 4746,
    length: 4,
    convRule: rule14
  }, {
    start: 4752,
    length: 33,
    convRule: rule14
  }, {
    start: 4786,
    length: 4,
    convRule: rule14
  }, {
    start: 4792,
    length: 7,
    convRule: rule14
  }, {
    start: 4800,
    length: 1,
    convRule: rule14
  }, {
    start: 4802,
    length: 4,
    convRule: rule14
  }, {
    start: 4808,
    length: 15,
    convRule: rule14
  }, {
    start: 4824,
    length: 57,
    convRule: rule14
  }, {
    start: 4882,
    length: 4,
    convRule: rule14
  }, {
    start: 4888,
    length: 67,
    convRule: rule14
  }, {
    start: 4957,
    length: 3,
    convRule: rule92
  }, {
    start: 4960,
    length: 9,
    convRule: rule2
  }, {
    start: 4969,
    length: 20,
    convRule: rule17
  }, {
    start: 4992,
    length: 16,
    convRule: rule14
  }, {
    start: 5008,
    length: 10,
    convRule: rule13
  }, {
    start: 5024,
    length: 80,
    convRule: rule127
  }, {
    start: 5104,
    length: 6,
    convRule: rule104
  }, {
    start: 5112,
    length: 6,
    convRule: rule110
  }, {
    start: 5120,
    length: 1,
    convRule: rule7
  }, {
    start: 5121,
    length: 620,
    convRule: rule14
  }, {
    start: 5741,
    length: 1,
    convRule: rule13
  }, {
    start: 5742,
    length: 1,
    convRule: rule2
  }, {
    start: 5743,
    length: 17,
    convRule: rule14
  }, {
    start: 5760,
    length: 1,
    convRule: rule1
  }, {
    start: 5761,
    length: 26,
    convRule: rule14
  }, {
    start: 5787,
    length: 1,
    convRule: rule4
  }, {
    start: 5788,
    length: 1,
    convRule: rule5
  }, {
    start: 5792,
    length: 75,
    convRule: rule14
  }, {
    start: 5867,
    length: 3,
    convRule: rule2
  }, {
    start: 5870,
    length: 3,
    convRule: rule128
  }, {
    start: 5873,
    length: 8,
    convRule: rule14
  }, {
    start: 5888,
    length: 13,
    convRule: rule14
  }, {
    start: 5902,
    length: 4,
    convRule: rule14
  }, {
    start: 5906,
    length: 3,
    convRule: rule92
  }, {
    start: 5920,
    length: 18,
    convRule: rule14
  }, {
    start: 5938,
    length: 3,
    convRule: rule92
  }, {
    start: 5941,
    length: 2,
    convRule: rule2
  }, {
    start: 5952,
    length: 18,
    convRule: rule14
  }, {
    start: 5970,
    length: 2,
    convRule: rule92
  }, {
    start: 5984,
    length: 13,
    convRule: rule14
  }, {
    start: 5998,
    length: 3,
    convRule: rule14
  }, {
    start: 6002,
    length: 2,
    convRule: rule92
  }, {
    start: 6016,
    length: 52,
    convRule: rule14
  }, {
    start: 6068,
    length: 2,
    convRule: rule92
  }, {
    start: 6070,
    length: 1,
    convRule: rule124
  }, {
    start: 6071,
    length: 7,
    convRule: rule92
  }, {
    start: 6078,
    length: 8,
    convRule: rule124
  }, {
    start: 6086,
    length: 1,
    convRule: rule92
  }, {
    start: 6087,
    length: 2,
    convRule: rule124
  }, {
    start: 6089,
    length: 11,
    convRule: rule92
  }, {
    start: 6100,
    length: 3,
    convRule: rule2
  }, {
    start: 6103,
    length: 1,
    convRule: rule91
  }, {
    start: 6104,
    length: 3,
    convRule: rule2
  }, {
    start: 6107,
    length: 1,
    convRule: rule3
  }, {
    start: 6108,
    length: 1,
    convRule: rule14
  }, {
    start: 6109,
    length: 1,
    convRule: rule92
  }, {
    start: 6112,
    length: 10,
    convRule: rule8
  }, {
    start: 6128,
    length: 10,
    convRule: rule17
  }, {
    start: 6144,
    length: 6,
    convRule: rule2
  }, {
    start: 6150,
    length: 1,
    convRule: rule7
  }, {
    start: 6151,
    length: 4,
    convRule: rule2
  }, {
    start: 6155,
    length: 3,
    convRule: rule92
  }, {
    start: 6158,
    length: 1,
    convRule: rule16
  }, {
    start: 6160,
    length: 10,
    convRule: rule8
  }, {
    start: 6176,
    length: 35,
    convRule: rule14
  }, {
    start: 6211,
    length: 1,
    convRule: rule91
  }, {
    start: 6212,
    length: 53,
    convRule: rule14
  }, {
    start: 6272,
    length: 5,
    convRule: rule14
  }, {
    start: 6277,
    length: 2,
    convRule: rule92
  }, {
    start: 6279,
    length: 34,
    convRule: rule14
  }, {
    start: 6313,
    length: 1,
    convRule: rule92
  }, {
    start: 6314,
    length: 1,
    convRule: rule14
  }, {
    start: 6320,
    length: 70,
    convRule: rule14
  }, {
    start: 6400,
    length: 31,
    convRule: rule14
  }, {
    start: 6432,
    length: 3,
    convRule: rule92
  }, {
    start: 6435,
    length: 4,
    convRule: rule124
  }, {
    start: 6439,
    length: 2,
    convRule: rule92
  }, {
    start: 6441,
    length: 3,
    convRule: rule124
  }, {
    start: 6448,
    length: 2,
    convRule: rule124
  }, {
    start: 6450,
    length: 1,
    convRule: rule92
  }, {
    start: 6451,
    length: 6,
    convRule: rule124
  }, {
    start: 6457,
    length: 3,
    convRule: rule92
  }, {
    start: 6464,
    length: 1,
    convRule: rule13
  }, {
    start: 6468,
    length: 2,
    convRule: rule2
  }, {
    start: 6470,
    length: 10,
    convRule: rule8
  }, {
    start: 6480,
    length: 30,
    convRule: rule14
  }, {
    start: 6512,
    length: 5,
    convRule: rule14
  }, {
    start: 6528,
    length: 44,
    convRule: rule14
  }, {
    start: 6576,
    length: 26,
    convRule: rule14
  }, {
    start: 6608,
    length: 10,
    convRule: rule8
  }, {
    start: 6618,
    length: 1,
    convRule: rule17
  }, {
    start: 6622,
    length: 34,
    convRule: rule13
  }, {
    start: 6656,
    length: 23,
    convRule: rule14
  }, {
    start: 6679,
    length: 2,
    convRule: rule92
  }, {
    start: 6681,
    length: 2,
    convRule: rule124
  }, {
    start: 6683,
    length: 1,
    convRule: rule92
  }, {
    start: 6686,
    length: 2,
    convRule: rule2
  }, {
    start: 6688,
    length: 53,
    convRule: rule14
  }, {
    start: 6741,
    length: 1,
    convRule: rule124
  }, {
    start: 6742,
    length: 1,
    convRule: rule92
  }, {
    start: 6743,
    length: 1,
    convRule: rule124
  }, {
    start: 6744,
    length: 7,
    convRule: rule92
  }, {
    start: 6752,
    length: 1,
    convRule: rule92
  }, {
    start: 6753,
    length: 1,
    convRule: rule124
  }, {
    start: 6754,
    length: 1,
    convRule: rule92
  }, {
    start: 6755,
    length: 2,
    convRule: rule124
  }, {
    start: 6757,
    length: 8,
    convRule: rule92
  }, {
    start: 6765,
    length: 6,
    convRule: rule124
  }, {
    start: 6771,
    length: 10,
    convRule: rule92
  }, {
    start: 6783,
    length: 1,
    convRule: rule92
  }, {
    start: 6784,
    length: 10,
    convRule: rule8
  }, {
    start: 6800,
    length: 10,
    convRule: rule8
  }, {
    start: 6816,
    length: 7,
    convRule: rule2
  }, {
    start: 6823,
    length: 1,
    convRule: rule91
  }, {
    start: 6824,
    length: 6,
    convRule: rule2
  }, {
    start: 6832,
    length: 14,
    convRule: rule92
  }, {
    start: 6846,
    length: 1,
    convRule: rule119
  }, {
    start: 6847,
    length: 2,
    convRule: rule92
  }, {
    start: 6912,
    length: 4,
    convRule: rule92
  }, {
    start: 6916,
    length: 1,
    convRule: rule124
  }, {
    start: 6917,
    length: 47,
    convRule: rule14
  }, {
    start: 6964,
    length: 1,
    convRule: rule92
  }, {
    start: 6965,
    length: 1,
    convRule: rule124
  }, {
    start: 6966,
    length: 5,
    convRule: rule92
  }, {
    start: 6971,
    length: 1,
    convRule: rule124
  }, {
    start: 6972,
    length: 1,
    convRule: rule92
  }, {
    start: 6973,
    length: 5,
    convRule: rule124
  }, {
    start: 6978,
    length: 1,
    convRule: rule92
  }, {
    start: 6979,
    length: 2,
    convRule: rule124
  }, {
    start: 6981,
    length: 7,
    convRule: rule14
  }, {
    start: 6992,
    length: 10,
    convRule: rule8
  }, {
    start: 7002,
    length: 7,
    convRule: rule2
  }, {
    start: 7009,
    length: 10,
    convRule: rule13
  }, {
    start: 7019,
    length: 9,
    convRule: rule92
  }, {
    start: 7028,
    length: 9,
    convRule: rule13
  }, {
    start: 7040,
    length: 2,
    convRule: rule92
  }, {
    start: 7042,
    length: 1,
    convRule: rule124
  }, {
    start: 7043,
    length: 30,
    convRule: rule14
  }, {
    start: 7073,
    length: 1,
    convRule: rule124
  }, {
    start: 7074,
    length: 4,
    convRule: rule92
  }, {
    start: 7078,
    length: 2,
    convRule: rule124
  }, {
    start: 7080,
    length: 2,
    convRule: rule92
  }, {
    start: 7082,
    length: 1,
    convRule: rule124
  }, {
    start: 7083,
    length: 3,
    convRule: rule92
  }, {
    start: 7086,
    length: 2,
    convRule: rule14
  }, {
    start: 7088,
    length: 10,
    convRule: rule8
  }, {
    start: 7098,
    length: 44,
    convRule: rule14
  }, {
    start: 7142,
    length: 1,
    convRule: rule92
  }, {
    start: 7143,
    length: 1,
    convRule: rule124
  }, {
    start: 7144,
    length: 2,
    convRule: rule92
  }, {
    start: 7146,
    length: 3,
    convRule: rule124
  }, {
    start: 7149,
    length: 1,
    convRule: rule92
  }, {
    start: 7150,
    length: 1,
    convRule: rule124
  }, {
    start: 7151,
    length: 3,
    convRule: rule92
  }, {
    start: 7154,
    length: 2,
    convRule: rule124
  }, {
    start: 7164,
    length: 4,
    convRule: rule2
  }, {
    start: 7168,
    length: 36,
    convRule: rule14
  }, {
    start: 7204,
    length: 8,
    convRule: rule124
  }, {
    start: 7212,
    length: 8,
    convRule: rule92
  }, {
    start: 7220,
    length: 2,
    convRule: rule124
  }, {
    start: 7222,
    length: 2,
    convRule: rule92
  }, {
    start: 7227,
    length: 5,
    convRule: rule2
  }, {
    start: 7232,
    length: 10,
    convRule: rule8
  }, {
    start: 7245,
    length: 3,
    convRule: rule14
  }, {
    start: 7248,
    length: 10,
    convRule: rule8
  }, {
    start: 7258,
    length: 30,
    convRule: rule14
  }, {
    start: 7288,
    length: 6,
    convRule: rule91
  }, {
    start: 7294,
    length: 2,
    convRule: rule2
  }, {
    start: 7296,
    length: 1,
    convRule: rule129
  }, {
    start: 7297,
    length: 1,
    convRule: rule130
  }, {
    start: 7298,
    length: 1,
    convRule: rule131
  }, {
    start: 7299,
    length: 2,
    convRule: rule132
  }, {
    start: 7301,
    length: 1,
    convRule: rule133
  }, {
    start: 7302,
    length: 1,
    convRule: rule134
  }, {
    start: 7303,
    length: 1,
    convRule: rule135
  }, {
    start: 7304,
    length: 1,
    convRule: rule136
  }, {
    start: 7312,
    length: 43,
    convRule: rule137
  }, {
    start: 7357,
    length: 3,
    convRule: rule137
  }, {
    start: 7360,
    length: 8,
    convRule: rule2
  }, {
    start: 7376,
    length: 3,
    convRule: rule92
  }, {
    start: 7379,
    length: 1,
    convRule: rule2
  }, {
    start: 7380,
    length: 13,
    convRule: rule92
  }, {
    start: 7393,
    length: 1,
    convRule: rule124
  }, {
    start: 7394,
    length: 7,
    convRule: rule92
  }, {
    start: 7401,
    length: 4,
    convRule: rule14
  }, {
    start: 7405,
    length: 1,
    convRule: rule92
  }, {
    start: 7406,
    length: 6,
    convRule: rule14
  }, {
    start: 7412,
    length: 1,
    convRule: rule92
  }, {
    start: 7413,
    length: 2,
    convRule: rule14
  }, {
    start: 7415,
    length: 1,
    convRule: rule124
  }, {
    start: 7416,
    length: 2,
    convRule: rule92
  }, {
    start: 7418,
    length: 1,
    convRule: rule14
  }, {
    start: 7424,
    length: 44,
    convRule: rule20
  }, {
    start: 7468,
    length: 63,
    convRule: rule91
  }, {
    start: 7531,
    length: 13,
    convRule: rule20
  }, {
    start: 7544,
    length: 1,
    convRule: rule91
  }, {
    start: 7545,
    length: 1,
    convRule: rule138
  }, {
    start: 7546,
    length: 3,
    convRule: rule20
  }, {
    start: 7549,
    length: 1,
    convRule: rule139
  }, {
    start: 7550,
    length: 16,
    convRule: rule20
  }, {
    start: 7566,
    length: 1,
    convRule: rule140
  }, {
    start: 7567,
    length: 12,
    convRule: rule20
  }, {
    start: 7579,
    length: 37,
    convRule: rule91
  }, {
    start: 7616,
    length: 58,
    convRule: rule92
  }, {
    start: 7675,
    length: 5,
    convRule: rule92
  }, {
    start: 7680,
    length: 1,
    convRule: rule22
  }, {
    start: 7681,
    length: 1,
    convRule: rule23
  }, {
    start: 7682,
    length: 1,
    convRule: rule22
  }, {
    start: 7683,
    length: 1,
    convRule: rule23
  }, {
    start: 7684,
    length: 1,
    convRule: rule22
  }, {
    start: 7685,
    length: 1,
    convRule: rule23
  }, {
    start: 7686,
    length: 1,
    convRule: rule22
  }, {
    start: 7687,
    length: 1,
    convRule: rule23
  }, {
    start: 7688,
    length: 1,
    convRule: rule22
  }, {
    start: 7689,
    length: 1,
    convRule: rule23
  }, {
    start: 7690,
    length: 1,
    convRule: rule22
  }, {
    start: 7691,
    length: 1,
    convRule: rule23
  }, {
    start: 7692,
    length: 1,
    convRule: rule22
  }, {
    start: 7693,
    length: 1,
    convRule: rule23
  }, {
    start: 7694,
    length: 1,
    convRule: rule22
  }, {
    start: 7695,
    length: 1,
    convRule: rule23
  }, {
    start: 7696,
    length: 1,
    convRule: rule22
  }, {
    start: 7697,
    length: 1,
    convRule: rule23
  }, {
    start: 7698,
    length: 1,
    convRule: rule22
  }, {
    start: 7699,
    length: 1,
    convRule: rule23
  }, {
    start: 7700,
    length: 1,
    convRule: rule22
  }, {
    start: 7701,
    length: 1,
    convRule: rule23
  }, {
    start: 7702,
    length: 1,
    convRule: rule22
  }, {
    start: 7703,
    length: 1,
    convRule: rule23
  }, {
    start: 7704,
    length: 1,
    convRule: rule22
  }, {
    start: 7705,
    length: 1,
    convRule: rule23
  }, {
    start: 7706,
    length: 1,
    convRule: rule22
  }, {
    start: 7707,
    length: 1,
    convRule: rule23
  }, {
    start: 7708,
    length: 1,
    convRule: rule22
  }, {
    start: 7709,
    length: 1,
    convRule: rule23
  }, {
    start: 7710,
    length: 1,
    convRule: rule22
  }, {
    start: 7711,
    length: 1,
    convRule: rule23
  }, {
    start: 7712,
    length: 1,
    convRule: rule22
  }, {
    start: 7713,
    length: 1,
    convRule: rule23
  }, {
    start: 7714,
    length: 1,
    convRule: rule22
  }, {
    start: 7715,
    length: 1,
    convRule: rule23
  }, {
    start: 7716,
    length: 1,
    convRule: rule22
  }, {
    start: 7717,
    length: 1,
    convRule: rule23
  }, {
    start: 7718,
    length: 1,
    convRule: rule22
  }, {
    start: 7719,
    length: 1,
    convRule: rule23
  }, {
    start: 7720,
    length: 1,
    convRule: rule22
  }, {
    start: 7721,
    length: 1,
    convRule: rule23
  }, {
    start: 7722,
    length: 1,
    convRule: rule22
  }, {
    start: 7723,
    length: 1,
    convRule: rule23
  }, {
    start: 7724,
    length: 1,
    convRule: rule22
  }, {
    start: 7725,
    length: 1,
    convRule: rule23
  }, {
    start: 7726,
    length: 1,
    convRule: rule22
  }, {
    start: 7727,
    length: 1,
    convRule: rule23
  }, {
    start: 7728,
    length: 1,
    convRule: rule22
  }, {
    start: 7729,
    length: 1,
    convRule: rule23
  }, {
    start: 7730,
    length: 1,
    convRule: rule22
  }, {
    start: 7731,
    length: 1,
    convRule: rule23
  }, {
    start: 7732,
    length: 1,
    convRule: rule22
  }, {
    start: 7733,
    length: 1,
    convRule: rule23
  }, {
    start: 7734,
    length: 1,
    convRule: rule22
  }, {
    start: 7735,
    length: 1,
    convRule: rule23
  }, {
    start: 7736,
    length: 1,
    convRule: rule22
  }, {
    start: 7737,
    length: 1,
    convRule: rule23
  }, {
    start: 7738,
    length: 1,
    convRule: rule22
  }, {
    start: 7739,
    length: 1,
    convRule: rule23
  }, {
    start: 7740,
    length: 1,
    convRule: rule22
  }, {
    start: 7741,
    length: 1,
    convRule: rule23
  }, {
    start: 7742,
    length: 1,
    convRule: rule22
  }, {
    start: 7743,
    length: 1,
    convRule: rule23
  }, {
    start: 7744,
    length: 1,
    convRule: rule22
  }, {
    start: 7745,
    length: 1,
    convRule: rule23
  }, {
    start: 7746,
    length: 1,
    convRule: rule22
  }, {
    start: 7747,
    length: 1,
    convRule: rule23
  }, {
    start: 7748,
    length: 1,
    convRule: rule22
  }, {
    start: 7749,
    length: 1,
    convRule: rule23
  }, {
    start: 7750,
    length: 1,
    convRule: rule22
  }, {
    start: 7751,
    length: 1,
    convRule: rule23
  }, {
    start: 7752,
    length: 1,
    convRule: rule22
  }, {
    start: 7753,
    length: 1,
    convRule: rule23
  }, {
    start: 7754,
    length: 1,
    convRule: rule22
  }, {
    start: 7755,
    length: 1,
    convRule: rule23
  }, {
    start: 7756,
    length: 1,
    convRule: rule22
  }, {
    start: 7757,
    length: 1,
    convRule: rule23
  }, {
    start: 7758,
    length: 1,
    convRule: rule22
  }, {
    start: 7759,
    length: 1,
    convRule: rule23
  }, {
    start: 7760,
    length: 1,
    convRule: rule22
  }, {
    start: 7761,
    length: 1,
    convRule: rule23
  }, {
    start: 7762,
    length: 1,
    convRule: rule22
  }, {
    start: 7763,
    length: 1,
    convRule: rule23
  }, {
    start: 7764,
    length: 1,
    convRule: rule22
  }, {
    start: 7765,
    length: 1,
    convRule: rule23
  }, {
    start: 7766,
    length: 1,
    convRule: rule22
  }, {
    start: 7767,
    length: 1,
    convRule: rule23
  }, {
    start: 7768,
    length: 1,
    convRule: rule22
  }, {
    start: 7769,
    length: 1,
    convRule: rule23
  }, {
    start: 7770,
    length: 1,
    convRule: rule22
  }, {
    start: 7771,
    length: 1,
    convRule: rule23
  }, {
    start: 7772,
    length: 1,
    convRule: rule22
  }, {
    start: 7773,
    length: 1,
    convRule: rule23
  }, {
    start: 7774,
    length: 1,
    convRule: rule22
  }, {
    start: 7775,
    length: 1,
    convRule: rule23
  }, {
    start: 7776,
    length: 1,
    convRule: rule22
  }, {
    start: 7777,
    length: 1,
    convRule: rule23
  }, {
    start: 7778,
    length: 1,
    convRule: rule22
  }, {
    start: 7779,
    length: 1,
    convRule: rule23
  }, {
    start: 7780,
    length: 1,
    convRule: rule22
  }, {
    start: 7781,
    length: 1,
    convRule: rule23
  }, {
    start: 7782,
    length: 1,
    convRule: rule22
  }, {
    start: 7783,
    length: 1,
    convRule: rule23
  }, {
    start: 7784,
    length: 1,
    convRule: rule22
  }, {
    start: 7785,
    length: 1,
    convRule: rule23
  }, {
    start: 7786,
    length: 1,
    convRule: rule22
  }, {
    start: 7787,
    length: 1,
    convRule: rule23
  }, {
    start: 7788,
    length: 1,
    convRule: rule22
  }, {
    start: 7789,
    length: 1,
    convRule: rule23
  }, {
    start: 7790,
    length: 1,
    convRule: rule22
  }, {
    start: 7791,
    length: 1,
    convRule: rule23
  }, {
    start: 7792,
    length: 1,
    convRule: rule22
  }, {
    start: 7793,
    length: 1,
    convRule: rule23
  }, {
    start: 7794,
    length: 1,
    convRule: rule22
  }, {
    start: 7795,
    length: 1,
    convRule: rule23
  }, {
    start: 7796,
    length: 1,
    convRule: rule22
  }, {
    start: 7797,
    length: 1,
    convRule: rule23
  }, {
    start: 7798,
    length: 1,
    convRule: rule22
  }, {
    start: 7799,
    length: 1,
    convRule: rule23
  }, {
    start: 7800,
    length: 1,
    convRule: rule22
  }, {
    start: 7801,
    length: 1,
    convRule: rule23
  }, {
    start: 7802,
    length: 1,
    convRule: rule22
  }, {
    start: 7803,
    length: 1,
    convRule: rule23
  }, {
    start: 7804,
    length: 1,
    convRule: rule22
  }, {
    start: 7805,
    length: 1,
    convRule: rule23
  }, {
    start: 7806,
    length: 1,
    convRule: rule22
  }, {
    start: 7807,
    length: 1,
    convRule: rule23
  }, {
    start: 7808,
    length: 1,
    convRule: rule22
  }, {
    start: 7809,
    length: 1,
    convRule: rule23
  }, {
    start: 7810,
    length: 1,
    convRule: rule22
  }, {
    start: 7811,
    length: 1,
    convRule: rule23
  }, {
    start: 7812,
    length: 1,
    convRule: rule22
  }, {
    start: 7813,
    length: 1,
    convRule: rule23
  }, {
    start: 7814,
    length: 1,
    convRule: rule22
  }, {
    start: 7815,
    length: 1,
    convRule: rule23
  }, {
    start: 7816,
    length: 1,
    convRule: rule22
  }, {
    start: 7817,
    length: 1,
    convRule: rule23
  }, {
    start: 7818,
    length: 1,
    convRule: rule22
  }, {
    start: 7819,
    length: 1,
    convRule: rule23
  }, {
    start: 7820,
    length: 1,
    convRule: rule22
  }, {
    start: 7821,
    length: 1,
    convRule: rule23
  }, {
    start: 7822,
    length: 1,
    convRule: rule22
  }, {
    start: 7823,
    length: 1,
    convRule: rule23
  }, {
    start: 7824,
    length: 1,
    convRule: rule22
  }, {
    start: 7825,
    length: 1,
    convRule: rule23
  }, {
    start: 7826,
    length: 1,
    convRule: rule22
  }, {
    start: 7827,
    length: 1,
    convRule: rule23
  }, {
    start: 7828,
    length: 1,
    convRule: rule22
  }, {
    start: 7829,
    length: 1,
    convRule: rule23
  }, {
    start: 7830,
    length: 5,
    convRule: rule20
  }, {
    start: 7835,
    length: 1,
    convRule: rule141
  }, {
    start: 7836,
    length: 2,
    convRule: rule20
  }, {
    start: 7838,
    length: 1,
    convRule: rule142
  }, {
    start: 7839,
    length: 1,
    convRule: rule20
  }, {
    start: 7840,
    length: 1,
    convRule: rule22
  }, {
    start: 7841,
    length: 1,
    convRule: rule23
  }, {
    start: 7842,
    length: 1,
    convRule: rule22
  }, {
    start: 7843,
    length: 1,
    convRule: rule23
  }, {
    start: 7844,
    length: 1,
    convRule: rule22
  }, {
    start: 7845,
    length: 1,
    convRule: rule23
  }, {
    start: 7846,
    length: 1,
    convRule: rule22
  }, {
    start: 7847,
    length: 1,
    convRule: rule23
  }, {
    start: 7848,
    length: 1,
    convRule: rule22
  }, {
    start: 7849,
    length: 1,
    convRule: rule23
  }, {
    start: 7850,
    length: 1,
    convRule: rule22
  }, {
    start: 7851,
    length: 1,
    convRule: rule23
  }, {
    start: 7852,
    length: 1,
    convRule: rule22
  }, {
    start: 7853,
    length: 1,
    convRule: rule23
  }, {
    start: 7854,
    length: 1,
    convRule: rule22
  }, {
    start: 7855,
    length: 1,
    convRule: rule23
  }, {
    start: 7856,
    length: 1,
    convRule: rule22
  }, {
    start: 7857,
    length: 1,
    convRule: rule23
  }, {
    start: 7858,
    length: 1,
    convRule: rule22
  }, {
    start: 7859,
    length: 1,
    convRule: rule23
  }, {
    start: 7860,
    length: 1,
    convRule: rule22
  }, {
    start: 7861,
    length: 1,
    convRule: rule23
  }, {
    start: 7862,
    length: 1,
    convRule: rule22
  }, {
    start: 7863,
    length: 1,
    convRule: rule23
  }, {
    start: 7864,
    length: 1,
    convRule: rule22
  }, {
    start: 7865,
    length: 1,
    convRule: rule23
  }, {
    start: 7866,
    length: 1,
    convRule: rule22
  }, {
    start: 7867,
    length: 1,
    convRule: rule23
  }, {
    start: 7868,
    length: 1,
    convRule: rule22
  }, {
    start: 7869,
    length: 1,
    convRule: rule23
  }, {
    start: 7870,
    length: 1,
    convRule: rule22
  }, {
    start: 7871,
    length: 1,
    convRule: rule23
  }, {
    start: 7872,
    length: 1,
    convRule: rule22
  }, {
    start: 7873,
    length: 1,
    convRule: rule23
  }, {
    start: 7874,
    length: 1,
    convRule: rule22
  }, {
    start: 7875,
    length: 1,
    convRule: rule23
  }, {
    start: 7876,
    length: 1,
    convRule: rule22
  }, {
    start: 7877,
    length: 1,
    convRule: rule23
  }, {
    start: 7878,
    length: 1,
    convRule: rule22
  }, {
    start: 7879,
    length: 1,
    convRule: rule23
  }, {
    start: 7880,
    length: 1,
    convRule: rule22
  }, {
    start: 7881,
    length: 1,
    convRule: rule23
  }, {
    start: 7882,
    length: 1,
    convRule: rule22
  }, {
    start: 7883,
    length: 1,
    convRule: rule23
  }, {
    start: 7884,
    length: 1,
    convRule: rule22
  }, {
    start: 7885,
    length: 1,
    convRule: rule23
  }, {
    start: 7886,
    length: 1,
    convRule: rule22
  }, {
    start: 7887,
    length: 1,
    convRule: rule23
  }, {
    start: 7888,
    length: 1,
    convRule: rule22
  }, {
    start: 7889,
    length: 1,
    convRule: rule23
  }, {
    start: 7890,
    length: 1,
    convRule: rule22
  }, {
    start: 7891,
    length: 1,
    convRule: rule23
  }, {
    start: 7892,
    length: 1,
    convRule: rule22
  }, {
    start: 7893,
    length: 1,
    convRule: rule23
  }, {
    start: 7894,
    length: 1,
    convRule: rule22
  }, {
    start: 7895,
    length: 1,
    convRule: rule23
  }, {
    start: 7896,
    length: 1,
    convRule: rule22
  }, {
    start: 7897,
    length: 1,
    convRule: rule23
  }, {
    start: 7898,
    length: 1,
    convRule: rule22
  }, {
    start: 7899,
    length: 1,
    convRule: rule23
  }, {
    start: 7900,
    length: 1,
    convRule: rule22
  }, {
    start: 7901,
    length: 1,
    convRule: rule23
  }, {
    start: 7902,
    length: 1,
    convRule: rule22
  }, {
    start: 7903,
    length: 1,
    convRule: rule23
  }, {
    start: 7904,
    length: 1,
    convRule: rule22
  }, {
    start: 7905,
    length: 1,
    convRule: rule23
  }, {
    start: 7906,
    length: 1,
    convRule: rule22
  }, {
    start: 7907,
    length: 1,
    convRule: rule23
  }, {
    start: 7908,
    length: 1,
    convRule: rule22
  }, {
    start: 7909,
    length: 1,
    convRule: rule23
  }, {
    start: 7910,
    length: 1,
    convRule: rule22
  }, {
    start: 7911,
    length: 1,
    convRule: rule23
  }, {
    start: 7912,
    length: 1,
    convRule: rule22
  }, {
    start: 7913,
    length: 1,
    convRule: rule23
  }, {
    start: 7914,
    length: 1,
    convRule: rule22
  }, {
    start: 7915,
    length: 1,
    convRule: rule23
  }, {
    start: 7916,
    length: 1,
    convRule: rule22
  }, {
    start: 7917,
    length: 1,
    convRule: rule23
  }, {
    start: 7918,
    length: 1,
    convRule: rule22
  }, {
    start: 7919,
    length: 1,
    convRule: rule23
  }, {
    start: 7920,
    length: 1,
    convRule: rule22
  }, {
    start: 7921,
    length: 1,
    convRule: rule23
  }, {
    start: 7922,
    length: 1,
    convRule: rule22
  }, {
    start: 7923,
    length: 1,
    convRule: rule23
  }, {
    start: 7924,
    length: 1,
    convRule: rule22
  }, {
    start: 7925,
    length: 1,
    convRule: rule23
  }, {
    start: 7926,
    length: 1,
    convRule: rule22
  }, {
    start: 7927,
    length: 1,
    convRule: rule23
  }, {
    start: 7928,
    length: 1,
    convRule: rule22
  }, {
    start: 7929,
    length: 1,
    convRule: rule23
  }, {
    start: 7930,
    length: 1,
    convRule: rule22
  }, {
    start: 7931,
    length: 1,
    convRule: rule23
  }, {
    start: 7932,
    length: 1,
    convRule: rule22
  }, {
    start: 7933,
    length: 1,
    convRule: rule23
  }, {
    start: 7934,
    length: 1,
    convRule: rule22
  }, {
    start: 7935,
    length: 1,
    convRule: rule23
  }, {
    start: 7936,
    length: 8,
    convRule: rule143
  }, {
    start: 7944,
    length: 8,
    convRule: rule144
  }, {
    start: 7952,
    length: 6,
    convRule: rule143
  }, {
    start: 7960,
    length: 6,
    convRule: rule144
  }, {
    start: 7968,
    length: 8,
    convRule: rule143
  }, {
    start: 7976,
    length: 8,
    convRule: rule144
  }, {
    start: 7984,
    length: 8,
    convRule: rule143
  }, {
    start: 7992,
    length: 8,
    convRule: rule144
  }, {
    start: 8e3,
    length: 6,
    convRule: rule143
  }, {
    start: 8008,
    length: 6,
    convRule: rule144
  }, {
    start: 8016,
    length: 1,
    convRule: rule20
  }, {
    start: 8017,
    length: 1,
    convRule: rule143
  }, {
    start: 8018,
    length: 1,
    convRule: rule20
  }, {
    start: 8019,
    length: 1,
    convRule: rule143
  }, {
    start: 8020,
    length: 1,
    convRule: rule20
  }, {
    start: 8021,
    length: 1,
    convRule: rule143
  }, {
    start: 8022,
    length: 1,
    convRule: rule20
  }, {
    start: 8023,
    length: 1,
    convRule: rule143
  }, {
    start: 8025,
    length: 1,
    convRule: rule144
  }, {
    start: 8027,
    length: 1,
    convRule: rule144
  }, {
    start: 8029,
    length: 1,
    convRule: rule144
  }, {
    start: 8031,
    length: 1,
    convRule: rule144
  }, {
    start: 8032,
    length: 8,
    convRule: rule143
  }, {
    start: 8040,
    length: 8,
    convRule: rule144
  }, {
    start: 8048,
    length: 2,
    convRule: rule145
  }, {
    start: 8050,
    length: 4,
    convRule: rule146
  }, {
    start: 8054,
    length: 2,
    convRule: rule147
  }, {
    start: 8056,
    length: 2,
    convRule: rule148
  }, {
    start: 8058,
    length: 2,
    convRule: rule149
  }, {
    start: 8060,
    length: 2,
    convRule: rule150
  }, {
    start: 8064,
    length: 8,
    convRule: rule143
  }, {
    start: 8072,
    length: 8,
    convRule: rule151
  }, {
    start: 8080,
    length: 8,
    convRule: rule143
  }, {
    start: 8088,
    length: 8,
    convRule: rule151
  }, {
    start: 8096,
    length: 8,
    convRule: rule143
  }, {
    start: 8104,
    length: 8,
    convRule: rule151
  }, {
    start: 8112,
    length: 2,
    convRule: rule143
  }, {
    start: 8114,
    length: 1,
    convRule: rule20
  }, {
    start: 8115,
    length: 1,
    convRule: rule152
  }, {
    start: 8116,
    length: 1,
    convRule: rule20
  }, {
    start: 8118,
    length: 2,
    convRule: rule20
  }, {
    start: 8120,
    length: 2,
    convRule: rule144
  }, {
    start: 8122,
    length: 2,
    convRule: rule153
  }, {
    start: 8124,
    length: 1,
    convRule: rule154
  }, {
    start: 8125,
    length: 1,
    convRule: rule10
  }, {
    start: 8126,
    length: 1,
    convRule: rule155
  }, {
    start: 8127,
    length: 3,
    convRule: rule10
  }, {
    start: 8130,
    length: 1,
    convRule: rule20
  }, {
    start: 8131,
    length: 1,
    convRule: rule152
  }, {
    start: 8132,
    length: 1,
    convRule: rule20
  }, {
    start: 8134,
    length: 2,
    convRule: rule20
  }, {
    start: 8136,
    length: 4,
    convRule: rule156
  }, {
    start: 8140,
    length: 1,
    convRule: rule154
  }, {
    start: 8141,
    length: 3,
    convRule: rule10
  }, {
    start: 8144,
    length: 2,
    convRule: rule143
  }, {
    start: 8146,
    length: 2,
    convRule: rule20
  }, {
    start: 8150,
    length: 2,
    convRule: rule20
  }, {
    start: 8152,
    length: 2,
    convRule: rule144
  }, {
    start: 8154,
    length: 2,
    convRule: rule157
  }, {
    start: 8157,
    length: 3,
    convRule: rule10
  }, {
    start: 8160,
    length: 2,
    convRule: rule143
  }, {
    start: 8162,
    length: 3,
    convRule: rule20
  }, {
    start: 8165,
    length: 1,
    convRule: rule113
  }, {
    start: 8166,
    length: 2,
    convRule: rule20
  }, {
    start: 8168,
    length: 2,
    convRule: rule144
  }, {
    start: 8170,
    length: 2,
    convRule: rule158
  }, {
    start: 8172,
    length: 1,
    convRule: rule117
  }, {
    start: 8173,
    length: 3,
    convRule: rule10
  }, {
    start: 8178,
    length: 1,
    convRule: rule20
  }, {
    start: 8179,
    length: 1,
    convRule: rule152
  }, {
    start: 8180,
    length: 1,
    convRule: rule20
  }, {
    start: 8182,
    length: 2,
    convRule: rule20
  }, {
    start: 8184,
    length: 2,
    convRule: rule159
  }, {
    start: 8186,
    length: 2,
    convRule: rule160
  }, {
    start: 8188,
    length: 1,
    convRule: rule154
  }, {
    start: 8189,
    length: 2,
    convRule: rule10
  }, {
    start: 8192,
    length: 11,
    convRule: rule1
  }, {
    start: 8203,
    length: 5,
    convRule: rule16
  }, {
    start: 8208,
    length: 6,
    convRule: rule7
  }, {
    start: 8214,
    length: 2,
    convRule: rule2
  }, {
    start: 8216,
    length: 1,
    convRule: rule15
  }, {
    start: 8217,
    length: 1,
    convRule: rule19
  }, {
    start: 8218,
    length: 1,
    convRule: rule4
  }, {
    start: 8219,
    length: 2,
    convRule: rule15
  }, {
    start: 8221,
    length: 1,
    convRule: rule19
  }, {
    start: 8222,
    length: 1,
    convRule: rule4
  }, {
    start: 8223,
    length: 1,
    convRule: rule15
  }, {
    start: 8224,
    length: 8,
    convRule: rule2
  }, {
    start: 8232,
    length: 1,
    convRule: rule161
  }, {
    start: 8233,
    length: 1,
    convRule: rule162
  }, {
    start: 8234,
    length: 5,
    convRule: rule16
  }, {
    start: 8239,
    length: 1,
    convRule: rule1
  }, {
    start: 8240,
    length: 9,
    convRule: rule2
  }, {
    start: 8249,
    length: 1,
    convRule: rule15
  }, {
    start: 8250,
    length: 1,
    convRule: rule19
  }, {
    start: 8251,
    length: 4,
    convRule: rule2
  }, {
    start: 8255,
    length: 2,
    convRule: rule11
  }, {
    start: 8257,
    length: 3,
    convRule: rule2
  }, {
    start: 8260,
    length: 1,
    convRule: rule6
  }, {
    start: 8261,
    length: 1,
    convRule: rule4
  }, {
    start: 8262,
    length: 1,
    convRule: rule5
  }, {
    start: 8263,
    length: 11,
    convRule: rule2
  }, {
    start: 8274,
    length: 1,
    convRule: rule6
  }, {
    start: 8275,
    length: 1,
    convRule: rule2
  }, {
    start: 8276,
    length: 1,
    convRule: rule11
  }, {
    start: 8277,
    length: 10,
    convRule: rule2
  }, {
    start: 8287,
    length: 1,
    convRule: rule1
  }, {
    start: 8288,
    length: 5,
    convRule: rule16
  }, {
    start: 8294,
    length: 10,
    convRule: rule16
  }, {
    start: 8304,
    length: 1,
    convRule: rule17
  }, {
    start: 8305,
    length: 1,
    convRule: rule91
  }, {
    start: 8308,
    length: 6,
    convRule: rule17
  }, {
    start: 8314,
    length: 3,
    convRule: rule6
  }, {
    start: 8317,
    length: 1,
    convRule: rule4
  }, {
    start: 8318,
    length: 1,
    convRule: rule5
  }, {
    start: 8319,
    length: 1,
    convRule: rule91
  }, {
    start: 8320,
    length: 10,
    convRule: rule17
  }, {
    start: 8330,
    length: 3,
    convRule: rule6
  }, {
    start: 8333,
    length: 1,
    convRule: rule4
  }, {
    start: 8334,
    length: 1,
    convRule: rule5
  }, {
    start: 8336,
    length: 13,
    convRule: rule91
  }, {
    start: 8352,
    length: 32,
    convRule: rule3
  }, {
    start: 8400,
    length: 13,
    convRule: rule92
  }, {
    start: 8413,
    length: 4,
    convRule: rule119
  }, {
    start: 8417,
    length: 1,
    convRule: rule92
  }, {
    start: 8418,
    length: 3,
    convRule: rule119
  }, {
    start: 8421,
    length: 12,
    convRule: rule92
  }, {
    start: 8448,
    length: 2,
    convRule: rule13
  }, {
    start: 8450,
    length: 1,
    convRule: rule107
  }, {
    start: 8451,
    length: 4,
    convRule: rule13
  }, {
    start: 8455,
    length: 1,
    convRule: rule107
  }, {
    start: 8456,
    length: 2,
    convRule: rule13
  }, {
    start: 8458,
    length: 1,
    convRule: rule20
  }, {
    start: 8459,
    length: 3,
    convRule: rule107
  }, {
    start: 8462,
    length: 2,
    convRule: rule20
  }, {
    start: 8464,
    length: 3,
    convRule: rule107
  }, {
    start: 8467,
    length: 1,
    convRule: rule20
  }, {
    start: 8468,
    length: 1,
    convRule: rule13
  }, {
    start: 8469,
    length: 1,
    convRule: rule107
  }, {
    start: 8470,
    length: 2,
    convRule: rule13
  }, {
    start: 8472,
    length: 1,
    convRule: rule6
  }, {
    start: 8473,
    length: 5,
    convRule: rule107
  }, {
    start: 8478,
    length: 6,
    convRule: rule13
  }, {
    start: 8484,
    length: 1,
    convRule: rule107
  }, {
    start: 8485,
    length: 1,
    convRule: rule13
  }, {
    start: 8486,
    length: 1,
    convRule: rule163
  }, {
    start: 8487,
    length: 1,
    convRule: rule13
  }, {
    start: 8488,
    length: 1,
    convRule: rule107
  }, {
    start: 8489,
    length: 1,
    convRule: rule13
  }, {
    start: 8490,
    length: 1,
    convRule: rule164
  }, {
    start: 8491,
    length: 1,
    convRule: rule165
  }, {
    start: 8492,
    length: 2,
    convRule: rule107
  }, {
    start: 8494,
    length: 1,
    convRule: rule13
  }, {
    start: 8495,
    length: 1,
    convRule: rule20
  }, {
    start: 8496,
    length: 2,
    convRule: rule107
  }, {
    start: 8498,
    length: 1,
    convRule: rule166
  }, {
    start: 8499,
    length: 1,
    convRule: rule107
  }, {
    start: 8500,
    length: 1,
    convRule: rule20
  }, {
    start: 8501,
    length: 4,
    convRule: rule14
  }, {
    start: 8505,
    length: 1,
    convRule: rule20
  }, {
    start: 8506,
    length: 2,
    convRule: rule13
  }, {
    start: 8508,
    length: 2,
    convRule: rule20
  }, {
    start: 8510,
    length: 2,
    convRule: rule107
  }, {
    start: 8512,
    length: 5,
    convRule: rule6
  }, {
    start: 8517,
    length: 1,
    convRule: rule107
  }, {
    start: 8518,
    length: 4,
    convRule: rule20
  }, {
    start: 8522,
    length: 1,
    convRule: rule13
  }, {
    start: 8523,
    length: 1,
    convRule: rule6
  }, {
    start: 8524,
    length: 2,
    convRule: rule13
  }, {
    start: 8526,
    length: 1,
    convRule: rule167
  }, {
    start: 8527,
    length: 1,
    convRule: rule13
  }, {
    start: 8528,
    length: 16,
    convRule: rule17
  }, {
    start: 8544,
    length: 16,
    convRule: rule168
  }, {
    start: 8560,
    length: 16,
    convRule: rule169
  }, {
    start: 8576,
    length: 3,
    convRule: rule128
  }, {
    start: 8579,
    length: 1,
    convRule: rule22
  }, {
    start: 8580,
    length: 1,
    convRule: rule23
  }, {
    start: 8581,
    length: 4,
    convRule: rule128
  }, {
    start: 8585,
    length: 1,
    convRule: rule17
  }, {
    start: 8586,
    length: 2,
    convRule: rule13
  }, {
    start: 8592,
    length: 5,
    convRule: rule6
  }, {
    start: 8597,
    length: 5,
    convRule: rule13
  }, {
    start: 8602,
    length: 2,
    convRule: rule6
  }, {
    start: 8604,
    length: 4,
    convRule: rule13
  }, {
    start: 8608,
    length: 1,
    convRule: rule6
  }, {
    start: 8609,
    length: 2,
    convRule: rule13
  }, {
    start: 8611,
    length: 1,
    convRule: rule6
  }, {
    start: 8612,
    length: 2,
    convRule: rule13
  }, {
    start: 8614,
    length: 1,
    convRule: rule6
  }, {
    start: 8615,
    length: 7,
    convRule: rule13
  }, {
    start: 8622,
    length: 1,
    convRule: rule6
  }, {
    start: 8623,
    length: 31,
    convRule: rule13
  }, {
    start: 8654,
    length: 2,
    convRule: rule6
  }, {
    start: 8656,
    length: 2,
    convRule: rule13
  }, {
    start: 8658,
    length: 1,
    convRule: rule6
  }, {
    start: 8659,
    length: 1,
    convRule: rule13
  }, {
    start: 8660,
    length: 1,
    convRule: rule6
  }, {
    start: 8661,
    length: 31,
    convRule: rule13
  }, {
    start: 8692,
    length: 268,
    convRule: rule6
  }, {
    start: 8960,
    length: 8,
    convRule: rule13
  }, {
    start: 8968,
    length: 1,
    convRule: rule4
  }, {
    start: 8969,
    length: 1,
    convRule: rule5
  }, {
    start: 8970,
    length: 1,
    convRule: rule4
  }, {
    start: 8971,
    length: 1,
    convRule: rule5
  }, {
    start: 8972,
    length: 20,
    convRule: rule13
  }, {
    start: 8992,
    length: 2,
    convRule: rule6
  }, {
    start: 8994,
    length: 7,
    convRule: rule13
  }, {
    start: 9001,
    length: 1,
    convRule: rule4
  }, {
    start: 9002,
    length: 1,
    convRule: rule5
  }, {
    start: 9003,
    length: 81,
    convRule: rule13
  }, {
    start: 9084,
    length: 1,
    convRule: rule6
  }, {
    start: 9085,
    length: 30,
    convRule: rule13
  }, {
    start: 9115,
    length: 25,
    convRule: rule6
  }, {
    start: 9140,
    length: 40,
    convRule: rule13
  }, {
    start: 9180,
    length: 6,
    convRule: rule6
  }, {
    start: 9186,
    length: 69,
    convRule: rule13
  }, {
    start: 9280,
    length: 11,
    convRule: rule13
  }, {
    start: 9312,
    length: 60,
    convRule: rule17
  }, {
    start: 9372,
    length: 26,
    convRule: rule13
  }, {
    start: 9398,
    length: 26,
    convRule: rule170
  }, {
    start: 9424,
    length: 26,
    convRule: rule171
  }, {
    start: 9450,
    length: 22,
    convRule: rule17
  }, {
    start: 9472,
    length: 183,
    convRule: rule13
  }, {
    start: 9655,
    length: 1,
    convRule: rule6
  }, {
    start: 9656,
    length: 9,
    convRule: rule13
  }, {
    start: 9665,
    length: 1,
    convRule: rule6
  }, {
    start: 9666,
    length: 54,
    convRule: rule13
  }, {
    start: 9720,
    length: 8,
    convRule: rule6
  }, {
    start: 9728,
    length: 111,
    convRule: rule13
  }, {
    start: 9839,
    length: 1,
    convRule: rule6
  }, {
    start: 9840,
    length: 248,
    convRule: rule13
  }, {
    start: 10088,
    length: 1,
    convRule: rule4
  }, {
    start: 10089,
    length: 1,
    convRule: rule5
  }, {
    start: 10090,
    length: 1,
    convRule: rule4
  }, {
    start: 10091,
    length: 1,
    convRule: rule5
  }, {
    start: 10092,
    length: 1,
    convRule: rule4
  }, {
    start: 10093,
    length: 1,
    convRule: rule5
  }, {
    start: 10094,
    length: 1,
    convRule: rule4
  }, {
    start: 10095,
    length: 1,
    convRule: rule5
  }, {
    start: 10096,
    length: 1,
    convRule: rule4
  }, {
    start: 10097,
    length: 1,
    convRule: rule5
  }, {
    start: 10098,
    length: 1,
    convRule: rule4
  }, {
    start: 10099,
    length: 1,
    convRule: rule5
  }, {
    start: 10100,
    length: 1,
    convRule: rule4
  }, {
    start: 10101,
    length: 1,
    convRule: rule5
  }, {
    start: 10102,
    length: 30,
    convRule: rule17
  }, {
    start: 10132,
    length: 44,
    convRule: rule13
  }, {
    start: 10176,
    length: 5,
    convRule: rule6
  }, {
    start: 10181,
    length: 1,
    convRule: rule4
  }, {
    start: 10182,
    length: 1,
    convRule: rule5
  }, {
    start: 10183,
    length: 31,
    convRule: rule6
  }, {
    start: 10214,
    length: 1,
    convRule: rule4
  }, {
    start: 10215,
    length: 1,
    convRule: rule5
  }, {
    start: 10216,
    length: 1,
    convRule: rule4
  }, {
    start: 10217,
    length: 1,
    convRule: rule5
  }, {
    start: 10218,
    length: 1,
    convRule: rule4
  }, {
    start: 10219,
    length: 1,
    convRule: rule5
  }, {
    start: 10220,
    length: 1,
    convRule: rule4
  }, {
    start: 10221,
    length: 1,
    convRule: rule5
  }, {
    start: 10222,
    length: 1,
    convRule: rule4
  }, {
    start: 10223,
    length: 1,
    convRule: rule5
  }, {
    start: 10224,
    length: 16,
    convRule: rule6
  }, {
    start: 10240,
    length: 256,
    convRule: rule13
  }, {
    start: 10496,
    length: 131,
    convRule: rule6
  }, {
    start: 10627,
    length: 1,
    convRule: rule4
  }, {
    start: 10628,
    length: 1,
    convRule: rule5
  }, {
    start: 10629,
    length: 1,
    convRule: rule4
  }, {
    start: 10630,
    length: 1,
    convRule: rule5
  }, {
    start: 10631,
    length: 1,
    convRule: rule4
  }, {
    start: 10632,
    length: 1,
    convRule: rule5
  }, {
    start: 10633,
    length: 1,
    convRule: rule4
  }, {
    start: 10634,
    length: 1,
    convRule: rule5
  }, {
    start: 10635,
    length: 1,
    convRule: rule4
  }, {
    start: 10636,
    length: 1,
    convRule: rule5
  }, {
    start: 10637,
    length: 1,
    convRule: rule4
  }, {
    start: 10638,
    length: 1,
    convRule: rule5
  }, {
    start: 10639,
    length: 1,
    convRule: rule4
  }, {
    start: 10640,
    length: 1,
    convRule: rule5
  }, {
    start: 10641,
    length: 1,
    convRule: rule4
  }, {
    start: 10642,
    length: 1,
    convRule: rule5
  }, {
    start: 10643,
    length: 1,
    convRule: rule4
  }, {
    start: 10644,
    length: 1,
    convRule: rule5
  }, {
    start: 10645,
    length: 1,
    convRule: rule4
  }, {
    start: 10646,
    length: 1,
    convRule: rule5
  }, {
    start: 10647,
    length: 1,
    convRule: rule4
  }, {
    start: 10648,
    length: 1,
    convRule: rule5
  }, {
    start: 10649,
    length: 63,
    convRule: rule6
  }, {
    start: 10712,
    length: 1,
    convRule: rule4
  }, {
    start: 10713,
    length: 1,
    convRule: rule5
  }, {
    start: 10714,
    length: 1,
    convRule: rule4
  }, {
    start: 10715,
    length: 1,
    convRule: rule5
  }, {
    start: 10716,
    length: 32,
    convRule: rule6
  }, {
    start: 10748,
    length: 1,
    convRule: rule4
  }, {
    start: 10749,
    length: 1,
    convRule: rule5
  }, {
    start: 10750,
    length: 258,
    convRule: rule6
  }, {
    start: 11008,
    length: 48,
    convRule: rule13
  }, {
    start: 11056,
    length: 21,
    convRule: rule6
  }, {
    start: 11077,
    length: 2,
    convRule: rule13
  }, {
    start: 11079,
    length: 6,
    convRule: rule6
  }, {
    start: 11085,
    length: 39,
    convRule: rule13
  }, {
    start: 11126,
    length: 32,
    convRule: rule13
  }, {
    start: 11159,
    length: 105,
    convRule: rule13
  }, {
    start: 11264,
    length: 47,
    convRule: rule122
  }, {
    start: 11312,
    length: 47,
    convRule: rule123
  }, {
    start: 11360,
    length: 1,
    convRule: rule22
  }, {
    start: 11361,
    length: 1,
    convRule: rule23
  }, {
    start: 11362,
    length: 1,
    convRule: rule172
  }, {
    start: 11363,
    length: 1,
    convRule: rule173
  }, {
    start: 11364,
    length: 1,
    convRule: rule174
  }, {
    start: 11365,
    length: 1,
    convRule: rule175
  }, {
    start: 11366,
    length: 1,
    convRule: rule176
  }, {
    start: 11367,
    length: 1,
    convRule: rule22
  }, {
    start: 11368,
    length: 1,
    convRule: rule23
  }, {
    start: 11369,
    length: 1,
    convRule: rule22
  }, {
    start: 11370,
    length: 1,
    convRule: rule23
  }, {
    start: 11371,
    length: 1,
    convRule: rule22
  }, {
    start: 11372,
    length: 1,
    convRule: rule23
  }, {
    start: 11373,
    length: 1,
    convRule: rule177
  }, {
    start: 11374,
    length: 1,
    convRule: rule178
  }, {
    start: 11375,
    length: 1,
    convRule: rule179
  }, {
    start: 11376,
    length: 1,
    convRule: rule180
  }, {
    start: 11377,
    length: 1,
    convRule: rule20
  }, {
    start: 11378,
    length: 1,
    convRule: rule22
  }, {
    start: 11379,
    length: 1,
    convRule: rule23
  }, {
    start: 11380,
    length: 1,
    convRule: rule20
  }, {
    start: 11381,
    length: 1,
    convRule: rule22
  }, {
    start: 11382,
    length: 1,
    convRule: rule23
  }, {
    start: 11383,
    length: 5,
    convRule: rule20
  }, {
    start: 11388,
    length: 2,
    convRule: rule91
  }, {
    start: 11390,
    length: 2,
    convRule: rule181
  }, {
    start: 11392,
    length: 1,
    convRule: rule22
  }, {
    start: 11393,
    length: 1,
    convRule: rule23
  }, {
    start: 11394,
    length: 1,
    convRule: rule22
  }, {
    start: 11395,
    length: 1,
    convRule: rule23
  }, {
    start: 11396,
    length: 1,
    convRule: rule22
  }, {
    start: 11397,
    length: 1,
    convRule: rule23
  }, {
    start: 11398,
    length: 1,
    convRule: rule22
  }, {
    start: 11399,
    length: 1,
    convRule: rule23
  }, {
    start: 11400,
    length: 1,
    convRule: rule22
  }, {
    start: 11401,
    length: 1,
    convRule: rule23
  }, {
    start: 11402,
    length: 1,
    convRule: rule22
  }, {
    start: 11403,
    length: 1,
    convRule: rule23
  }, {
    start: 11404,
    length: 1,
    convRule: rule22
  }, {
    start: 11405,
    length: 1,
    convRule: rule23
  }, {
    start: 11406,
    length: 1,
    convRule: rule22
  }, {
    start: 11407,
    length: 1,
    convRule: rule23
  }, {
    start: 11408,
    length: 1,
    convRule: rule22
  }, {
    start: 11409,
    length: 1,
    convRule: rule23
  }, {
    start: 11410,
    length: 1,
    convRule: rule22
  }, {
    start: 11411,
    length: 1,
    convRule: rule23
  }, {
    start: 11412,
    length: 1,
    convRule: rule22
  }, {
    start: 11413,
    length: 1,
    convRule: rule23
  }, {
    start: 11414,
    length: 1,
    convRule: rule22
  }, {
    start: 11415,
    length: 1,
    convRule: rule23
  }, {
    start: 11416,
    length: 1,
    convRule: rule22
  }, {
    start: 11417,
    length: 1,
    convRule: rule23
  }, {
    start: 11418,
    length: 1,
    convRule: rule22
  }, {
    start: 11419,
    length: 1,
    convRule: rule23
  }, {
    start: 11420,
    length: 1,
    convRule: rule22
  }, {
    start: 11421,
    length: 1,
    convRule: rule23
  }, {
    start: 11422,
    length: 1,
    convRule: rule22
  }, {
    start: 11423,
    length: 1,
    convRule: rule23
  }, {
    start: 11424,
    length: 1,
    convRule: rule22
  }, {
    start: 11425,
    length: 1,
    convRule: rule23
  }, {
    start: 11426,
    length: 1,
    convRule: rule22
  }, {
    start: 11427,
    length: 1,
    convRule: rule23
  }, {
    start: 11428,
    length: 1,
    convRule: rule22
  }, {
    start: 11429,
    length: 1,
    convRule: rule23
  }, {
    start: 11430,
    length: 1,
    convRule: rule22
  }, {
    start: 11431,
    length: 1,
    convRule: rule23
  }, {
    start: 11432,
    length: 1,
    convRule: rule22
  }, {
    start: 11433,
    length: 1,
    convRule: rule23
  }, {
    start: 11434,
    length: 1,
    convRule: rule22
  }, {
    start: 11435,
    length: 1,
    convRule: rule23
  }, {
    start: 11436,
    length: 1,
    convRule: rule22
  }, {
    start: 11437,
    length: 1,
    convRule: rule23
  }, {
    start: 11438,
    length: 1,
    convRule: rule22
  }, {
    start: 11439,
    length: 1,
    convRule: rule23
  }, {
    start: 11440,
    length: 1,
    convRule: rule22
  }, {
    start: 11441,
    length: 1,
    convRule: rule23
  }, {
    start: 11442,
    length: 1,
    convRule: rule22
  }, {
    start: 11443,
    length: 1,
    convRule: rule23
  }, {
    start: 11444,
    length: 1,
    convRule: rule22
  }, {
    start: 11445,
    length: 1,
    convRule: rule23
  }, {
    start: 11446,
    length: 1,
    convRule: rule22
  }, {
    start: 11447,
    length: 1,
    convRule: rule23
  }, {
    start: 11448,
    length: 1,
    convRule: rule22
  }, {
    start: 11449,
    length: 1,
    convRule: rule23
  }, {
    start: 11450,
    length: 1,
    convRule: rule22
  }, {
    start: 11451,
    length: 1,
    convRule: rule23
  }, {
    start: 11452,
    length: 1,
    convRule: rule22
  }, {
    start: 11453,
    length: 1,
    convRule: rule23
  }, {
    start: 11454,
    length: 1,
    convRule: rule22
  }, {
    start: 11455,
    length: 1,
    convRule: rule23
  }, {
    start: 11456,
    length: 1,
    convRule: rule22
  }, {
    start: 11457,
    length: 1,
    convRule: rule23
  }, {
    start: 11458,
    length: 1,
    convRule: rule22
  }, {
    start: 11459,
    length: 1,
    convRule: rule23
  }, {
    start: 11460,
    length: 1,
    convRule: rule22
  }, {
    start: 11461,
    length: 1,
    convRule: rule23
  }, {
    start: 11462,
    length: 1,
    convRule: rule22
  }, {
    start: 11463,
    length: 1,
    convRule: rule23
  }, {
    start: 11464,
    length: 1,
    convRule: rule22
  }, {
    start: 11465,
    length: 1,
    convRule: rule23
  }, {
    start: 11466,
    length: 1,
    convRule: rule22
  }, {
    start: 11467,
    length: 1,
    convRule: rule23
  }, {
    start: 11468,
    length: 1,
    convRule: rule22
  }, {
    start: 11469,
    length: 1,
    convRule: rule23
  }, {
    start: 11470,
    length: 1,
    convRule: rule22
  }, {
    start: 11471,
    length: 1,
    convRule: rule23
  }, {
    start: 11472,
    length: 1,
    convRule: rule22
  }, {
    start: 11473,
    length: 1,
    convRule: rule23
  }, {
    start: 11474,
    length: 1,
    convRule: rule22
  }, {
    start: 11475,
    length: 1,
    convRule: rule23
  }, {
    start: 11476,
    length: 1,
    convRule: rule22
  }, {
    start: 11477,
    length: 1,
    convRule: rule23
  }, {
    start: 11478,
    length: 1,
    convRule: rule22
  }, {
    start: 11479,
    length: 1,
    convRule: rule23
  }, {
    start: 11480,
    length: 1,
    convRule: rule22
  }, {
    start: 11481,
    length: 1,
    convRule: rule23
  }, {
    start: 11482,
    length: 1,
    convRule: rule22
  }, {
    start: 11483,
    length: 1,
    convRule: rule23
  }, {
    start: 11484,
    length: 1,
    convRule: rule22
  }, {
    start: 11485,
    length: 1,
    convRule: rule23
  }, {
    start: 11486,
    length: 1,
    convRule: rule22
  }, {
    start: 11487,
    length: 1,
    convRule: rule23
  }, {
    start: 11488,
    length: 1,
    convRule: rule22
  }, {
    start: 11489,
    length: 1,
    convRule: rule23
  }, {
    start: 11490,
    length: 1,
    convRule: rule22
  }, {
    start: 11491,
    length: 1,
    convRule: rule23
  }, {
    start: 11492,
    length: 1,
    convRule: rule20
  }, {
    start: 11493,
    length: 6,
    convRule: rule13
  }, {
    start: 11499,
    length: 1,
    convRule: rule22
  }, {
    start: 11500,
    length: 1,
    convRule: rule23
  }, {
    start: 11501,
    length: 1,
    convRule: rule22
  }, {
    start: 11502,
    length: 1,
    convRule: rule23
  }, {
    start: 11503,
    length: 3,
    convRule: rule92
  }, {
    start: 11506,
    length: 1,
    convRule: rule22
  }, {
    start: 11507,
    length: 1,
    convRule: rule23
  }, {
    start: 11513,
    length: 4,
    convRule: rule2
  }, {
    start: 11517,
    length: 1,
    convRule: rule17
  }, {
    start: 11518,
    length: 2,
    convRule: rule2
  }, {
    start: 11520,
    length: 38,
    convRule: rule182
  }, {
    start: 11559,
    length: 1,
    convRule: rule182
  }, {
    start: 11565,
    length: 1,
    convRule: rule182
  }, {
    start: 11568,
    length: 56,
    convRule: rule14
  }, {
    start: 11631,
    length: 1,
    convRule: rule91
  }, {
    start: 11632,
    length: 1,
    convRule: rule2
  }, {
    start: 11647,
    length: 1,
    convRule: rule92
  }, {
    start: 11648,
    length: 23,
    convRule: rule14
  }, {
    start: 11680,
    length: 7,
    convRule: rule14
  }, {
    start: 11688,
    length: 7,
    convRule: rule14
  }, {
    start: 11696,
    length: 7,
    convRule: rule14
  }, {
    start: 11704,
    length: 7,
    convRule: rule14
  }, {
    start: 11712,
    length: 7,
    convRule: rule14
  }, {
    start: 11720,
    length: 7,
    convRule: rule14
  }, {
    start: 11728,
    length: 7,
    convRule: rule14
  }, {
    start: 11736,
    length: 7,
    convRule: rule14
  }, {
    start: 11744,
    length: 32,
    convRule: rule92
  }, {
    start: 11776,
    length: 2,
    convRule: rule2
  }, {
    start: 11778,
    length: 1,
    convRule: rule15
  }, {
    start: 11779,
    length: 1,
    convRule: rule19
  }, {
    start: 11780,
    length: 1,
    convRule: rule15
  }, {
    start: 11781,
    length: 1,
    convRule: rule19
  }, {
    start: 11782,
    length: 3,
    convRule: rule2
  }, {
    start: 11785,
    length: 1,
    convRule: rule15
  }, {
    start: 11786,
    length: 1,
    convRule: rule19
  }, {
    start: 11787,
    length: 1,
    convRule: rule2
  }, {
    start: 11788,
    length: 1,
    convRule: rule15
  }, {
    start: 11789,
    length: 1,
    convRule: rule19
  }, {
    start: 11790,
    length: 9,
    convRule: rule2
  }, {
    start: 11799,
    length: 1,
    convRule: rule7
  }, {
    start: 11800,
    length: 2,
    convRule: rule2
  }, {
    start: 11802,
    length: 1,
    convRule: rule7
  }, {
    start: 11803,
    length: 1,
    convRule: rule2
  }, {
    start: 11804,
    length: 1,
    convRule: rule15
  }, {
    start: 11805,
    length: 1,
    convRule: rule19
  }, {
    start: 11806,
    length: 2,
    convRule: rule2
  }, {
    start: 11808,
    length: 1,
    convRule: rule15
  }, {
    start: 11809,
    length: 1,
    convRule: rule19
  }, {
    start: 11810,
    length: 1,
    convRule: rule4
  }, {
    start: 11811,
    length: 1,
    convRule: rule5
  }, {
    start: 11812,
    length: 1,
    convRule: rule4
  }, {
    start: 11813,
    length: 1,
    convRule: rule5
  }, {
    start: 11814,
    length: 1,
    convRule: rule4
  }, {
    start: 11815,
    length: 1,
    convRule: rule5
  }, {
    start: 11816,
    length: 1,
    convRule: rule4
  }, {
    start: 11817,
    length: 1,
    convRule: rule5
  }, {
    start: 11818,
    length: 5,
    convRule: rule2
  }, {
    start: 11823,
    length: 1,
    convRule: rule91
  }, {
    start: 11824,
    length: 10,
    convRule: rule2
  }, {
    start: 11834,
    length: 2,
    convRule: rule7
  }, {
    start: 11836,
    length: 4,
    convRule: rule2
  }, {
    start: 11840,
    length: 1,
    convRule: rule7
  }, {
    start: 11841,
    length: 1,
    convRule: rule2
  }, {
    start: 11842,
    length: 1,
    convRule: rule4
  }, {
    start: 11843,
    length: 13,
    convRule: rule2
  }, {
    start: 11856,
    length: 2,
    convRule: rule13
  }, {
    start: 11858,
    length: 1,
    convRule: rule2
  }, {
    start: 11904,
    length: 26,
    convRule: rule13
  }, {
    start: 11931,
    length: 89,
    convRule: rule13
  }, {
    start: 12032,
    length: 214,
    convRule: rule13
  }, {
    start: 12272,
    length: 12,
    convRule: rule13
  }, {
    start: 12288,
    length: 1,
    convRule: rule1
  }, {
    start: 12289,
    length: 3,
    convRule: rule2
  }, {
    start: 12292,
    length: 1,
    convRule: rule13
  }, {
    start: 12293,
    length: 1,
    convRule: rule91
  }, {
    start: 12294,
    length: 1,
    convRule: rule14
  }, {
    start: 12295,
    length: 1,
    convRule: rule128
  }, {
    start: 12296,
    length: 1,
    convRule: rule4
  }, {
    start: 12297,
    length: 1,
    convRule: rule5
  }, {
    start: 12298,
    length: 1,
    convRule: rule4
  }, {
    start: 12299,
    length: 1,
    convRule: rule5
  }, {
    start: 12300,
    length: 1,
    convRule: rule4
  }, {
    start: 12301,
    length: 1,
    convRule: rule5
  }, {
    start: 12302,
    length: 1,
    convRule: rule4
  }, {
    start: 12303,
    length: 1,
    convRule: rule5
  }, {
    start: 12304,
    length: 1,
    convRule: rule4
  }, {
    start: 12305,
    length: 1,
    convRule: rule5
  }, {
    start: 12306,
    length: 2,
    convRule: rule13
  }, {
    start: 12308,
    length: 1,
    convRule: rule4
  }, {
    start: 12309,
    length: 1,
    convRule: rule5
  }, {
    start: 12310,
    length: 1,
    convRule: rule4
  }, {
    start: 12311,
    length: 1,
    convRule: rule5
  }, {
    start: 12312,
    length: 1,
    convRule: rule4
  }, {
    start: 12313,
    length: 1,
    convRule: rule5
  }, {
    start: 12314,
    length: 1,
    convRule: rule4
  }, {
    start: 12315,
    length: 1,
    convRule: rule5
  }, {
    start: 12316,
    length: 1,
    convRule: rule7
  }, {
    start: 12317,
    length: 1,
    convRule: rule4
  }, {
    start: 12318,
    length: 2,
    convRule: rule5
  }, {
    start: 12320,
    length: 1,
    convRule: rule13
  }, {
    start: 12321,
    length: 9,
    convRule: rule128
  }, {
    start: 12330,
    length: 4,
    convRule: rule92
  }, {
    start: 12334,
    length: 2,
    convRule: rule124
  }, {
    start: 12336,
    length: 1,
    convRule: rule7
  }, {
    start: 12337,
    length: 5,
    convRule: rule91
  }, {
    start: 12342,
    length: 2,
    convRule: rule13
  }, {
    start: 12344,
    length: 3,
    convRule: rule128
  }, {
    start: 12347,
    length: 1,
    convRule: rule91
  }, {
    start: 12348,
    length: 1,
    convRule: rule14
  }, {
    start: 12349,
    length: 1,
    convRule: rule2
  }, {
    start: 12350,
    length: 2,
    convRule: rule13
  }, {
    start: 12353,
    length: 86,
    convRule: rule14
  }, {
    start: 12441,
    length: 2,
    convRule: rule92
  }, {
    start: 12443,
    length: 2,
    convRule: rule10
  }, {
    start: 12445,
    length: 2,
    convRule: rule91
  }, {
    start: 12447,
    length: 1,
    convRule: rule14
  }, {
    start: 12448,
    length: 1,
    convRule: rule7
  }, {
    start: 12449,
    length: 90,
    convRule: rule14
  }, {
    start: 12539,
    length: 1,
    convRule: rule2
  }, {
    start: 12540,
    length: 3,
    convRule: rule91
  }, {
    start: 12543,
    length: 1,
    convRule: rule14
  }, {
    start: 12549,
    length: 43,
    convRule: rule14
  }, {
    start: 12593,
    length: 94,
    convRule: rule14
  }, {
    start: 12688,
    length: 2,
    convRule: rule13
  }, {
    start: 12690,
    length: 4,
    convRule: rule17
  }, {
    start: 12694,
    length: 10,
    convRule: rule13
  }, {
    start: 12704,
    length: 32,
    convRule: rule14
  }, {
    start: 12736,
    length: 36,
    convRule: rule13
  }, {
    start: 12784,
    length: 16,
    convRule: rule14
  }, {
    start: 12800,
    length: 31,
    convRule: rule13
  }, {
    start: 12832,
    length: 10,
    convRule: rule17
  }, {
    start: 12842,
    length: 30,
    convRule: rule13
  }, {
    start: 12872,
    length: 8,
    convRule: rule17
  }, {
    start: 12880,
    length: 1,
    convRule: rule13
  }, {
    start: 12881,
    length: 15,
    convRule: rule17
  }, {
    start: 12896,
    length: 32,
    convRule: rule13
  }, {
    start: 12928,
    length: 10,
    convRule: rule17
  }, {
    start: 12938,
    length: 39,
    convRule: rule13
  }, {
    start: 12977,
    length: 15,
    convRule: rule17
  }, {
    start: 12992,
    length: 320,
    convRule: rule13
  }, {
    start: 13312,
    length: 6592,
    convRule: rule14
  }, {
    start: 19904,
    length: 64,
    convRule: rule13
  }, {
    start: 19968,
    length: 20989,
    convRule: rule14
  }, {
    start: 40960,
    length: 21,
    convRule: rule14
  }, {
    start: 40981,
    length: 1,
    convRule: rule91
  }, {
    start: 40982,
    length: 1143,
    convRule: rule14
  }, {
    start: 42128,
    length: 55,
    convRule: rule13
  }, {
    start: 42192,
    length: 40,
    convRule: rule14
  }, {
    start: 42232,
    length: 6,
    convRule: rule91
  }, {
    start: 42238,
    length: 2,
    convRule: rule2
  }, {
    start: 42240,
    length: 268,
    convRule: rule14
  }, {
    start: 42508,
    length: 1,
    convRule: rule91
  }, {
    start: 42509,
    length: 3,
    convRule: rule2
  }, {
    start: 42512,
    length: 16,
    convRule: rule14
  }, {
    start: 42528,
    length: 10,
    convRule: rule8
  }, {
    start: 42538,
    length: 2,
    convRule: rule14
  }, {
    start: 42560,
    length: 1,
    convRule: rule22
  }, {
    start: 42561,
    length: 1,
    convRule: rule23
  }, {
    start: 42562,
    length: 1,
    convRule: rule22
  }, {
    start: 42563,
    length: 1,
    convRule: rule23
  }, {
    start: 42564,
    length: 1,
    convRule: rule22
  }, {
    start: 42565,
    length: 1,
    convRule: rule23
  }, {
    start: 42566,
    length: 1,
    convRule: rule22
  }, {
    start: 42567,
    length: 1,
    convRule: rule23
  }, {
    start: 42568,
    length: 1,
    convRule: rule22
  }, {
    start: 42569,
    length: 1,
    convRule: rule23
  }, {
    start: 42570,
    length: 1,
    convRule: rule22
  }, {
    start: 42571,
    length: 1,
    convRule: rule23
  }, {
    start: 42572,
    length: 1,
    convRule: rule22
  }, {
    start: 42573,
    length: 1,
    convRule: rule23
  }, {
    start: 42574,
    length: 1,
    convRule: rule22
  }, {
    start: 42575,
    length: 1,
    convRule: rule23
  }, {
    start: 42576,
    length: 1,
    convRule: rule22
  }, {
    start: 42577,
    length: 1,
    convRule: rule23
  }, {
    start: 42578,
    length: 1,
    convRule: rule22
  }, {
    start: 42579,
    length: 1,
    convRule: rule23
  }, {
    start: 42580,
    length: 1,
    convRule: rule22
  }, {
    start: 42581,
    length: 1,
    convRule: rule23
  }, {
    start: 42582,
    length: 1,
    convRule: rule22
  }, {
    start: 42583,
    length: 1,
    convRule: rule23
  }, {
    start: 42584,
    length: 1,
    convRule: rule22
  }, {
    start: 42585,
    length: 1,
    convRule: rule23
  }, {
    start: 42586,
    length: 1,
    convRule: rule22
  }, {
    start: 42587,
    length: 1,
    convRule: rule23
  }, {
    start: 42588,
    length: 1,
    convRule: rule22
  }, {
    start: 42589,
    length: 1,
    convRule: rule23
  }, {
    start: 42590,
    length: 1,
    convRule: rule22
  }, {
    start: 42591,
    length: 1,
    convRule: rule23
  }, {
    start: 42592,
    length: 1,
    convRule: rule22
  }, {
    start: 42593,
    length: 1,
    convRule: rule23
  }, {
    start: 42594,
    length: 1,
    convRule: rule22
  }, {
    start: 42595,
    length: 1,
    convRule: rule23
  }, {
    start: 42596,
    length: 1,
    convRule: rule22
  }, {
    start: 42597,
    length: 1,
    convRule: rule23
  }, {
    start: 42598,
    length: 1,
    convRule: rule22
  }, {
    start: 42599,
    length: 1,
    convRule: rule23
  }, {
    start: 42600,
    length: 1,
    convRule: rule22
  }, {
    start: 42601,
    length: 1,
    convRule: rule23
  }, {
    start: 42602,
    length: 1,
    convRule: rule22
  }, {
    start: 42603,
    length: 1,
    convRule: rule23
  }, {
    start: 42604,
    length: 1,
    convRule: rule22
  }, {
    start: 42605,
    length: 1,
    convRule: rule23
  }, {
    start: 42606,
    length: 1,
    convRule: rule14
  }, {
    start: 42607,
    length: 1,
    convRule: rule92
  }, {
    start: 42608,
    length: 3,
    convRule: rule119
  }, {
    start: 42611,
    length: 1,
    convRule: rule2
  }, {
    start: 42612,
    length: 10,
    convRule: rule92
  }, {
    start: 42622,
    length: 1,
    convRule: rule2
  }, {
    start: 42623,
    length: 1,
    convRule: rule91
  }, {
    start: 42624,
    length: 1,
    convRule: rule22
  }, {
    start: 42625,
    length: 1,
    convRule: rule23
  }, {
    start: 42626,
    length: 1,
    convRule: rule22
  }, {
    start: 42627,
    length: 1,
    convRule: rule23
  }, {
    start: 42628,
    length: 1,
    convRule: rule22
  }, {
    start: 42629,
    length: 1,
    convRule: rule23
  }, {
    start: 42630,
    length: 1,
    convRule: rule22
  }, {
    start: 42631,
    length: 1,
    convRule: rule23
  }, {
    start: 42632,
    length: 1,
    convRule: rule22
  }, {
    start: 42633,
    length: 1,
    convRule: rule23
  }, {
    start: 42634,
    length: 1,
    convRule: rule22
  }, {
    start: 42635,
    length: 1,
    convRule: rule23
  }, {
    start: 42636,
    length: 1,
    convRule: rule22
  }, {
    start: 42637,
    length: 1,
    convRule: rule23
  }, {
    start: 42638,
    length: 1,
    convRule: rule22
  }, {
    start: 42639,
    length: 1,
    convRule: rule23
  }, {
    start: 42640,
    length: 1,
    convRule: rule22
  }, {
    start: 42641,
    length: 1,
    convRule: rule23
  }, {
    start: 42642,
    length: 1,
    convRule: rule22
  }, {
    start: 42643,
    length: 1,
    convRule: rule23
  }, {
    start: 42644,
    length: 1,
    convRule: rule22
  }, {
    start: 42645,
    length: 1,
    convRule: rule23
  }, {
    start: 42646,
    length: 1,
    convRule: rule22
  }, {
    start: 42647,
    length: 1,
    convRule: rule23
  }, {
    start: 42648,
    length: 1,
    convRule: rule22
  }, {
    start: 42649,
    length: 1,
    convRule: rule23
  }, {
    start: 42650,
    length: 1,
    convRule: rule22
  }, {
    start: 42651,
    length: 1,
    convRule: rule23
  }, {
    start: 42652,
    length: 2,
    convRule: rule91
  }, {
    start: 42654,
    length: 2,
    convRule: rule92
  }, {
    start: 42656,
    length: 70,
    convRule: rule14
  }, {
    start: 42726,
    length: 10,
    convRule: rule128
  }, {
    start: 42736,
    length: 2,
    convRule: rule92
  }, {
    start: 42738,
    length: 6,
    convRule: rule2
  }, {
    start: 42752,
    length: 23,
    convRule: rule10
  }, {
    start: 42775,
    length: 9,
    convRule: rule91
  }, {
    start: 42784,
    length: 2,
    convRule: rule10
  }, {
    start: 42786,
    length: 1,
    convRule: rule22
  }, {
    start: 42787,
    length: 1,
    convRule: rule23
  }, {
    start: 42788,
    length: 1,
    convRule: rule22
  }, {
    start: 42789,
    length: 1,
    convRule: rule23
  }, {
    start: 42790,
    length: 1,
    convRule: rule22
  }, {
    start: 42791,
    length: 1,
    convRule: rule23
  }, {
    start: 42792,
    length: 1,
    convRule: rule22
  }, {
    start: 42793,
    length: 1,
    convRule: rule23
  }, {
    start: 42794,
    length: 1,
    convRule: rule22
  }, {
    start: 42795,
    length: 1,
    convRule: rule23
  }, {
    start: 42796,
    length: 1,
    convRule: rule22
  }, {
    start: 42797,
    length: 1,
    convRule: rule23
  }, {
    start: 42798,
    length: 1,
    convRule: rule22
  }, {
    start: 42799,
    length: 1,
    convRule: rule23
  }, {
    start: 42800,
    length: 2,
    convRule: rule20
  }, {
    start: 42802,
    length: 1,
    convRule: rule22
  }, {
    start: 42803,
    length: 1,
    convRule: rule23
  }, {
    start: 42804,
    length: 1,
    convRule: rule22
  }, {
    start: 42805,
    length: 1,
    convRule: rule23
  }, {
    start: 42806,
    length: 1,
    convRule: rule22
  }, {
    start: 42807,
    length: 1,
    convRule: rule23
  }, {
    start: 42808,
    length: 1,
    convRule: rule22
  }, {
    start: 42809,
    length: 1,
    convRule: rule23
  }, {
    start: 42810,
    length: 1,
    convRule: rule22
  }, {
    start: 42811,
    length: 1,
    convRule: rule23
  }, {
    start: 42812,
    length: 1,
    convRule: rule22
  }, {
    start: 42813,
    length: 1,
    convRule: rule23
  }, {
    start: 42814,
    length: 1,
    convRule: rule22
  }, {
    start: 42815,
    length: 1,
    convRule: rule23
  }, {
    start: 42816,
    length: 1,
    convRule: rule22
  }, {
    start: 42817,
    length: 1,
    convRule: rule23
  }, {
    start: 42818,
    length: 1,
    convRule: rule22
  }, {
    start: 42819,
    length: 1,
    convRule: rule23
  }, {
    start: 42820,
    length: 1,
    convRule: rule22
  }, {
    start: 42821,
    length: 1,
    convRule: rule23
  }, {
    start: 42822,
    length: 1,
    convRule: rule22
  }, {
    start: 42823,
    length: 1,
    convRule: rule23
  }, {
    start: 42824,
    length: 1,
    convRule: rule22
  }, {
    start: 42825,
    length: 1,
    convRule: rule23
  }, {
    start: 42826,
    length: 1,
    convRule: rule22
  }, {
    start: 42827,
    length: 1,
    convRule: rule23
  }, {
    start: 42828,
    length: 1,
    convRule: rule22
  }, {
    start: 42829,
    length: 1,
    convRule: rule23
  }, {
    start: 42830,
    length: 1,
    convRule: rule22
  }, {
    start: 42831,
    length: 1,
    convRule: rule23
  }, {
    start: 42832,
    length: 1,
    convRule: rule22
  }, {
    start: 42833,
    length: 1,
    convRule: rule23
  }, {
    start: 42834,
    length: 1,
    convRule: rule22
  }, {
    start: 42835,
    length: 1,
    convRule: rule23
  }, {
    start: 42836,
    length: 1,
    convRule: rule22
  }, {
    start: 42837,
    length: 1,
    convRule: rule23
  }, {
    start: 42838,
    length: 1,
    convRule: rule22
  }, {
    start: 42839,
    length: 1,
    convRule: rule23
  }, {
    start: 42840,
    length: 1,
    convRule: rule22
  }, {
    start: 42841,
    length: 1,
    convRule: rule23
  }, {
    start: 42842,
    length: 1,
    convRule: rule22
  }, {
    start: 42843,
    length: 1,
    convRule: rule23
  }, {
    start: 42844,
    length: 1,
    convRule: rule22
  }, {
    start: 42845,
    length: 1,
    convRule: rule23
  }, {
    start: 42846,
    length: 1,
    convRule: rule22
  }, {
    start: 42847,
    length: 1,
    convRule: rule23
  }, {
    start: 42848,
    length: 1,
    convRule: rule22
  }, {
    start: 42849,
    length: 1,
    convRule: rule23
  }, {
    start: 42850,
    length: 1,
    convRule: rule22
  }, {
    start: 42851,
    length: 1,
    convRule: rule23
  }, {
    start: 42852,
    length: 1,
    convRule: rule22
  }, {
    start: 42853,
    length: 1,
    convRule: rule23
  }, {
    start: 42854,
    length: 1,
    convRule: rule22
  }, {
    start: 42855,
    length: 1,
    convRule: rule23
  }, {
    start: 42856,
    length: 1,
    convRule: rule22
  }, {
    start: 42857,
    length: 1,
    convRule: rule23
  }, {
    start: 42858,
    length: 1,
    convRule: rule22
  }, {
    start: 42859,
    length: 1,
    convRule: rule23
  }, {
    start: 42860,
    length: 1,
    convRule: rule22
  }, {
    start: 42861,
    length: 1,
    convRule: rule23
  }, {
    start: 42862,
    length: 1,
    convRule: rule22
  }, {
    start: 42863,
    length: 1,
    convRule: rule23
  }, {
    start: 42864,
    length: 1,
    convRule: rule91
  }, {
    start: 42865,
    length: 8,
    convRule: rule20
  }, {
    start: 42873,
    length: 1,
    convRule: rule22
  }, {
    start: 42874,
    length: 1,
    convRule: rule23
  }, {
    start: 42875,
    length: 1,
    convRule: rule22
  }, {
    start: 42876,
    length: 1,
    convRule: rule23
  }, {
    start: 42877,
    length: 1,
    convRule: rule183
  }, {
    start: 42878,
    length: 1,
    convRule: rule22
  }, {
    start: 42879,
    length: 1,
    convRule: rule23
  }, {
    start: 42880,
    length: 1,
    convRule: rule22
  }, {
    start: 42881,
    length: 1,
    convRule: rule23
  }, {
    start: 42882,
    length: 1,
    convRule: rule22
  }, {
    start: 42883,
    length: 1,
    convRule: rule23
  }, {
    start: 42884,
    length: 1,
    convRule: rule22
  }, {
    start: 42885,
    length: 1,
    convRule: rule23
  }, {
    start: 42886,
    length: 1,
    convRule: rule22
  }, {
    start: 42887,
    length: 1,
    convRule: rule23
  }, {
    start: 42888,
    length: 1,
    convRule: rule91
  }, {
    start: 42889,
    length: 2,
    convRule: rule10
  }, {
    start: 42891,
    length: 1,
    convRule: rule22
  }, {
    start: 42892,
    length: 1,
    convRule: rule23
  }, {
    start: 42893,
    length: 1,
    convRule: rule184
  }, {
    start: 42894,
    length: 1,
    convRule: rule20
  }, {
    start: 42895,
    length: 1,
    convRule: rule14
  }, {
    start: 42896,
    length: 1,
    convRule: rule22
  }, {
    start: 42897,
    length: 1,
    convRule: rule23
  }, {
    start: 42898,
    length: 1,
    convRule: rule22
  }, {
    start: 42899,
    length: 1,
    convRule: rule23
  }, {
    start: 42900,
    length: 1,
    convRule: rule185
  }, {
    start: 42901,
    length: 1,
    convRule: rule20
  }, {
    start: 42902,
    length: 1,
    convRule: rule22
  }, {
    start: 42903,
    length: 1,
    convRule: rule23
  }, {
    start: 42904,
    length: 1,
    convRule: rule22
  }, {
    start: 42905,
    length: 1,
    convRule: rule23
  }, {
    start: 42906,
    length: 1,
    convRule: rule22
  }, {
    start: 42907,
    length: 1,
    convRule: rule23
  }, {
    start: 42908,
    length: 1,
    convRule: rule22
  }, {
    start: 42909,
    length: 1,
    convRule: rule23
  }, {
    start: 42910,
    length: 1,
    convRule: rule22
  }, {
    start: 42911,
    length: 1,
    convRule: rule23
  }, {
    start: 42912,
    length: 1,
    convRule: rule22
  }, {
    start: 42913,
    length: 1,
    convRule: rule23
  }, {
    start: 42914,
    length: 1,
    convRule: rule22
  }, {
    start: 42915,
    length: 1,
    convRule: rule23
  }, {
    start: 42916,
    length: 1,
    convRule: rule22
  }, {
    start: 42917,
    length: 1,
    convRule: rule23
  }, {
    start: 42918,
    length: 1,
    convRule: rule22
  }, {
    start: 42919,
    length: 1,
    convRule: rule23
  }, {
    start: 42920,
    length: 1,
    convRule: rule22
  }, {
    start: 42921,
    length: 1,
    convRule: rule23
  }, {
    start: 42922,
    length: 1,
    convRule: rule186
  }, {
    start: 42923,
    length: 1,
    convRule: rule187
  }, {
    start: 42924,
    length: 1,
    convRule: rule188
  }, {
    start: 42925,
    length: 1,
    convRule: rule189
  }, {
    start: 42926,
    length: 1,
    convRule: rule186
  }, {
    start: 42927,
    length: 1,
    convRule: rule20
  }, {
    start: 42928,
    length: 1,
    convRule: rule190
  }, {
    start: 42929,
    length: 1,
    convRule: rule191
  }, {
    start: 42930,
    length: 1,
    convRule: rule192
  }, {
    start: 42931,
    length: 1,
    convRule: rule193
  }, {
    start: 42932,
    length: 1,
    convRule: rule22
  }, {
    start: 42933,
    length: 1,
    convRule: rule23
  }, {
    start: 42934,
    length: 1,
    convRule: rule22
  }, {
    start: 42935,
    length: 1,
    convRule: rule23
  }, {
    start: 42936,
    length: 1,
    convRule: rule22
  }, {
    start: 42937,
    length: 1,
    convRule: rule23
  }, {
    start: 42938,
    length: 1,
    convRule: rule22
  }, {
    start: 42939,
    length: 1,
    convRule: rule23
  }, {
    start: 42940,
    length: 1,
    convRule: rule22
  }, {
    start: 42941,
    length: 1,
    convRule: rule23
  }, {
    start: 42942,
    length: 1,
    convRule: rule22
  }, {
    start: 42943,
    length: 1,
    convRule: rule23
  }, {
    start: 42946,
    length: 1,
    convRule: rule22
  }, {
    start: 42947,
    length: 1,
    convRule: rule23
  }, {
    start: 42948,
    length: 1,
    convRule: rule194
  }, {
    start: 42949,
    length: 1,
    convRule: rule195
  }, {
    start: 42950,
    length: 1,
    convRule: rule196
  }, {
    start: 42951,
    length: 1,
    convRule: rule22
  }, {
    start: 42952,
    length: 1,
    convRule: rule23
  }, {
    start: 42953,
    length: 1,
    convRule: rule22
  }, {
    start: 42954,
    length: 1,
    convRule: rule23
  }, {
    start: 42997,
    length: 1,
    convRule: rule22
  }, {
    start: 42998,
    length: 1,
    convRule: rule23
  }, {
    start: 42999,
    length: 1,
    convRule: rule14
  }, {
    start: 43e3,
    length: 2,
    convRule: rule91
  }, {
    start: 43002,
    length: 1,
    convRule: rule20
  }, {
    start: 43003,
    length: 7,
    convRule: rule14
  }, {
    start: 43010,
    length: 1,
    convRule: rule92
  }, {
    start: 43011,
    length: 3,
    convRule: rule14
  }, {
    start: 43014,
    length: 1,
    convRule: rule92
  }, {
    start: 43015,
    length: 4,
    convRule: rule14
  }, {
    start: 43019,
    length: 1,
    convRule: rule92
  }, {
    start: 43020,
    length: 23,
    convRule: rule14
  }, {
    start: 43043,
    length: 2,
    convRule: rule124
  }, {
    start: 43045,
    length: 2,
    convRule: rule92
  }, {
    start: 43047,
    length: 1,
    convRule: rule124
  }, {
    start: 43048,
    length: 4,
    convRule: rule13
  }, {
    start: 43052,
    length: 1,
    convRule: rule92
  }, {
    start: 43056,
    length: 6,
    convRule: rule17
  }, {
    start: 43062,
    length: 2,
    convRule: rule13
  }, {
    start: 43064,
    length: 1,
    convRule: rule3
  }, {
    start: 43065,
    length: 1,
    convRule: rule13
  }, {
    start: 43072,
    length: 52,
    convRule: rule14
  }, {
    start: 43124,
    length: 4,
    convRule: rule2
  }, {
    start: 43136,
    length: 2,
    convRule: rule124
  }, {
    start: 43138,
    length: 50,
    convRule: rule14
  }, {
    start: 43188,
    length: 16,
    convRule: rule124
  }, {
    start: 43204,
    length: 2,
    convRule: rule92
  }, {
    start: 43214,
    length: 2,
    convRule: rule2
  }, {
    start: 43216,
    length: 10,
    convRule: rule8
  }, {
    start: 43232,
    length: 18,
    convRule: rule92
  }, {
    start: 43250,
    length: 6,
    convRule: rule14
  }, {
    start: 43256,
    length: 3,
    convRule: rule2
  }, {
    start: 43259,
    length: 1,
    convRule: rule14
  }, {
    start: 43260,
    length: 1,
    convRule: rule2
  }, {
    start: 43261,
    length: 2,
    convRule: rule14
  }, {
    start: 43263,
    length: 1,
    convRule: rule92
  }, {
    start: 43264,
    length: 10,
    convRule: rule8
  }, {
    start: 43274,
    length: 28,
    convRule: rule14
  }, {
    start: 43302,
    length: 8,
    convRule: rule92
  }, {
    start: 43310,
    length: 2,
    convRule: rule2
  }, {
    start: 43312,
    length: 23,
    convRule: rule14
  }, {
    start: 43335,
    length: 11,
    convRule: rule92
  }, {
    start: 43346,
    length: 2,
    convRule: rule124
  }, {
    start: 43359,
    length: 1,
    convRule: rule2
  }, {
    start: 43360,
    length: 29,
    convRule: rule14
  }, {
    start: 43392,
    length: 3,
    convRule: rule92
  }, {
    start: 43395,
    length: 1,
    convRule: rule124
  }, {
    start: 43396,
    length: 47,
    convRule: rule14
  }, {
    start: 43443,
    length: 1,
    convRule: rule92
  }, {
    start: 43444,
    length: 2,
    convRule: rule124
  }, {
    start: 43446,
    length: 4,
    convRule: rule92
  }, {
    start: 43450,
    length: 2,
    convRule: rule124
  }, {
    start: 43452,
    length: 2,
    convRule: rule92
  }, {
    start: 43454,
    length: 3,
    convRule: rule124
  }, {
    start: 43457,
    length: 13,
    convRule: rule2
  }, {
    start: 43471,
    length: 1,
    convRule: rule91
  }, {
    start: 43472,
    length: 10,
    convRule: rule8
  }, {
    start: 43486,
    length: 2,
    convRule: rule2
  }, {
    start: 43488,
    length: 5,
    convRule: rule14
  }, {
    start: 43493,
    length: 1,
    convRule: rule92
  }, {
    start: 43494,
    length: 1,
    convRule: rule91
  }, {
    start: 43495,
    length: 9,
    convRule: rule14
  }, {
    start: 43504,
    length: 10,
    convRule: rule8
  }, {
    start: 43514,
    length: 5,
    convRule: rule14
  }, {
    start: 43520,
    length: 41,
    convRule: rule14
  }, {
    start: 43561,
    length: 6,
    convRule: rule92
  }, {
    start: 43567,
    length: 2,
    convRule: rule124
  }, {
    start: 43569,
    length: 2,
    convRule: rule92
  }, {
    start: 43571,
    length: 2,
    convRule: rule124
  }, {
    start: 43573,
    length: 2,
    convRule: rule92
  }, {
    start: 43584,
    length: 3,
    convRule: rule14
  }, {
    start: 43587,
    length: 1,
    convRule: rule92
  }, {
    start: 43588,
    length: 8,
    convRule: rule14
  }, {
    start: 43596,
    length: 1,
    convRule: rule92
  }, {
    start: 43597,
    length: 1,
    convRule: rule124
  }, {
    start: 43600,
    length: 10,
    convRule: rule8
  }, {
    start: 43612,
    length: 4,
    convRule: rule2
  }, {
    start: 43616,
    length: 16,
    convRule: rule14
  }, {
    start: 43632,
    length: 1,
    convRule: rule91
  }, {
    start: 43633,
    length: 6,
    convRule: rule14
  }, {
    start: 43639,
    length: 3,
    convRule: rule13
  }, {
    start: 43642,
    length: 1,
    convRule: rule14
  }, {
    start: 43643,
    length: 1,
    convRule: rule124
  }, {
    start: 43644,
    length: 1,
    convRule: rule92
  }, {
    start: 43645,
    length: 1,
    convRule: rule124
  }, {
    start: 43646,
    length: 50,
    convRule: rule14
  }, {
    start: 43696,
    length: 1,
    convRule: rule92
  }, {
    start: 43697,
    length: 1,
    convRule: rule14
  }, {
    start: 43698,
    length: 3,
    convRule: rule92
  }, {
    start: 43701,
    length: 2,
    convRule: rule14
  }, {
    start: 43703,
    length: 2,
    convRule: rule92
  }, {
    start: 43705,
    length: 5,
    convRule: rule14
  }, {
    start: 43710,
    length: 2,
    convRule: rule92
  }, {
    start: 43712,
    length: 1,
    convRule: rule14
  }, {
    start: 43713,
    length: 1,
    convRule: rule92
  }, {
    start: 43714,
    length: 1,
    convRule: rule14
  }, {
    start: 43739,
    length: 2,
    convRule: rule14
  }, {
    start: 43741,
    length: 1,
    convRule: rule91
  }, {
    start: 43742,
    length: 2,
    convRule: rule2
  }, {
    start: 43744,
    length: 11,
    convRule: rule14
  }, {
    start: 43755,
    length: 1,
    convRule: rule124
  }, {
    start: 43756,
    length: 2,
    convRule: rule92
  }, {
    start: 43758,
    length: 2,
    convRule: rule124
  }, {
    start: 43760,
    length: 2,
    convRule: rule2
  }, {
    start: 43762,
    length: 1,
    convRule: rule14
  }, {
    start: 43763,
    length: 2,
    convRule: rule91
  }, {
    start: 43765,
    length: 1,
    convRule: rule124
  }, {
    start: 43766,
    length: 1,
    convRule: rule92
  }, {
    start: 43777,
    length: 6,
    convRule: rule14
  }, {
    start: 43785,
    length: 6,
    convRule: rule14
  }, {
    start: 43793,
    length: 6,
    convRule: rule14
  }, {
    start: 43808,
    length: 7,
    convRule: rule14
  }, {
    start: 43816,
    length: 7,
    convRule: rule14
  }, {
    start: 43824,
    length: 35,
    convRule: rule20
  }, {
    start: 43859,
    length: 1,
    convRule: rule197
  }, {
    start: 43860,
    length: 7,
    convRule: rule20
  }, {
    start: 43867,
    length: 1,
    convRule: rule10
  }, {
    start: 43868,
    length: 4,
    convRule: rule91
  }, {
    start: 43872,
    length: 9,
    convRule: rule20
  }, {
    start: 43881,
    length: 1,
    convRule: rule91
  }, {
    start: 43882,
    length: 2,
    convRule: rule10
  }, {
    start: 43888,
    length: 80,
    convRule: rule198
  }, {
    start: 43968,
    length: 35,
    convRule: rule14
  }, {
    start: 44003,
    length: 2,
    convRule: rule124
  }, {
    start: 44005,
    length: 1,
    convRule: rule92
  }, {
    start: 44006,
    length: 2,
    convRule: rule124
  }, {
    start: 44008,
    length: 1,
    convRule: rule92
  }, {
    start: 44009,
    length: 2,
    convRule: rule124
  }, {
    start: 44011,
    length: 1,
    convRule: rule2
  }, {
    start: 44012,
    length: 1,
    convRule: rule124
  }, {
    start: 44013,
    length: 1,
    convRule: rule92
  }, {
    start: 44016,
    length: 10,
    convRule: rule8
  }, {
    start: 44032,
    length: 11172,
    convRule: rule14
  }, {
    start: 55216,
    length: 23,
    convRule: rule14
  }, {
    start: 55243,
    length: 49,
    convRule: rule14
  }, {
    start: 55296,
    length: 896,
    convRule: rule199
  }, {
    start: 56192,
    length: 128,
    convRule: rule199
  }, {
    start: 56320,
    length: 1024,
    convRule: rule199
  }, {
    start: 57344,
    length: 6400,
    convRule: rule200
  }, {
    start: 63744,
    length: 366,
    convRule: rule14
  }, {
    start: 64112,
    length: 106,
    convRule: rule14
  }, {
    start: 64256,
    length: 7,
    convRule: rule20
  }, {
    start: 64275,
    length: 5,
    convRule: rule20
  }, {
    start: 64285,
    length: 1,
    convRule: rule14
  }, {
    start: 64286,
    length: 1,
    convRule: rule92
  }, {
    start: 64287,
    length: 10,
    convRule: rule14
  }, {
    start: 64297,
    length: 1,
    convRule: rule6
  }, {
    start: 64298,
    length: 13,
    convRule: rule14
  }, {
    start: 64312,
    length: 5,
    convRule: rule14
  }, {
    start: 64318,
    length: 1,
    convRule: rule14
  }, {
    start: 64320,
    length: 2,
    convRule: rule14
  }, {
    start: 64323,
    length: 2,
    convRule: rule14
  }, {
    start: 64326,
    length: 108,
    convRule: rule14
  }, {
    start: 64434,
    length: 16,
    convRule: rule10
  }, {
    start: 64467,
    length: 363,
    convRule: rule14
  }, {
    start: 64830,
    length: 1,
    convRule: rule5
  }, {
    start: 64831,
    length: 1,
    convRule: rule4
  }, {
    start: 64848,
    length: 64,
    convRule: rule14
  }, {
    start: 64914,
    length: 54,
    convRule: rule14
  }, {
    start: 65008,
    length: 12,
    convRule: rule14
  }, {
    start: 65020,
    length: 1,
    convRule: rule3
  }, {
    start: 65021,
    length: 1,
    convRule: rule13
  }, {
    start: 65024,
    length: 16,
    convRule: rule92
  }, {
    start: 65040,
    length: 7,
    convRule: rule2
  }, {
    start: 65047,
    length: 1,
    convRule: rule4
  }, {
    start: 65048,
    length: 1,
    convRule: rule5
  }, {
    start: 65049,
    length: 1,
    convRule: rule2
  }, {
    start: 65056,
    length: 16,
    convRule: rule92
  }, {
    start: 65072,
    length: 1,
    convRule: rule2
  }, {
    start: 65073,
    length: 2,
    convRule: rule7
  }, {
    start: 65075,
    length: 2,
    convRule: rule11
  }, {
    start: 65077,
    length: 1,
    convRule: rule4
  }, {
    start: 65078,
    length: 1,
    convRule: rule5
  }, {
    start: 65079,
    length: 1,
    convRule: rule4
  }, {
    start: 65080,
    length: 1,
    convRule: rule5
  }, {
    start: 65081,
    length: 1,
    convRule: rule4
  }, {
    start: 65082,
    length: 1,
    convRule: rule5
  }, {
    start: 65083,
    length: 1,
    convRule: rule4
  }, {
    start: 65084,
    length: 1,
    convRule: rule5
  }, {
    start: 65085,
    length: 1,
    convRule: rule4
  }, {
    start: 65086,
    length: 1,
    convRule: rule5
  }, {
    start: 65087,
    length: 1,
    convRule: rule4
  }, {
    start: 65088,
    length: 1,
    convRule: rule5
  }, {
    start: 65089,
    length: 1,
    convRule: rule4
  }, {
    start: 65090,
    length: 1,
    convRule: rule5
  }, {
    start: 65091,
    length: 1,
    convRule: rule4
  }, {
    start: 65092,
    length: 1,
    convRule: rule5
  }, {
    start: 65093,
    length: 2,
    convRule: rule2
  }, {
    start: 65095,
    length: 1,
    convRule: rule4
  }, {
    start: 65096,
    length: 1,
    convRule: rule5
  }, {
    start: 65097,
    length: 4,
    convRule: rule2
  }, {
    start: 65101,
    length: 3,
    convRule: rule11
  }, {
    start: 65104,
    length: 3,
    convRule: rule2
  }, {
    start: 65108,
    length: 4,
    convRule: rule2
  }, {
    start: 65112,
    length: 1,
    convRule: rule7
  }, {
    start: 65113,
    length: 1,
    convRule: rule4
  }, {
    start: 65114,
    length: 1,
    convRule: rule5
  }, {
    start: 65115,
    length: 1,
    convRule: rule4
  }, {
    start: 65116,
    length: 1,
    convRule: rule5
  }, {
    start: 65117,
    length: 1,
    convRule: rule4
  }, {
    start: 65118,
    length: 1,
    convRule: rule5
  }, {
    start: 65119,
    length: 3,
    convRule: rule2
  }, {
    start: 65122,
    length: 1,
    convRule: rule6
  }, {
    start: 65123,
    length: 1,
    convRule: rule7
  }, {
    start: 65124,
    length: 3,
    convRule: rule6
  }, {
    start: 65128,
    length: 1,
    convRule: rule2
  }, {
    start: 65129,
    length: 1,
    convRule: rule3
  }, {
    start: 65130,
    length: 2,
    convRule: rule2
  }, {
    start: 65136,
    length: 5,
    convRule: rule14
  }, {
    start: 65142,
    length: 135,
    convRule: rule14
  }, {
    start: 65279,
    length: 1,
    convRule: rule16
  }, {
    start: 65281,
    length: 3,
    convRule: rule2
  }, {
    start: 65284,
    length: 1,
    convRule: rule3
  }, {
    start: 65285,
    length: 3,
    convRule: rule2
  }, {
    start: 65288,
    length: 1,
    convRule: rule4
  }, {
    start: 65289,
    length: 1,
    convRule: rule5
  }, {
    start: 65290,
    length: 1,
    convRule: rule2
  }, {
    start: 65291,
    length: 1,
    convRule: rule6
  }, {
    start: 65292,
    length: 1,
    convRule: rule2
  }, {
    start: 65293,
    length: 1,
    convRule: rule7
  }, {
    start: 65294,
    length: 2,
    convRule: rule2
  }, {
    start: 65296,
    length: 10,
    convRule: rule8
  }, {
    start: 65306,
    length: 2,
    convRule: rule2
  }, {
    start: 65308,
    length: 3,
    convRule: rule6
  }, {
    start: 65311,
    length: 2,
    convRule: rule2
  }, {
    start: 65313,
    length: 26,
    convRule: rule9
  }, {
    start: 65339,
    length: 1,
    convRule: rule4
  }, {
    start: 65340,
    length: 1,
    convRule: rule2
  }, {
    start: 65341,
    length: 1,
    convRule: rule5
  }, {
    start: 65342,
    length: 1,
    convRule: rule10
  }, {
    start: 65343,
    length: 1,
    convRule: rule11
  }, {
    start: 65344,
    length: 1,
    convRule: rule10
  }, {
    start: 65345,
    length: 26,
    convRule: rule12
  }, {
    start: 65371,
    length: 1,
    convRule: rule4
  }, {
    start: 65372,
    length: 1,
    convRule: rule6
  }, {
    start: 65373,
    length: 1,
    convRule: rule5
  }, {
    start: 65374,
    length: 1,
    convRule: rule6
  }, {
    start: 65375,
    length: 1,
    convRule: rule4
  }, {
    start: 65376,
    length: 1,
    convRule: rule5
  }, {
    start: 65377,
    length: 1,
    convRule: rule2
  }, {
    start: 65378,
    length: 1,
    convRule: rule4
  }, {
    start: 65379,
    length: 1,
    convRule: rule5
  }, {
    start: 65380,
    length: 2,
    convRule: rule2
  }, {
    start: 65382,
    length: 10,
    convRule: rule14
  }, {
    start: 65392,
    length: 1,
    convRule: rule91
  }, {
    start: 65393,
    length: 45,
    convRule: rule14
  }, {
    start: 65438,
    length: 2,
    convRule: rule91
  }, {
    start: 65440,
    length: 31,
    convRule: rule14
  }, {
    start: 65474,
    length: 6,
    convRule: rule14
  }, {
    start: 65482,
    length: 6,
    convRule: rule14
  }, {
    start: 65490,
    length: 6,
    convRule: rule14
  }, {
    start: 65498,
    length: 3,
    convRule: rule14
  }, {
    start: 65504,
    length: 2,
    convRule: rule3
  }, {
    start: 65506,
    length: 1,
    convRule: rule6
  }, {
    start: 65507,
    length: 1,
    convRule: rule10
  }, {
    start: 65508,
    length: 1,
    convRule: rule13
  }, {
    start: 65509,
    length: 2,
    convRule: rule3
  }, {
    start: 65512,
    length: 1,
    convRule: rule13
  }, {
    start: 65513,
    length: 4,
    convRule: rule6
  }, {
    start: 65517,
    length: 2,
    convRule: rule13
  }, {
    start: 65529,
    length: 3,
    convRule: rule16
  }, {
    start: 65532,
    length: 2,
    convRule: rule13
  }, {
    start: 65536,
    length: 12,
    convRule: rule14
  }, {
    start: 65549,
    length: 26,
    convRule: rule14
  }, {
    start: 65576,
    length: 19,
    convRule: rule14
  }, {
    start: 65596,
    length: 2,
    convRule: rule14
  }, {
    start: 65599,
    length: 15,
    convRule: rule14
  }, {
    start: 65616,
    length: 14,
    convRule: rule14
  }, {
    start: 65664,
    length: 123,
    convRule: rule14
  }, {
    start: 65792,
    length: 3,
    convRule: rule2
  }, {
    start: 65799,
    length: 45,
    convRule: rule17
  }, {
    start: 65847,
    length: 9,
    convRule: rule13
  }, {
    start: 65856,
    length: 53,
    convRule: rule128
  }, {
    start: 65909,
    length: 4,
    convRule: rule17
  }, {
    start: 65913,
    length: 17,
    convRule: rule13
  }, {
    start: 65930,
    length: 2,
    convRule: rule17
  }, {
    start: 65932,
    length: 3,
    convRule: rule13
  }, {
    start: 65936,
    length: 13,
    convRule: rule13
  }, {
    start: 65952,
    length: 1,
    convRule: rule13
  }, {
    start: 66e3,
    length: 45,
    convRule: rule13
  }, {
    start: 66045,
    length: 1,
    convRule: rule92
  }, {
    start: 66176,
    length: 29,
    convRule: rule14
  }, {
    start: 66208,
    length: 49,
    convRule: rule14
  }, {
    start: 66272,
    length: 1,
    convRule: rule92
  }, {
    start: 66273,
    length: 27,
    convRule: rule17
  }, {
    start: 66304,
    length: 32,
    convRule: rule14
  }, {
    start: 66336,
    length: 4,
    convRule: rule17
  }, {
    start: 66349,
    length: 20,
    convRule: rule14
  }, {
    start: 66369,
    length: 1,
    convRule: rule128
  }, {
    start: 66370,
    length: 8,
    convRule: rule14
  }, {
    start: 66378,
    length: 1,
    convRule: rule128
  }, {
    start: 66384,
    length: 38,
    convRule: rule14
  }, {
    start: 66422,
    length: 5,
    convRule: rule92
  }, {
    start: 66432,
    length: 30,
    convRule: rule14
  }, {
    start: 66463,
    length: 1,
    convRule: rule2
  }, {
    start: 66464,
    length: 36,
    convRule: rule14
  }, {
    start: 66504,
    length: 8,
    convRule: rule14
  }, {
    start: 66512,
    length: 1,
    convRule: rule2
  }, {
    start: 66513,
    length: 5,
    convRule: rule128
  }, {
    start: 66560,
    length: 40,
    convRule: rule201
  }, {
    start: 66600,
    length: 40,
    convRule: rule202
  }, {
    start: 66640,
    length: 78,
    convRule: rule14
  }, {
    start: 66720,
    length: 10,
    convRule: rule8
  }, {
    start: 66736,
    length: 36,
    convRule: rule201
  }, {
    start: 66776,
    length: 36,
    convRule: rule202
  }, {
    start: 66816,
    length: 40,
    convRule: rule14
  }, {
    start: 66864,
    length: 52,
    convRule: rule14
  }, {
    start: 66927,
    length: 1,
    convRule: rule2
  }, {
    start: 67072,
    length: 311,
    convRule: rule14
  }, {
    start: 67392,
    length: 22,
    convRule: rule14
  }, {
    start: 67424,
    length: 8,
    convRule: rule14
  }, {
    start: 67584,
    length: 6,
    convRule: rule14
  }, {
    start: 67592,
    length: 1,
    convRule: rule14
  }, {
    start: 67594,
    length: 44,
    convRule: rule14
  }, {
    start: 67639,
    length: 2,
    convRule: rule14
  }, {
    start: 67644,
    length: 1,
    convRule: rule14
  }, {
    start: 67647,
    length: 23,
    convRule: rule14
  }, {
    start: 67671,
    length: 1,
    convRule: rule2
  }, {
    start: 67672,
    length: 8,
    convRule: rule17
  }, {
    start: 67680,
    length: 23,
    convRule: rule14
  }, {
    start: 67703,
    length: 2,
    convRule: rule13
  }, {
    start: 67705,
    length: 7,
    convRule: rule17
  }, {
    start: 67712,
    length: 31,
    convRule: rule14
  }, {
    start: 67751,
    length: 9,
    convRule: rule17
  }, {
    start: 67808,
    length: 19,
    convRule: rule14
  }, {
    start: 67828,
    length: 2,
    convRule: rule14
  }, {
    start: 67835,
    length: 5,
    convRule: rule17
  }, {
    start: 67840,
    length: 22,
    convRule: rule14
  }, {
    start: 67862,
    length: 6,
    convRule: rule17
  }, {
    start: 67871,
    length: 1,
    convRule: rule2
  }, {
    start: 67872,
    length: 26,
    convRule: rule14
  }, {
    start: 67903,
    length: 1,
    convRule: rule2
  }, {
    start: 67968,
    length: 56,
    convRule: rule14
  }, {
    start: 68028,
    length: 2,
    convRule: rule17
  }, {
    start: 68030,
    length: 2,
    convRule: rule14
  }, {
    start: 68032,
    length: 16,
    convRule: rule17
  }, {
    start: 68050,
    length: 46,
    convRule: rule17
  }, {
    start: 68096,
    length: 1,
    convRule: rule14
  }, {
    start: 68097,
    length: 3,
    convRule: rule92
  }, {
    start: 68101,
    length: 2,
    convRule: rule92
  }, {
    start: 68108,
    length: 4,
    convRule: rule92
  }, {
    start: 68112,
    length: 4,
    convRule: rule14
  }, {
    start: 68117,
    length: 3,
    convRule: rule14
  }, {
    start: 68121,
    length: 29,
    convRule: rule14
  }, {
    start: 68152,
    length: 3,
    convRule: rule92
  }, {
    start: 68159,
    length: 1,
    convRule: rule92
  }, {
    start: 68160,
    length: 9,
    convRule: rule17
  }, {
    start: 68176,
    length: 9,
    convRule: rule2
  }, {
    start: 68192,
    length: 29,
    convRule: rule14
  }, {
    start: 68221,
    length: 2,
    convRule: rule17
  }, {
    start: 68223,
    length: 1,
    convRule: rule2
  }, {
    start: 68224,
    length: 29,
    convRule: rule14
  }, {
    start: 68253,
    length: 3,
    convRule: rule17
  }, {
    start: 68288,
    length: 8,
    convRule: rule14
  }, {
    start: 68296,
    length: 1,
    convRule: rule13
  }, {
    start: 68297,
    length: 28,
    convRule: rule14
  }, {
    start: 68325,
    length: 2,
    convRule: rule92
  }, {
    start: 68331,
    length: 5,
    convRule: rule17
  }, {
    start: 68336,
    length: 7,
    convRule: rule2
  }, {
    start: 68352,
    length: 54,
    convRule: rule14
  }, {
    start: 68409,
    length: 7,
    convRule: rule2
  }, {
    start: 68416,
    length: 22,
    convRule: rule14
  }, {
    start: 68440,
    length: 8,
    convRule: rule17
  }, {
    start: 68448,
    length: 19,
    convRule: rule14
  }, {
    start: 68472,
    length: 8,
    convRule: rule17
  }, {
    start: 68480,
    length: 18,
    convRule: rule14
  }, {
    start: 68505,
    length: 4,
    convRule: rule2
  }, {
    start: 68521,
    length: 7,
    convRule: rule17
  }, {
    start: 68608,
    length: 73,
    convRule: rule14
  }, {
    start: 68736,
    length: 51,
    convRule: rule97
  }, {
    start: 68800,
    length: 51,
    convRule: rule102
  }, {
    start: 68858,
    length: 6,
    convRule: rule17
  }, {
    start: 68864,
    length: 36,
    convRule: rule14
  }, {
    start: 68900,
    length: 4,
    convRule: rule92
  }, {
    start: 68912,
    length: 10,
    convRule: rule8
  }, {
    start: 69216,
    length: 31,
    convRule: rule17
  }, {
    start: 69248,
    length: 42,
    convRule: rule14
  }, {
    start: 69291,
    length: 2,
    convRule: rule92
  }, {
    start: 69293,
    length: 1,
    convRule: rule7
  }, {
    start: 69296,
    length: 2,
    convRule: rule14
  }, {
    start: 69376,
    length: 29,
    convRule: rule14
  }, {
    start: 69405,
    length: 10,
    convRule: rule17
  }, {
    start: 69415,
    length: 1,
    convRule: rule14
  }, {
    start: 69424,
    length: 22,
    convRule: rule14
  }, {
    start: 69446,
    length: 11,
    convRule: rule92
  }, {
    start: 69457,
    length: 4,
    convRule: rule17
  }, {
    start: 69461,
    length: 5,
    convRule: rule2
  }, {
    start: 69552,
    length: 21,
    convRule: rule14
  }, {
    start: 69573,
    length: 7,
    convRule: rule17
  }, {
    start: 69600,
    length: 23,
    convRule: rule14
  }, {
    start: 69632,
    length: 1,
    convRule: rule124
  }, {
    start: 69633,
    length: 1,
    convRule: rule92
  }, {
    start: 69634,
    length: 1,
    convRule: rule124
  }, {
    start: 69635,
    length: 53,
    convRule: rule14
  }, {
    start: 69688,
    length: 15,
    convRule: rule92
  }, {
    start: 69703,
    length: 7,
    convRule: rule2
  }, {
    start: 69714,
    length: 20,
    convRule: rule17
  }, {
    start: 69734,
    length: 10,
    convRule: rule8
  }, {
    start: 69759,
    length: 3,
    convRule: rule92
  }, {
    start: 69762,
    length: 1,
    convRule: rule124
  }, {
    start: 69763,
    length: 45,
    convRule: rule14
  }, {
    start: 69808,
    length: 3,
    convRule: rule124
  }, {
    start: 69811,
    length: 4,
    convRule: rule92
  }, {
    start: 69815,
    length: 2,
    convRule: rule124
  }, {
    start: 69817,
    length: 2,
    convRule: rule92
  }, {
    start: 69819,
    length: 2,
    convRule: rule2
  }, {
    start: 69821,
    length: 1,
    convRule: rule16
  }, {
    start: 69822,
    length: 4,
    convRule: rule2
  }, {
    start: 69837,
    length: 1,
    convRule: rule16
  }, {
    start: 69840,
    length: 25,
    convRule: rule14
  }, {
    start: 69872,
    length: 10,
    convRule: rule8
  }, {
    start: 69888,
    length: 3,
    convRule: rule92
  }, {
    start: 69891,
    length: 36,
    convRule: rule14
  }, {
    start: 69927,
    length: 5,
    convRule: rule92
  }, {
    start: 69932,
    length: 1,
    convRule: rule124
  }, {
    start: 69933,
    length: 8,
    convRule: rule92
  }, {
    start: 69942,
    length: 10,
    convRule: rule8
  }, {
    start: 69952,
    length: 4,
    convRule: rule2
  }, {
    start: 69956,
    length: 1,
    convRule: rule14
  }, {
    start: 69957,
    length: 2,
    convRule: rule124
  }, {
    start: 69959,
    length: 1,
    convRule: rule14
  }, {
    start: 69968,
    length: 35,
    convRule: rule14
  }, {
    start: 70003,
    length: 1,
    convRule: rule92
  }, {
    start: 70004,
    length: 2,
    convRule: rule2
  }, {
    start: 70006,
    length: 1,
    convRule: rule14
  }, {
    start: 70016,
    length: 2,
    convRule: rule92
  }, {
    start: 70018,
    length: 1,
    convRule: rule124
  }, {
    start: 70019,
    length: 48,
    convRule: rule14
  }, {
    start: 70067,
    length: 3,
    convRule: rule124
  }, {
    start: 70070,
    length: 9,
    convRule: rule92
  }, {
    start: 70079,
    length: 2,
    convRule: rule124
  }, {
    start: 70081,
    length: 4,
    convRule: rule14
  }, {
    start: 70085,
    length: 4,
    convRule: rule2
  }, {
    start: 70089,
    length: 4,
    convRule: rule92
  }, {
    start: 70093,
    length: 1,
    convRule: rule2
  }, {
    start: 70094,
    length: 1,
    convRule: rule124
  }, {
    start: 70095,
    length: 1,
    convRule: rule92
  }, {
    start: 70096,
    length: 10,
    convRule: rule8
  }, {
    start: 70106,
    length: 1,
    convRule: rule14
  }, {
    start: 70107,
    length: 1,
    convRule: rule2
  }, {
    start: 70108,
    length: 1,
    convRule: rule14
  }, {
    start: 70109,
    length: 3,
    convRule: rule2
  }, {
    start: 70113,
    length: 20,
    convRule: rule17
  }, {
    start: 70144,
    length: 18,
    convRule: rule14
  }, {
    start: 70163,
    length: 25,
    convRule: rule14
  }, {
    start: 70188,
    length: 3,
    convRule: rule124
  }, {
    start: 70191,
    length: 3,
    convRule: rule92
  }, {
    start: 70194,
    length: 2,
    convRule: rule124
  }, {
    start: 70196,
    length: 1,
    convRule: rule92
  }, {
    start: 70197,
    length: 1,
    convRule: rule124
  }, {
    start: 70198,
    length: 2,
    convRule: rule92
  }, {
    start: 70200,
    length: 6,
    convRule: rule2
  }, {
    start: 70206,
    length: 1,
    convRule: rule92
  }, {
    start: 70272,
    length: 7,
    convRule: rule14
  }, {
    start: 70280,
    length: 1,
    convRule: rule14
  }, {
    start: 70282,
    length: 4,
    convRule: rule14
  }, {
    start: 70287,
    length: 15,
    convRule: rule14
  }, {
    start: 70303,
    length: 10,
    convRule: rule14
  }, {
    start: 70313,
    length: 1,
    convRule: rule2
  }, {
    start: 70320,
    length: 47,
    convRule: rule14
  }, {
    start: 70367,
    length: 1,
    convRule: rule92
  }, {
    start: 70368,
    length: 3,
    convRule: rule124
  }, {
    start: 70371,
    length: 8,
    convRule: rule92
  }, {
    start: 70384,
    length: 10,
    convRule: rule8
  }, {
    start: 70400,
    length: 2,
    convRule: rule92
  }, {
    start: 70402,
    length: 2,
    convRule: rule124
  }, {
    start: 70405,
    length: 8,
    convRule: rule14
  }, {
    start: 70415,
    length: 2,
    convRule: rule14
  }, {
    start: 70419,
    length: 22,
    convRule: rule14
  }, {
    start: 70442,
    length: 7,
    convRule: rule14
  }, {
    start: 70450,
    length: 2,
    convRule: rule14
  }, {
    start: 70453,
    length: 5,
    convRule: rule14
  }, {
    start: 70459,
    length: 2,
    convRule: rule92
  }, {
    start: 70461,
    length: 1,
    convRule: rule14
  }, {
    start: 70462,
    length: 2,
    convRule: rule124
  }, {
    start: 70464,
    length: 1,
    convRule: rule92
  }, {
    start: 70465,
    length: 4,
    convRule: rule124
  }, {
    start: 70471,
    length: 2,
    convRule: rule124
  }, {
    start: 70475,
    length: 3,
    convRule: rule124
  }, {
    start: 70480,
    length: 1,
    convRule: rule14
  }, {
    start: 70487,
    length: 1,
    convRule: rule124
  }, {
    start: 70493,
    length: 5,
    convRule: rule14
  }, {
    start: 70498,
    length: 2,
    convRule: rule124
  }, {
    start: 70502,
    length: 7,
    convRule: rule92
  }, {
    start: 70512,
    length: 5,
    convRule: rule92
  }, {
    start: 70656,
    length: 53,
    convRule: rule14
  }, {
    start: 70709,
    length: 3,
    convRule: rule124
  }, {
    start: 70712,
    length: 8,
    convRule: rule92
  }, {
    start: 70720,
    length: 2,
    convRule: rule124
  }, {
    start: 70722,
    length: 3,
    convRule: rule92
  }, {
    start: 70725,
    length: 1,
    convRule: rule124
  }, {
    start: 70726,
    length: 1,
    convRule: rule92
  }, {
    start: 70727,
    length: 4,
    convRule: rule14
  }, {
    start: 70731,
    length: 5,
    convRule: rule2
  }, {
    start: 70736,
    length: 10,
    convRule: rule8
  }, {
    start: 70746,
    length: 2,
    convRule: rule2
  }, {
    start: 70749,
    length: 1,
    convRule: rule2
  }, {
    start: 70750,
    length: 1,
    convRule: rule92
  }, {
    start: 70751,
    length: 3,
    convRule: rule14
  }, {
    start: 70784,
    length: 48,
    convRule: rule14
  }, {
    start: 70832,
    length: 3,
    convRule: rule124
  }, {
    start: 70835,
    length: 6,
    convRule: rule92
  }, {
    start: 70841,
    length: 1,
    convRule: rule124
  }, {
    start: 70842,
    length: 1,
    convRule: rule92
  }, {
    start: 70843,
    length: 4,
    convRule: rule124
  }, {
    start: 70847,
    length: 2,
    convRule: rule92
  }, {
    start: 70849,
    length: 1,
    convRule: rule124
  }, {
    start: 70850,
    length: 2,
    convRule: rule92
  }, {
    start: 70852,
    length: 2,
    convRule: rule14
  }, {
    start: 70854,
    length: 1,
    convRule: rule2
  }, {
    start: 70855,
    length: 1,
    convRule: rule14
  }, {
    start: 70864,
    length: 10,
    convRule: rule8
  }, {
    start: 71040,
    length: 47,
    convRule: rule14
  }, {
    start: 71087,
    length: 3,
    convRule: rule124
  }, {
    start: 71090,
    length: 4,
    convRule: rule92
  }, {
    start: 71096,
    length: 4,
    convRule: rule124
  }, {
    start: 71100,
    length: 2,
    convRule: rule92
  }, {
    start: 71102,
    length: 1,
    convRule: rule124
  }, {
    start: 71103,
    length: 2,
    convRule: rule92
  }, {
    start: 71105,
    length: 23,
    convRule: rule2
  }, {
    start: 71128,
    length: 4,
    convRule: rule14
  }, {
    start: 71132,
    length: 2,
    convRule: rule92
  }, {
    start: 71168,
    length: 48,
    convRule: rule14
  }, {
    start: 71216,
    length: 3,
    convRule: rule124
  }, {
    start: 71219,
    length: 8,
    convRule: rule92
  }, {
    start: 71227,
    length: 2,
    convRule: rule124
  }, {
    start: 71229,
    length: 1,
    convRule: rule92
  }, {
    start: 71230,
    length: 1,
    convRule: rule124
  }, {
    start: 71231,
    length: 2,
    convRule: rule92
  }, {
    start: 71233,
    length: 3,
    convRule: rule2
  }, {
    start: 71236,
    length: 1,
    convRule: rule14
  }, {
    start: 71248,
    length: 10,
    convRule: rule8
  }, {
    start: 71264,
    length: 13,
    convRule: rule2
  }, {
    start: 71296,
    length: 43,
    convRule: rule14
  }, {
    start: 71339,
    length: 1,
    convRule: rule92
  }, {
    start: 71340,
    length: 1,
    convRule: rule124
  }, {
    start: 71341,
    length: 1,
    convRule: rule92
  }, {
    start: 71342,
    length: 2,
    convRule: rule124
  }, {
    start: 71344,
    length: 6,
    convRule: rule92
  }, {
    start: 71350,
    length: 1,
    convRule: rule124
  }, {
    start: 71351,
    length: 1,
    convRule: rule92
  }, {
    start: 71352,
    length: 1,
    convRule: rule14
  }, {
    start: 71360,
    length: 10,
    convRule: rule8
  }, {
    start: 71424,
    length: 27,
    convRule: rule14
  }, {
    start: 71453,
    length: 3,
    convRule: rule92
  }, {
    start: 71456,
    length: 2,
    convRule: rule124
  }, {
    start: 71458,
    length: 4,
    convRule: rule92
  }, {
    start: 71462,
    length: 1,
    convRule: rule124
  }, {
    start: 71463,
    length: 5,
    convRule: rule92
  }, {
    start: 71472,
    length: 10,
    convRule: rule8
  }, {
    start: 71482,
    length: 2,
    convRule: rule17
  }, {
    start: 71484,
    length: 3,
    convRule: rule2
  }, {
    start: 71487,
    length: 1,
    convRule: rule13
  }, {
    start: 71680,
    length: 44,
    convRule: rule14
  }, {
    start: 71724,
    length: 3,
    convRule: rule124
  }, {
    start: 71727,
    length: 9,
    convRule: rule92
  }, {
    start: 71736,
    length: 1,
    convRule: rule124
  }, {
    start: 71737,
    length: 2,
    convRule: rule92
  }, {
    start: 71739,
    length: 1,
    convRule: rule2
  }, {
    start: 71840,
    length: 32,
    convRule: rule9
  }, {
    start: 71872,
    length: 32,
    convRule: rule12
  }, {
    start: 71904,
    length: 10,
    convRule: rule8
  }, {
    start: 71914,
    length: 9,
    convRule: rule17
  }, {
    start: 71935,
    length: 8,
    convRule: rule14
  }, {
    start: 71945,
    length: 1,
    convRule: rule14
  }, {
    start: 71948,
    length: 8,
    convRule: rule14
  }, {
    start: 71957,
    length: 2,
    convRule: rule14
  }, {
    start: 71960,
    length: 24,
    convRule: rule14
  }, {
    start: 71984,
    length: 6,
    convRule: rule124
  }, {
    start: 71991,
    length: 2,
    convRule: rule124
  }, {
    start: 71995,
    length: 2,
    convRule: rule92
  }, {
    start: 71997,
    length: 1,
    convRule: rule124
  }, {
    start: 71998,
    length: 1,
    convRule: rule92
  }, {
    start: 71999,
    length: 1,
    convRule: rule14
  }, {
    start: 72e3,
    length: 1,
    convRule: rule124
  }, {
    start: 72001,
    length: 1,
    convRule: rule14
  }, {
    start: 72002,
    length: 1,
    convRule: rule124
  }, {
    start: 72003,
    length: 1,
    convRule: rule92
  }, {
    start: 72004,
    length: 3,
    convRule: rule2
  }, {
    start: 72016,
    length: 10,
    convRule: rule8
  }, {
    start: 72096,
    length: 8,
    convRule: rule14
  }, {
    start: 72106,
    length: 39,
    convRule: rule14
  }, {
    start: 72145,
    length: 3,
    convRule: rule124
  }, {
    start: 72148,
    length: 4,
    convRule: rule92
  }, {
    start: 72154,
    length: 2,
    convRule: rule92
  }, {
    start: 72156,
    length: 4,
    convRule: rule124
  }, {
    start: 72160,
    length: 1,
    convRule: rule92
  }, {
    start: 72161,
    length: 1,
    convRule: rule14
  }, {
    start: 72162,
    length: 1,
    convRule: rule2
  }, {
    start: 72163,
    length: 1,
    convRule: rule14
  }, {
    start: 72164,
    length: 1,
    convRule: rule124
  }, {
    start: 72192,
    length: 1,
    convRule: rule14
  }, {
    start: 72193,
    length: 10,
    convRule: rule92
  }, {
    start: 72203,
    length: 40,
    convRule: rule14
  }, {
    start: 72243,
    length: 6,
    convRule: rule92
  }, {
    start: 72249,
    length: 1,
    convRule: rule124
  }, {
    start: 72250,
    length: 1,
    convRule: rule14
  }, {
    start: 72251,
    length: 4,
    convRule: rule92
  }, {
    start: 72255,
    length: 8,
    convRule: rule2
  }, {
    start: 72263,
    length: 1,
    convRule: rule92
  }, {
    start: 72272,
    length: 1,
    convRule: rule14
  }, {
    start: 72273,
    length: 6,
    convRule: rule92
  }, {
    start: 72279,
    length: 2,
    convRule: rule124
  }, {
    start: 72281,
    length: 3,
    convRule: rule92
  }, {
    start: 72284,
    length: 46,
    convRule: rule14
  }, {
    start: 72330,
    length: 13,
    convRule: rule92
  }, {
    start: 72343,
    length: 1,
    convRule: rule124
  }, {
    start: 72344,
    length: 2,
    convRule: rule92
  }, {
    start: 72346,
    length: 3,
    convRule: rule2
  }, {
    start: 72349,
    length: 1,
    convRule: rule14
  }, {
    start: 72350,
    length: 5,
    convRule: rule2
  }, {
    start: 72384,
    length: 57,
    convRule: rule14
  }, {
    start: 72704,
    length: 9,
    convRule: rule14
  }, {
    start: 72714,
    length: 37,
    convRule: rule14
  }, {
    start: 72751,
    length: 1,
    convRule: rule124
  }, {
    start: 72752,
    length: 7,
    convRule: rule92
  }, {
    start: 72760,
    length: 6,
    convRule: rule92
  }, {
    start: 72766,
    length: 1,
    convRule: rule124
  }, {
    start: 72767,
    length: 1,
    convRule: rule92
  }, {
    start: 72768,
    length: 1,
    convRule: rule14
  }, {
    start: 72769,
    length: 5,
    convRule: rule2
  }, {
    start: 72784,
    length: 10,
    convRule: rule8
  }, {
    start: 72794,
    length: 19,
    convRule: rule17
  }, {
    start: 72816,
    length: 2,
    convRule: rule2
  }, {
    start: 72818,
    length: 30,
    convRule: rule14
  }, {
    start: 72850,
    length: 22,
    convRule: rule92
  }, {
    start: 72873,
    length: 1,
    convRule: rule124
  }, {
    start: 72874,
    length: 7,
    convRule: rule92
  }, {
    start: 72881,
    length: 1,
    convRule: rule124
  }, {
    start: 72882,
    length: 2,
    convRule: rule92
  }, {
    start: 72884,
    length: 1,
    convRule: rule124
  }, {
    start: 72885,
    length: 2,
    convRule: rule92
  }, {
    start: 72960,
    length: 7,
    convRule: rule14
  }, {
    start: 72968,
    length: 2,
    convRule: rule14
  }, {
    start: 72971,
    length: 38,
    convRule: rule14
  }, {
    start: 73009,
    length: 6,
    convRule: rule92
  }, {
    start: 73018,
    length: 1,
    convRule: rule92
  }, {
    start: 73020,
    length: 2,
    convRule: rule92
  }, {
    start: 73023,
    length: 7,
    convRule: rule92
  }, {
    start: 73030,
    length: 1,
    convRule: rule14
  }, {
    start: 73031,
    length: 1,
    convRule: rule92
  }, {
    start: 73040,
    length: 10,
    convRule: rule8
  }, {
    start: 73056,
    length: 6,
    convRule: rule14
  }, {
    start: 73063,
    length: 2,
    convRule: rule14
  }, {
    start: 73066,
    length: 32,
    convRule: rule14
  }, {
    start: 73098,
    length: 5,
    convRule: rule124
  }, {
    start: 73104,
    length: 2,
    convRule: rule92
  }, {
    start: 73107,
    length: 2,
    convRule: rule124
  }, {
    start: 73109,
    length: 1,
    convRule: rule92
  }, {
    start: 73110,
    length: 1,
    convRule: rule124
  }, {
    start: 73111,
    length: 1,
    convRule: rule92
  }, {
    start: 73112,
    length: 1,
    convRule: rule14
  }, {
    start: 73120,
    length: 10,
    convRule: rule8
  }, {
    start: 73440,
    length: 19,
    convRule: rule14
  }, {
    start: 73459,
    length: 2,
    convRule: rule92
  }, {
    start: 73461,
    length: 2,
    convRule: rule124
  }, {
    start: 73463,
    length: 2,
    convRule: rule2
  }, {
    start: 73648,
    length: 1,
    convRule: rule14
  }, {
    start: 73664,
    length: 21,
    convRule: rule17
  }, {
    start: 73685,
    length: 8,
    convRule: rule13
  }, {
    start: 73693,
    length: 4,
    convRule: rule3
  }, {
    start: 73697,
    length: 17,
    convRule: rule13
  }, {
    start: 73727,
    length: 1,
    convRule: rule2
  }, {
    start: 73728,
    length: 922,
    convRule: rule14
  }, {
    start: 74752,
    length: 111,
    convRule: rule128
  }, {
    start: 74864,
    length: 5,
    convRule: rule2
  }, {
    start: 74880,
    length: 196,
    convRule: rule14
  }, {
    start: 77824,
    length: 1071,
    convRule: rule14
  }, {
    start: 78896,
    length: 9,
    convRule: rule16
  }, {
    start: 82944,
    length: 583,
    convRule: rule14
  }, {
    start: 92160,
    length: 569,
    convRule: rule14
  }, {
    start: 92736,
    length: 31,
    convRule: rule14
  }, {
    start: 92768,
    length: 10,
    convRule: rule8
  }, {
    start: 92782,
    length: 2,
    convRule: rule2
  }, {
    start: 92880,
    length: 30,
    convRule: rule14
  }, {
    start: 92912,
    length: 5,
    convRule: rule92
  }, {
    start: 92917,
    length: 1,
    convRule: rule2
  }, {
    start: 92928,
    length: 48,
    convRule: rule14
  }, {
    start: 92976,
    length: 7,
    convRule: rule92
  }, {
    start: 92983,
    length: 5,
    convRule: rule2
  }, {
    start: 92988,
    length: 4,
    convRule: rule13
  }, {
    start: 92992,
    length: 4,
    convRule: rule91
  }, {
    start: 92996,
    length: 1,
    convRule: rule2
  }, {
    start: 92997,
    length: 1,
    convRule: rule13
  }, {
    start: 93008,
    length: 10,
    convRule: rule8
  }, {
    start: 93019,
    length: 7,
    convRule: rule17
  }, {
    start: 93027,
    length: 21,
    convRule: rule14
  }, {
    start: 93053,
    length: 19,
    convRule: rule14
  }, {
    start: 93760,
    length: 32,
    convRule: rule9
  }, {
    start: 93792,
    length: 32,
    convRule: rule12
  }, {
    start: 93824,
    length: 23,
    convRule: rule17
  }, {
    start: 93847,
    length: 4,
    convRule: rule2
  }, {
    start: 93952,
    length: 75,
    convRule: rule14
  }, {
    start: 94031,
    length: 1,
    convRule: rule92
  }, {
    start: 94032,
    length: 1,
    convRule: rule14
  }, {
    start: 94033,
    length: 55,
    convRule: rule124
  }, {
    start: 94095,
    length: 4,
    convRule: rule92
  }, {
    start: 94099,
    length: 13,
    convRule: rule91
  }, {
    start: 94176,
    length: 2,
    convRule: rule91
  }, {
    start: 94178,
    length: 1,
    convRule: rule2
  }, {
    start: 94179,
    length: 1,
    convRule: rule91
  }, {
    start: 94180,
    length: 1,
    convRule: rule92
  }, {
    start: 94192,
    length: 2,
    convRule: rule124
  }, {
    start: 94208,
    length: 6136,
    convRule: rule14
  }, {
    start: 100352,
    length: 1238,
    convRule: rule14
  }, {
    start: 101632,
    length: 9,
    convRule: rule14
  }, {
    start: 110592,
    length: 287,
    convRule: rule14
  }, {
    start: 110928,
    length: 3,
    convRule: rule14
  }, {
    start: 110948,
    length: 4,
    convRule: rule14
  }, {
    start: 110960,
    length: 396,
    convRule: rule14
  }, {
    start: 113664,
    length: 107,
    convRule: rule14
  }, {
    start: 113776,
    length: 13,
    convRule: rule14
  }, {
    start: 113792,
    length: 9,
    convRule: rule14
  }, {
    start: 113808,
    length: 10,
    convRule: rule14
  }, {
    start: 113820,
    length: 1,
    convRule: rule13
  }, {
    start: 113821,
    length: 2,
    convRule: rule92
  }, {
    start: 113823,
    length: 1,
    convRule: rule2
  }, {
    start: 113824,
    length: 4,
    convRule: rule16
  }, {
    start: 118784,
    length: 246,
    convRule: rule13
  }, {
    start: 119040,
    length: 39,
    convRule: rule13
  }, {
    start: 119081,
    length: 60,
    convRule: rule13
  }, {
    start: 119141,
    length: 2,
    convRule: rule124
  }, {
    start: 119143,
    length: 3,
    convRule: rule92
  }, {
    start: 119146,
    length: 3,
    convRule: rule13
  }, {
    start: 119149,
    length: 6,
    convRule: rule124
  }, {
    start: 119155,
    length: 8,
    convRule: rule16
  }, {
    start: 119163,
    length: 8,
    convRule: rule92
  }, {
    start: 119171,
    length: 2,
    convRule: rule13
  }, {
    start: 119173,
    length: 7,
    convRule: rule92
  }, {
    start: 119180,
    length: 30,
    convRule: rule13
  }, {
    start: 119210,
    length: 4,
    convRule: rule92
  }, {
    start: 119214,
    length: 59,
    convRule: rule13
  }, {
    start: 119296,
    length: 66,
    convRule: rule13
  }, {
    start: 119362,
    length: 3,
    convRule: rule92
  }, {
    start: 119365,
    length: 1,
    convRule: rule13
  }, {
    start: 119520,
    length: 20,
    convRule: rule17
  }, {
    start: 119552,
    length: 87,
    convRule: rule13
  }, {
    start: 119648,
    length: 25,
    convRule: rule17
  }, {
    start: 119808,
    length: 26,
    convRule: rule107
  }, {
    start: 119834,
    length: 26,
    convRule: rule20
  }, {
    start: 119860,
    length: 26,
    convRule: rule107
  }, {
    start: 119886,
    length: 7,
    convRule: rule20
  }, {
    start: 119894,
    length: 18,
    convRule: rule20
  }, {
    start: 119912,
    length: 26,
    convRule: rule107
  }, {
    start: 119938,
    length: 26,
    convRule: rule20
  }, {
    start: 119964,
    length: 1,
    convRule: rule107
  }, {
    start: 119966,
    length: 2,
    convRule: rule107
  }, {
    start: 119970,
    length: 1,
    convRule: rule107
  }, {
    start: 119973,
    length: 2,
    convRule: rule107
  }, {
    start: 119977,
    length: 4,
    convRule: rule107
  }, {
    start: 119982,
    length: 8,
    convRule: rule107
  }, {
    start: 119990,
    length: 4,
    convRule: rule20
  }, {
    start: 119995,
    length: 1,
    convRule: rule20
  }, {
    start: 119997,
    length: 7,
    convRule: rule20
  }, {
    start: 120005,
    length: 11,
    convRule: rule20
  }, {
    start: 120016,
    length: 26,
    convRule: rule107
  }, {
    start: 120042,
    length: 26,
    convRule: rule20
  }, {
    start: 120068,
    length: 2,
    convRule: rule107
  }, {
    start: 120071,
    length: 4,
    convRule: rule107
  }, {
    start: 120077,
    length: 8,
    convRule: rule107
  }, {
    start: 120086,
    length: 7,
    convRule: rule107
  }, {
    start: 120094,
    length: 26,
    convRule: rule20
  }, {
    start: 120120,
    length: 2,
    convRule: rule107
  }, {
    start: 120123,
    length: 4,
    convRule: rule107
  }, {
    start: 120128,
    length: 5,
    convRule: rule107
  }, {
    start: 120134,
    length: 1,
    convRule: rule107
  }, {
    start: 120138,
    length: 7,
    convRule: rule107
  }, {
    start: 120146,
    length: 26,
    convRule: rule20
  }, {
    start: 120172,
    length: 26,
    convRule: rule107
  }, {
    start: 120198,
    length: 26,
    convRule: rule20
  }, {
    start: 120224,
    length: 26,
    convRule: rule107
  }, {
    start: 120250,
    length: 26,
    convRule: rule20
  }, {
    start: 120276,
    length: 26,
    convRule: rule107
  }, {
    start: 120302,
    length: 26,
    convRule: rule20
  }, {
    start: 120328,
    length: 26,
    convRule: rule107
  }, {
    start: 120354,
    length: 26,
    convRule: rule20
  }, {
    start: 120380,
    length: 26,
    convRule: rule107
  }, {
    start: 120406,
    length: 26,
    convRule: rule20
  }, {
    start: 120432,
    length: 26,
    convRule: rule107
  }, {
    start: 120458,
    length: 28,
    convRule: rule20
  }, {
    start: 120488,
    length: 25,
    convRule: rule107
  }, {
    start: 120513,
    length: 1,
    convRule: rule6
  }, {
    start: 120514,
    length: 25,
    convRule: rule20
  }, {
    start: 120539,
    length: 1,
    convRule: rule6
  }, {
    start: 120540,
    length: 6,
    convRule: rule20
  }, {
    start: 120546,
    length: 25,
    convRule: rule107
  }, {
    start: 120571,
    length: 1,
    convRule: rule6
  }, {
    start: 120572,
    length: 25,
    convRule: rule20
  }, {
    start: 120597,
    length: 1,
    convRule: rule6
  }, {
    start: 120598,
    length: 6,
    convRule: rule20
  }, {
    start: 120604,
    length: 25,
    convRule: rule107
  }, {
    start: 120629,
    length: 1,
    convRule: rule6
  }, {
    start: 120630,
    length: 25,
    convRule: rule20
  }, {
    start: 120655,
    length: 1,
    convRule: rule6
  }, {
    start: 120656,
    length: 6,
    convRule: rule20
  }, {
    start: 120662,
    length: 25,
    convRule: rule107
  }, {
    start: 120687,
    length: 1,
    convRule: rule6
  }, {
    start: 120688,
    length: 25,
    convRule: rule20
  }, {
    start: 120713,
    length: 1,
    convRule: rule6
  }, {
    start: 120714,
    length: 6,
    convRule: rule20
  }, {
    start: 120720,
    length: 25,
    convRule: rule107
  }, {
    start: 120745,
    length: 1,
    convRule: rule6
  }, {
    start: 120746,
    length: 25,
    convRule: rule20
  }, {
    start: 120771,
    length: 1,
    convRule: rule6
  }, {
    start: 120772,
    length: 6,
    convRule: rule20
  }, {
    start: 120778,
    length: 1,
    convRule: rule107
  }, {
    start: 120779,
    length: 1,
    convRule: rule20
  }, {
    start: 120782,
    length: 50,
    convRule: rule8
  }, {
    start: 120832,
    length: 512,
    convRule: rule13
  }, {
    start: 121344,
    length: 55,
    convRule: rule92
  }, {
    start: 121399,
    length: 4,
    convRule: rule13
  }, {
    start: 121403,
    length: 50,
    convRule: rule92
  }, {
    start: 121453,
    length: 8,
    convRule: rule13
  }, {
    start: 121461,
    length: 1,
    convRule: rule92
  }, {
    start: 121462,
    length: 14,
    convRule: rule13
  }, {
    start: 121476,
    length: 1,
    convRule: rule92
  }, {
    start: 121477,
    length: 2,
    convRule: rule13
  }, {
    start: 121479,
    length: 5,
    convRule: rule2
  }, {
    start: 121499,
    length: 5,
    convRule: rule92
  }, {
    start: 121505,
    length: 15,
    convRule: rule92
  }, {
    start: 122880,
    length: 7,
    convRule: rule92
  }, {
    start: 122888,
    length: 17,
    convRule: rule92
  }, {
    start: 122907,
    length: 7,
    convRule: rule92
  }, {
    start: 122915,
    length: 2,
    convRule: rule92
  }, {
    start: 122918,
    length: 5,
    convRule: rule92
  }, {
    start: 123136,
    length: 45,
    convRule: rule14
  }, {
    start: 123184,
    length: 7,
    convRule: rule92
  }, {
    start: 123191,
    length: 7,
    convRule: rule91
  }, {
    start: 123200,
    length: 10,
    convRule: rule8
  }, {
    start: 123214,
    length: 1,
    convRule: rule14
  }, {
    start: 123215,
    length: 1,
    convRule: rule13
  }, {
    start: 123584,
    length: 44,
    convRule: rule14
  }, {
    start: 123628,
    length: 4,
    convRule: rule92
  }, {
    start: 123632,
    length: 10,
    convRule: rule8
  }, {
    start: 123647,
    length: 1,
    convRule: rule3
  }, {
    start: 124928,
    length: 197,
    convRule: rule14
  }, {
    start: 125127,
    length: 9,
    convRule: rule17
  }, {
    start: 125136,
    length: 7,
    convRule: rule92
  }, {
    start: 125184,
    length: 34,
    convRule: rule203
  }, {
    start: 125218,
    length: 34,
    convRule: rule204
  }, {
    start: 125252,
    length: 7,
    convRule: rule92
  }, {
    start: 125259,
    length: 1,
    convRule: rule91
  }, {
    start: 125264,
    length: 10,
    convRule: rule8
  }, {
    start: 125278,
    length: 2,
    convRule: rule2
  }, {
    start: 126065,
    length: 59,
    convRule: rule17
  }, {
    start: 126124,
    length: 1,
    convRule: rule13
  }, {
    start: 126125,
    length: 3,
    convRule: rule17
  }, {
    start: 126128,
    length: 1,
    convRule: rule3
  }, {
    start: 126129,
    length: 4,
    convRule: rule17
  }, {
    start: 126209,
    length: 45,
    convRule: rule17
  }, {
    start: 126254,
    length: 1,
    convRule: rule13
  }, {
    start: 126255,
    length: 15,
    convRule: rule17
  }, {
    start: 126464,
    length: 4,
    convRule: rule14
  }, {
    start: 126469,
    length: 27,
    convRule: rule14
  }, {
    start: 126497,
    length: 2,
    convRule: rule14
  }, {
    start: 126500,
    length: 1,
    convRule: rule14
  }, {
    start: 126503,
    length: 1,
    convRule: rule14
  }, {
    start: 126505,
    length: 10,
    convRule: rule14
  }, {
    start: 126516,
    length: 4,
    convRule: rule14
  }, {
    start: 126521,
    length: 1,
    convRule: rule14
  }, {
    start: 126523,
    length: 1,
    convRule: rule14
  }, {
    start: 126530,
    length: 1,
    convRule: rule14
  }, {
    start: 126535,
    length: 1,
    convRule: rule14
  }, {
    start: 126537,
    length: 1,
    convRule: rule14
  }, {
    start: 126539,
    length: 1,
    convRule: rule14
  }, {
    start: 126541,
    length: 3,
    convRule: rule14
  }, {
    start: 126545,
    length: 2,
    convRule: rule14
  }, {
    start: 126548,
    length: 1,
    convRule: rule14
  }, {
    start: 126551,
    length: 1,
    convRule: rule14
  }, {
    start: 126553,
    length: 1,
    convRule: rule14
  }, {
    start: 126555,
    length: 1,
    convRule: rule14
  }, {
    start: 126557,
    length: 1,
    convRule: rule14
  }, {
    start: 126559,
    length: 1,
    convRule: rule14
  }, {
    start: 126561,
    length: 2,
    convRule: rule14
  }, {
    start: 126564,
    length: 1,
    convRule: rule14
  }, {
    start: 126567,
    length: 4,
    convRule: rule14
  }, {
    start: 126572,
    length: 7,
    convRule: rule14
  }, {
    start: 126580,
    length: 4,
    convRule: rule14
  }, {
    start: 126585,
    length: 4,
    convRule: rule14
  }, {
    start: 126590,
    length: 1,
    convRule: rule14
  }, {
    start: 126592,
    length: 10,
    convRule: rule14
  }, {
    start: 126603,
    length: 17,
    convRule: rule14
  }, {
    start: 126625,
    length: 3,
    convRule: rule14
  }, {
    start: 126629,
    length: 5,
    convRule: rule14
  }, {
    start: 126635,
    length: 17,
    convRule: rule14
  }, {
    start: 126704,
    length: 2,
    convRule: rule6
  }, {
    start: 126976,
    length: 44,
    convRule: rule13
  }, {
    start: 127024,
    length: 100,
    convRule: rule13
  }, {
    start: 127136,
    length: 15,
    convRule: rule13
  }, {
    start: 127153,
    length: 15,
    convRule: rule13
  }, {
    start: 127169,
    length: 15,
    convRule: rule13
  }, {
    start: 127185,
    length: 37,
    convRule: rule13
  }, {
    start: 127232,
    length: 13,
    convRule: rule17
  }, {
    start: 127245,
    length: 161,
    convRule: rule13
  }, {
    start: 127462,
    length: 29,
    convRule: rule13
  }, {
    start: 127504,
    length: 44,
    convRule: rule13
  }, {
    start: 127552,
    length: 9,
    convRule: rule13
  }, {
    start: 127568,
    length: 2,
    convRule: rule13
  }, {
    start: 127584,
    length: 6,
    convRule: rule13
  }, {
    start: 127744,
    length: 251,
    convRule: rule13
  }, {
    start: 127995,
    length: 5,
    convRule: rule10
  }, {
    start: 128e3,
    length: 728,
    convRule: rule13
  }, {
    start: 128736,
    length: 13,
    convRule: rule13
  }, {
    start: 128752,
    length: 13,
    convRule: rule13
  }, {
    start: 128768,
    length: 116,
    convRule: rule13
  }, {
    start: 128896,
    length: 89,
    convRule: rule13
  }, {
    start: 128992,
    length: 12,
    convRule: rule13
  }, {
    start: 129024,
    length: 12,
    convRule: rule13
  }, {
    start: 129040,
    length: 56,
    convRule: rule13
  }, {
    start: 129104,
    length: 10,
    convRule: rule13
  }, {
    start: 129120,
    length: 40,
    convRule: rule13
  }, {
    start: 129168,
    length: 30,
    convRule: rule13
  }, {
    start: 129200,
    length: 2,
    convRule: rule13
  }, {
    start: 129280,
    length: 121,
    convRule: rule13
  }, {
    start: 129402,
    length: 82,
    convRule: rule13
  }, {
    start: 129485,
    length: 135,
    convRule: rule13
  }, {
    start: 129632,
    length: 14,
    convRule: rule13
  }, {
    start: 129648,
    length: 5,
    convRule: rule13
  }, {
    start: 129656,
    length: 3,
    convRule: rule13
  }, {
    start: 129664,
    length: 7,
    convRule: rule13
  }, {
    start: 129680,
    length: 25,
    convRule: rule13
  }, {
    start: 129712,
    length: 7,
    convRule: rule13
  }, {
    start: 129728,
    length: 3,
    convRule: rule13
  }, {
    start: 129744,
    length: 7,
    convRule: rule13
  }, {
    start: 129792,
    length: 147,
    convRule: rule13
  }, {
    start: 129940,
    length: 55,
    convRule: rule13
  }, {
    start: 130032,
    length: 10,
    convRule: rule8
  }, {
    start: 131072,
    length: 42718,
    convRule: rule14
  }, {
    start: 173824,
    length: 4149,
    convRule: rule14
  }, {
    start: 177984,
    length: 222,
    convRule: rule14
  }, {
    start: 178208,
    length: 5762,
    convRule: rule14
  }, {
    start: 183984,
    length: 7473,
    convRule: rule14
  }, {
    start: 194560,
    length: 542,
    convRule: rule14
  }, {
    start: 196608,
    length: 4939,
    convRule: rule14
  }, {
    start: 917505,
    length: 1,
    convRule: rule16
  }, {
    start: 917536,
    length: 96,
    convRule: rule16
  }, {
    start: 917760,
    length: 240,
    convRule: rule92
  }, {
    start: 983040,
    length: 65534,
    convRule: rule200
  }, {
    start: 1048576,
    length: 65534,
    convRule: rule200
  }];
  var checkAttr = function(categories) {
    return function($$char2) {
      var numOfBlocks = function() {
        var $43 = $$char2 < 256;
        if ($43) {
          return numLat1Blocks;
        }
        ;
        return numBlocks;
      }();
      var maybeConversionRule = getRule(allchars)($$char2)(numOfBlocks);
      if (maybeConversionRule instanceof Nothing) {
        return false;
      }
      ;
      if (maybeConversionRule instanceof Just) {
        return isJust(elemIndex2(maybeConversionRule.value0.category)(categories));
      }
      ;
      throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5645, column 5 - line 5647, column 86): " + [maybeConversionRule.constructor.name]);
    };
  };
  var uIswalnum = /* @__PURE__ */ checkAttr([gencatLT, gencatLU, gencatLL, gencatLM, gencatLO, gencatMC, gencatME, gencatMN, gencatNO, gencatND, gencatNL]);
  var uIswalpha = /* @__PURE__ */ checkAttr([gencatLL, gencatLU, gencatLT, gencatLM, gencatLO]);
  var uIswupper = /* @__PURE__ */ checkAttr([gencatLU, gencatLT]);

  // output/Data.CodePoint.Unicode/index.js
  var fromEnum4 = /* @__PURE__ */ fromEnum(boundedEnumCodePoint);
  var modify5 = unsafeCoerce2;
  var toLowerSimple = /* @__PURE__ */ modify5(uTowlower);
  var toUpperSimple = /* @__PURE__ */ modify5(uTowupper);
  var isUpper = function($66) {
    return uIswupper(fromEnum4($66));
  };
  var isSpace = function(c) {
    var uc = fromEnum4(c);
    var $28 = uc <= 823;
    if ($28) {
      return uc === 32 || (uc >= 9 && uc <= 13 || uc === 160);
    }
    ;
    return uIswspace(uc);
  };
  var isOctDigit = function(c) {
    var diff = fromEnum4(c) - toCharCode2("0") | 0;
    return diff <= 7 && diff >= 0;
  };
  var isDecDigit = function(c) {
    var diff = fromEnum4(c) - toCharCode2("0") | 0;
    return diff <= 9 && diff >= 0;
  };
  var isHexDigit = function(c) {
    return isDecDigit(c) || (function() {
      var diff = fromEnum4(c) - toCharCode2("A") | 0;
      return diff <= 5 && diff >= 0;
    }() || function() {
      var diff = fromEnum4(c) - toCharCode2("a") | 0;
      return diff <= 5 && diff >= 0;
    }());
  };
  var isAlphaNum = function($70) {
    return uIswalnum(fromEnum4($70));
  };
  var isAlpha = function($71) {
    return uIswalpha(fromEnum4($71));
  };
  var hexDigitToInt = function(c) {
    var hexUpper = fromEnum4(c) - toCharCode2("A") | 0;
    var hexLower = fromEnum4(c) - toCharCode2("a") | 0;
    var dec = fromEnum4(c) - toCharCode2("0") | 0;
    var result = function() {
      if (dec <= 9 && dec >= 0) {
        return new Just(dec);
      }
      ;
      if (hexLower <= 5 && hexLower >= 0) {
        return new Just(hexLower + 10 | 0);
      }
      ;
      if (hexUpper <= 5 && hexUpper >= 0) {
        return new Just(hexUpper + 10 | 0);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.CodePoint.Unicode (line 591, column 3 - line 591, column 22): ");
    }();
    return result;
  };

  // output/Parsing.String.Basic/index.js
  var elem1 = /* @__PURE__ */ elem2(eqChar);
  var show14 = /* @__PURE__ */ show(/* @__PURE__ */ showArray(showChar));
  var notElem1 = /* @__PURE__ */ notElem2(eqChar);
  var satisfyCP = function(p2) {
    return satisfy(function($32) {
      return p2(codePointFromChar($32));
    });
  };
  var space = /* @__PURE__ */ withErrorMessage(/* @__PURE__ */ satisfyCP(isSpace))("space");
  var upper2 = /* @__PURE__ */ withErrorMessage(/* @__PURE__ */ satisfyCP(isUpper))("uppercase letter");
  var oneOf2 = function(ss) {
    return withLazyErrorMessage(satisfy(flip(elem1)(ss)))(function(v) {
      return "one of " + show14(ss);
    });
  };
  var octDigit = /* @__PURE__ */ withErrorMessage(/* @__PURE__ */ satisfyCP(isOctDigit))("oct digit");
  var noneOf = function(ss) {
    return withLazyErrorMessage(satisfy(flip(notElem1)(ss)))(function(v) {
      return "none of " + show14(ss);
    });
  };
  var letter = /* @__PURE__ */ withErrorMessage(/* @__PURE__ */ satisfyCP(isAlpha))("letter");
  var hexDigit = /* @__PURE__ */ withErrorMessage(/* @__PURE__ */ satisfyCP(isHexDigit))("hex digit");
  var digit = /* @__PURE__ */ withErrorMessage(/* @__PURE__ */ satisfyCP(isDecDigit))("digit");
  var alphaNum = /* @__PURE__ */ withErrorMessage(/* @__PURE__ */ satisfyCP(isAlphaNum))("letter or digit");

  // output/Data.String.Unicode/index.js
  var map24 = /* @__PURE__ */ map(functorArray);
  var convert = function(f) {
    var $6 = map24(f);
    return function($7) {
      return fromCodePointArray($6(toCodePointArray($7)));
    };
  };
  var toLowerSimple2 = /* @__PURE__ */ convert(toLowerSimple);
  var toUpperSimple2 = /* @__PURE__ */ convert(toUpperSimple);

  // output/Parsing.Token/index.js
  var bind5 = /* @__PURE__ */ bind(bindParserT);
  var pure9 = /* @__PURE__ */ pure(applicativeParserT);
  var sort2 = /* @__PURE__ */ sort(ordString);
  var map25 = /* @__PURE__ */ map(functorArray);
  var applySecond3 = /* @__PURE__ */ applySecond(applyParserT);
  var compare6 = /* @__PURE__ */ compare(ordString);
  var append8 = /* @__PURE__ */ append(semigroupArray);
  var fix2 = /* @__PURE__ */ fix(lazyParserT);
  var alt5 = /* @__PURE__ */ alt(altParserT);
  var $$void6 = /* @__PURE__ */ $$void(functorParserT);
  var voidLeft4 = /* @__PURE__ */ voidLeft(functorParserT);
  var identity15 = /* @__PURE__ */ identity(categoryFn);
  var many3 = /* @__PURE__ */ many(alternativeParserT)(lazyParserT);
  var map112 = /* @__PURE__ */ map(functorMaybe);
  var some3 = /* @__PURE__ */ some(alternativeParserT)(lazyParserT);
  var foldl4 = /* @__PURE__ */ foldl(foldableArray);
  var applyFirst3 = /* @__PURE__ */ applyFirst(applyParserT);
  var show6 = /* @__PURE__ */ show(showString);
  var bind12 = /* @__PURE__ */ bind(bindMaybe);
  var pure12 = /* @__PURE__ */ pure(applicativeMaybe);
  var foldr4 = /* @__PURE__ */ foldr(foldableArray);
  var map26 = /* @__PURE__ */ map(functorParserT);
  var choice2 = /* @__PURE__ */ choice(foldableArray);
  var many1 = /* @__PURE__ */ many2(alternativeParserT)(lazyParserT);
  var toUnfoldable6 = /* @__PURE__ */ toUnfoldable3(unfoldableArray);
  var foldr12 = /* @__PURE__ */ foldr(foldableList);
  var unGenLanguageDef = function(v) {
    return v;
  };
  var theReservedNames = function(v) {
    if (v.caseSensitive) {
      return sort2(v.reservedNames);
    }
    ;
    if (otherwise) {
      return sort2(map25(toLower)(v.reservedNames));
    }
    ;
    throw new Error("Failed pattern match at Parsing.Token (line 825, column 1 - line 825, column 70): " + [v.constructor.name]);
  };
  var simpleSpace = /* @__PURE__ */ skipMany1(/* @__PURE__ */ satisfyCodePoint(isSpace));
  var oneLineComment = function(v) {
    return applySecond3($$try4(string2(v.commentLine)))(skipMany(satisfy(function(v1) {
      return v1 !== "\n";
    })));
  };
  var isReserved = function($copy_names) {
    return function($copy_name) {
      var $tco_var_names = $copy_names;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(names, name18) {
        var v = uncons(names);
        if (v instanceof Nothing) {
          $tco_done = true;
          return false;
        }
        ;
        if (v instanceof Just) {
          var v1 = compare6(v.value0.head)(name18);
          if (v1 instanceof LT) {
            $tco_var_names = v.value0.tail;
            $copy_name = name18;
            return;
          }
          ;
          if (v1 instanceof EQ) {
            $tco_done = true;
            return true;
          }
          ;
          if (v1 instanceof GT) {
            $tco_done = true;
            return false;
          }
          ;
          throw new Error("Failed pattern match at Parsing.Token (line 820, column 35 - line 823, column 18): " + [v1.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Parsing.Token (line 818, column 3 - line 823, column 18): " + [v.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_names, $copy_name);
      }
      ;
      return $tco_result;
    };
  };
  var isReservedName = function(v) {
    return function(name18) {
      var caseName = function() {
        if (v.caseSensitive) {
          return name18;
        }
        ;
        if (otherwise) {
          return toLower(name18);
        }
        ;
        throw new Error("Failed pattern match at Parsing.Token (line 812, column 3 - line 814, column 31): ");
      }();
      return isReserved(theReservedNames(v))(caseName);
    };
  };
  var inCommentSingle = function(v) {
    var startEnd = append8(toCharArray(v.commentEnd))(toCharArray(v.commentStart));
    return fix2(function(p2) {
      return alt5($$void6($$try4(string2(v.commentEnd))))(alt5(applySecond3(skipMany1(noneOf(startEnd)))(p2))(withErrorMessage(applySecond3(oneOf2(startEnd))(p2))("end of comment")));
    });
  };
  var multiLineComment = function(v) {
    return applySecond3($$try4(string2(v.commentStart)))(inComment(v));
  };
  var inCommentMulti = function(v) {
    var startEnd = append8(toCharArray(v.commentEnd))(toCharArray(v.commentStart));
    return fix2(function(p2) {
      return alt5($$void6($$try4(string2(v.commentEnd))))(alt5(applySecond3(multiLineComment(v))(p2))(alt5(applySecond3(skipMany1(noneOf(startEnd)))(p2))(withErrorMessage(applySecond3(oneOf2(startEnd))(p2))("end of comment"))));
    });
  };
  var inComment = function(v) {
    if (v.nestedComments) {
      return inCommentMulti(v);
    }
    ;
    return inCommentSingle(v);
  };
  var whiteSpace$prime = function(v) {
    if ($$null2(v.commentLine) && $$null2(v.commentStart)) {
      return skipMany(withErrorMessage(simpleSpace)(""));
    }
    ;
    if ($$null2(v.commentLine)) {
      return skipMany(alt5(simpleSpace)(withErrorMessage(multiLineComment(v))("")));
    }
    ;
    if ($$null2(v.commentStart)) {
      return skipMany(alt5(simpleSpace)(withErrorMessage(oneLineComment(v))("")));
    }
    ;
    if (otherwise) {
      return skipMany(alt5(simpleSpace)(alt5(oneLineComment(v))(withErrorMessage(multiLineComment(v))(""))));
    }
    ;
    throw new Error("Failed pattern match at Parsing.Token (line 834, column 1 - line 834, column 74): " + [v.constructor.name]);
  };
  var makeTokenParser = function(v) {
    var stringLetter = satisfy(function(c) {
      return c !== '"' && (c !== "\\" && c > "");
    });
    var sign2 = function(dictRing) {
      return alt5(voidLeft4($$char("-"))(negate(dictRing)))(alt5(voidLeft4($$char("+"))(identity15))(pure9(identity15)));
    };
    var sign1 = sign2(ringInt);
    var oper = function() {
      var go2 = bind5(v.opStart)(function(c) {
        return bind5(many3(v.opLetter))(function(cs) {
          return pure9(singleton7(c) + fromCharArray(cs));
        });
      });
      return withErrorMessage(go2)("operator");
    }();
    var number = function(base2) {
      return function(baseDigit) {
        var folder = function(v1) {
          return function(v2) {
            if (v1 instanceof Nothing) {
              return Nothing.value;
            }
            ;
            if (v1 instanceof Just) {
              return map112(function(v3) {
                return (base2 * v1.value0 | 0) + v3 | 0;
              })(hexDigitToInt(codePointFromChar(v2)));
            }
            ;
            throw new Error("Failed pattern match at Parsing.Token (line 704, column 5 - line 704, column 45): " + [v1.constructor.name, v2.constructor.name]);
          };
        };
        return bind5(some3(baseDigit))(function(digits) {
          return maybe(fail3("not digits"))(pure9)(foldl4(folder)(new Just(0))(digits));
        });
      };
    };
    var octal = applySecond3(oneOf2(["o", "O"]))(number(8)(octDigit));
    var lexeme = function(p2) {
      return applyFirst3(p2)(whiteSpace$prime(v));
    };
    var reservedOp = function(name18) {
      var go2 = bind5(string2(name18))(function() {
        return withErrorMessage(notFollowedBy(v.opLetter))("end of " + name18);
      });
      return lexeme($$try4(go2));
    };
    var symbol = function(name18) {
      return voidLeft4(lexeme(string2(name18)))(name18);
    };
    var parens = function(p2) {
      return between(symbol("("))(symbol(")"))(p2);
    };
    var semi = symbol(";");
    var semiSep = function(p2) {
      return sepBy(p2)(semi);
    };
    var semiSep1 = function(p2) {
      return sepBy1(p2)(semi);
    };
    var isReservedOp = function(name18) {
      return isReserved(sort2(v.reservedOpNames))(name18);
    };
    var operator2 = function() {
      var go2 = bind5(oper)(function(name18) {
        var $114 = isReservedOp(name18);
        if ($114) {
          return fail3("reserved operator " + name18);
        }
        ;
        return pure9(name18);
      });
      return lexeme($$try4(go2));
    }();
    var ident = function() {
      var go2 = bind5(v.identStart)(function(c) {
        return bind5(many3(v.identLetter))(function(cs) {
          return pure9(singleton7(c) + fromCharArray(cs));
        });
      });
      return withErrorMessage(go2)("identifier");
    }();
    var identifier = function() {
      var go2 = bind5(ident)(function(name18) {
        var $115 = isReservedName(v)(name18);
        if ($115) {
          return fail3("reserved word " + show6(name18));
        }
        ;
        return pure9(name18);
      });
      return lexeme($$try4(go2));
    }();
    var hexadecimal2 = applySecond3(oneOf2(["x", "X"]))(number(16)(hexDigit));
    var fraction = function() {
      var op = function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return Nothing.value;
          }
          ;
          if (v2 instanceof Just) {
            return bind12(hexDigitToInt(codePointFromChar(v1)))(function(int$prime) {
              return pure12((v2.value0 + toNumber2(int$prime)) / 10);
            });
          }
          ;
          throw new Error("Failed pattern match at Parsing.Token (line 651, column 5 - line 651, column 47): " + [v1.constructor.name, v2.constructor.name]);
        };
      };
      return asErrorMessage("fraction")(bind5($$char("."))(function() {
        return bind5(withErrorMessage(some3(digit))("fraction"))(function(digits) {
          return maybe(fail3("not digit"))(pure9)(foldr4(op)(new Just(0))(digits));
        });
      }));
    }();
    var escapeGap = withErrorMessage(applySecond3(some3(space))($$char("\\")))("end of string gap");
    var escapeEmpty = $$char("&");
    var escMap = zip(["a", "b", "f", "n", "r", "t", "v", "\\", '"', "'"])(["\x07", "\b", "\f", "\n", "\r", "	", "\v", "\\", '"', "'"]);
    var dot = symbol(".");
    var decimal = number(10)(digit);
    var exponent$prime = function() {
      var power = function(e) {
        if (e < 0) {
          return 1 / power(-e | 0);
        }
        ;
        if (otherwise) {
          return pow(10)(toNumber2(e));
        }
        ;
        throw new Error("Failed pattern match at Parsing.Token (line 664, column 5 - line 664, column 27): " + [e.constructor.name]);
      };
      return asErrorMessage("exponent")(bind5(oneOf2(["e", "E"]))(function() {
        return bind5(sign1)(function(f) {
          return bind5(withErrorMessage(decimal)("exponent"))(function(e) {
            return pure9(power(f(e)));
          });
        });
      }));
    }();
    var fractExponent = function(n) {
      var justExponent = bind5(exponent$prime)(function(expo) {
        return pure9(toNumber2(n) * expo);
      });
      var fractExponent$prime = bind5(fraction)(function(fract) {
        return bind5(option2(1)(exponent$prime))(function(expo) {
          return pure9((toNumber2(n) + fract) * expo);
        });
      });
      return alt5(fractExponent$prime)(justExponent);
    };
    var fractFloat = function(n) {
      return map26(Right.create)(fractExponent(n));
    };
    var decimalFloat = bind5(decimal)(function(n) {
      return option2(new Left(n))(fractFloat(n));
    });
    var zeroNumFloat = alt5(map26(Left.create)(alt5(hexadecimal2)(octal)))(alt5(decimalFloat)(alt5(fractFloat(0))(pure9(new Left(0)))));
    var natFloat = alt5(applySecond3($$char("0"))(zeroNumFloat))(decimalFloat);
    var naturalOrFloat = withErrorMessage(lexeme(natFloat))("number");
    var floating = bind5(decimal)(fractExponent);
    var $$float = withErrorMessage(lexeme(floating))("float");
    var zeroNumber = withErrorMessage(applySecond3($$char("0"))(alt5(hexadecimal2)(alt5(octal)(alt5(decimal)(pure9(0))))))("");
    var nat = alt5(zeroNumber)(decimal);
    var $$int = bind5(lexeme(sign1))(function(f) {
      return bind5(nat)(function(n) {
        return pure9(f(n));
      });
    });
    var integer = withErrorMessage(lexeme($$int))("integer");
    var natural = withErrorMessage(lexeme(nat))("natural");
    var comma = symbol(",");
    var commaSep = function(p2) {
      return sepBy(p2)(comma);
    };
    var commaSep1 = function(p2) {
      return sepBy1(p2)(comma);
    };
    var colon = symbol(":");
    var charNum = bind5(alt5(decimal)(alt5(applySecond3($$char("o"))(number(8)(octDigit)))(applySecond3($$char("x"))(number(16)(hexDigit)))))(function(code2) {
      var $120 = code2 > 1114111;
      if ($120) {
        return fail3("invalid escape sequence");
      }
      ;
      var v1 = fromCharCode3(code2);
      if (v1 instanceof Just) {
        return pure9(v1.value0);
      }
      ;
      if (v1 instanceof Nothing) {
        return fail3("invalid character code (should not happen)");
      }
      ;
      throw new Error("Failed pattern match at Parsing.Token (line 498, column 10 - line 500, column 67): " + [v1.constructor.name]);
    });
    var charLetter = satisfy(function(c) {
      return c !== "'" && (c !== "\\" && c > "");
    });
    var charEsc = function() {
      var parseEsc = function(v1) {
        return voidLeft4($$char(v1.value0))(v1.value1);
      };
      return choice2(map25(parseEsc)(escMap));
    }();
    var charControl = bind5($$char("^"))(function() {
      return bind5(upper2)(function(code2) {
        var v1 = fromCharCode3((toCharCode2(code2) - toCharCode2("A") | 0) + 1 | 0);
        if (v1 instanceof Just) {
          return pure9(v1.value0);
        }
        ;
        if (v1 instanceof Nothing) {
          return fail3("invalid character code (should not happen)");
        }
        ;
        throw new Error("Failed pattern match at Parsing.Token (line 488, column 5 - line 490, column 67): " + [v1.constructor.name]);
      });
    });
    var caseString = function(name18) {
      if (v.caseSensitive) {
        return voidLeft4(string2(name18))(name18);
      }
      ;
      if (otherwise) {
        var msg = show6(name18);
        var caseChar = function(c) {
          var v1 = function(v2) {
            if (otherwise) {
              return $$char(c);
            }
            ;
            throw new Error("Failed pattern match at Parsing.Token (line 355, column 1 - line 355, column 80): " + [c.constructor.name]);
          };
          var $131 = isAlpha(codePointFromChar(c));
          if ($131) {
            var $132 = toChar(toLowerSimple2(singleton7(c)));
            if ($132 instanceof Just) {
              var $133 = toChar(toUpperSimple2(singleton7(c)));
              if ($133 instanceof Just) {
                return alt5($$char($132.value0))($$char($133.value0));
              }
              ;
              return v1(true);
            }
            ;
            return v1(true);
          }
          ;
          return v1(true);
        };
        var walk = function(name$prime) {
          var v1 = uncons3(name$prime);
          if (v1 instanceof Nothing) {
            return pure9(unit);
          }
          ;
          if (v1 instanceof Just) {
            return applySecond3(withErrorMessage(caseChar(v1.value0.head))(msg))(walk(v1.value0.tail));
          }
          ;
          throw new Error("Failed pattern match at Parsing.Token (line 757, column 22 - line 759, column 72): " + [v1.constructor.name]);
        };
        return voidLeft4(walk(name18))(name18);
      }
      ;
      throw new Error("Failed pattern match at Parsing.Token (line 751, column 3 - line 751, column 50): " + [name18.constructor.name]);
    };
    var reserved = function(name18) {
      var go2 = applySecond3(caseString(name18))(withErrorMessage(notFollowedBy(v.identLetter))("end of " + name18));
      return lexeme($$try4(go2));
    };
    var brackets = function(p2) {
      return between(symbol("["))(symbol("]"))(p2);
    };
    var braces = function(p2) {
      return between(symbol("{"))(symbol("}"))(p2);
    };
    var ascii3codes = ["NUL", "SOH", "STX", "ETX", "EOT", "ENQ", "ACK", "BEL", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "SUB", "ESC", "DEL"];
    var ascii3 = ["\0", "", "", "", "", "", "", "\x07", "", "", "", "", "", "", "", "", "", "", "\x1B", "\x7F"];
    var ascii2codes = ["BS", "HT", "LF", "VT", "FF", "CR", "SO", "SI", "EM", "FS", "GS", "RS", "US", "SP"];
    var ascii2 = ["\b", "	", "\n", "\v", "\f", "\r", "", "", "", "", "", "", "", " "];
    var asciiMap = zip(append8(ascii3codes)(ascii2codes))(append8(ascii3)(ascii2));
    var charAscii = function() {
      var parseAscii = function(v1) {
        return $$try4(voidLeft4(string2(v1.value0))(v1.value1));
      };
      return choice2(map25(parseAscii)(asciiMap));
    }();
    var escapeCode = alt5(charEsc)(alt5(charNum)(alt5(charAscii)(withErrorMessage(charControl)("escape code"))));
    var charEscape = applySecond3($$char("\\"))(escapeCode);
    var characterChar = alt5(charLetter)(withErrorMessage(charEscape)("literal character"));
    var charLiteral = function() {
      var go2 = between($$char("'"))(withErrorMessage($$char("'"))("end of character"))(characterChar);
      return withErrorMessage(lexeme(go2))("character");
    }();
    var stringEscape = bind5($$char("\\"))(function() {
      return alt5(voidLeft4(escapeGap)(Nothing.value))(alt5(voidLeft4(escapeEmpty)(Nothing.value))(map26(Just.create)(escapeCode)));
    });
    var stringChar = alt5(map26(Just.create)(stringLetter))(withErrorMessage(stringEscape)("string character"));
    var stringLiteral = function() {
      var folder = function(v1) {
        return function(v2) {
          if (v1 instanceof Nothing) {
            return v2;
          }
          ;
          if (v1 instanceof Just) {
            return new Cons(v1.value0, v2);
          }
          ;
          throw new Error("Failed pattern match at Parsing.Token (line 455, column 5 - line 455, column 51): " + [v1.constructor.name, v2.constructor.name]);
        };
      };
      var go2 = bind5(between($$char('"'))(withErrorMessage($$char('"'))("end of string"))(many1(stringChar)))(function(maybeChars) {
        return pure9(fromCharArray(toUnfoldable6(foldr12(folder)(Nil.value)(maybeChars))));
      });
      return lexeme(withErrorMessage(go2)("literal string"));
    }();
    var angles = function(p2) {
      return between(symbol("<"))(symbol(">"))(p2);
    };
    return {
      identifier,
      reserved,
      operator: operator2,
      reservedOp,
      charLiteral,
      stringLiteral,
      natural,
      integer,
      "float": $$float,
      naturalOrFloat,
      decimal,
      hexadecimal: hexadecimal2,
      octal,
      symbol,
      lexeme,
      whiteSpace: whiteSpace$prime(v),
      parens,
      braces,
      angles,
      brackets,
      semi,
      comma,
      colon,
      dot,
      semiSep,
      semiSep1,
      commaSep,
      commaSep1
    };
  };

  // output/Parsing.Language/index.js
  var alt6 = /* @__PURE__ */ alt(altParserT);
  var emptyDef = /* @__PURE__ */ function() {
    var op$prime = oneOf2([":", "!", "#", "$", "%", "&", "*", "+", ".", "/", "<", "=", ">", "?", "@", "\\", "^", "|", "-", "~"]);
    return {
      commentStart: "",
      commentEnd: "",
      commentLine: "",
      nestedComments: true,
      identStart: alt6(letter)($$char("_")),
      identLetter: alt6(alphaNum)(oneOf2(["_", "'"])),
      opStart: op$prime,
      opLetter: op$prime,
      reservedOpNames: [],
      reservedNames: [],
      caseSensitive: true
    };
  }();
  var haskellStyle = /* @__PURE__ */ function() {
    var op$prime = oneOf2([":", "!", "#", "$", "%", "&", "*", "+", ".", "/", "<", "=", ">", "?", "@", "\\", "^", "|", "-", "~"]);
    var v = unGenLanguageDef(emptyDef);
    return {
      commentStart: "{-",
      commentEnd: "-}",
      commentLine: "--",
      nestedComments: true,
      identStart: letter,
      identLetter: alt6(alphaNum)(oneOf2(["_", "'"])),
      opStart: op$prime,
      opLetter: op$prime,
      reservedOpNames: [],
      reservedNames: [],
      caseSensitive: true
    };
  }();
  var haskell98Def = /* @__PURE__ */ function() {
    var v = unGenLanguageDef(haskellStyle);
    return {
      commentStart: v.commentStart,
      commentEnd: v.commentEnd,
      commentLine: v.commentLine,
      nestedComments: v.nestedComments,
      identStart: v.identStart,
      identLetter: v.identLetter,
      opStart: v.opStart,
      opLetter: v.opLetter,
      caseSensitive: v.caseSensitive,
      reservedOpNames: ["::", "..", "=", "\\", "|", "<-", "->", "@", "~", "=>"],
      reservedNames: ["let", "in", "case", "of", "if", "then", "else", "data", "type", "class", "default", "deriving", "do", "import", "infix", "infixl", "infixr", "instance", "module", "newtype", "where", "primitive"]
    };
  }();
  var haskellDef = /* @__PURE__ */ function() {
    return {
      commentStart: haskell98Def.commentStart,
      commentEnd: haskell98Def.commentEnd,
      commentLine: haskell98Def.commentLine,
      nestedComments: haskell98Def.nestedComments,
      identStart: haskell98Def.identStart,
      opStart: haskell98Def.opStart,
      opLetter: haskell98Def.opLetter,
      reservedOpNames: haskell98Def.reservedOpNames,
      caseSensitive: haskell98Def.caseSensitive,
      identLetter: alt6(haskell98Def.identLetter)($$char("#")),
      reservedNames: append(semigroupArray)(haskell98Def.reservedNames)(["foreign", "import", "export", "primitive", "_ccall_", "_casm_", "forall"])
    };
  }();

  // output/Postgrest.MiniLang/index.js
  var show7 = /* @__PURE__ */ show(showNumber);
  var show15 = /* @__PURE__ */ show(showInt);
  var show23 = /* @__PURE__ */ show(showBoolean);
  var map27 = /* @__PURE__ */ map(functorList);
  var alt7 = /* @__PURE__ */ alt(altParserT);
  var applySecond4 = /* @__PURE__ */ applySecond(applyParserT);
  var pure10 = /* @__PURE__ */ pure(applicativeParserT);
  var eq6 = /* @__PURE__ */ eq(/* @__PURE__ */ eqObject(eqJson));
  var compare7 = /* @__PURE__ */ compare(/* @__PURE__ */ ordObject(ordJson));
  var mempty3 = /* @__PURE__ */ mempty(monoidList);
  var ix3 = /* @__PURE__ */ ix(indexForeignObject);
  var unwrap10 = /* @__PURE__ */ unwrap();
  var choiceForget3 = /* @__PURE__ */ choiceForget(monoidFirst);
  var _String3 = /* @__PURE__ */ _String(choiceForget3);
  var _Object3 = /* @__PURE__ */ _Object(choiceForget3);
  var _Number2 = /* @__PURE__ */ _Number(choiceForget3);
  var map113 = /* @__PURE__ */ map(functorMaybe);
  var find3 = /* @__PURE__ */ find(foldableList);
  var eq14 = /* @__PURE__ */ eq(newtypeFieldNameEq);
  var _Boolean2 = /* @__PURE__ */ _Boolean(choiceForget3);
  var _Array3 = /* @__PURE__ */ _Array(choiceForget3);
  var fromFoldable6 = /* @__PURE__ */ fromFoldable2(foldableList);
  var append13 = /* @__PURE__ */ append(semigroupList);
  var toUnfoldable7 = /* @__PURE__ */ toUnfoldable2(unfoldableList);
  var map28 = /* @__PURE__ */ map(functorArray);
  var bind6 = /* @__PURE__ */ bind(bindEither);
  var pure13 = /* @__PURE__ */ pure(applicativeEither);
  var wrap3 = /* @__PURE__ */ wrap();
  var eq62 = /* @__PURE__ */ eq(/* @__PURE__ */ eqArray(eqJson));
  var compare14 = /* @__PURE__ */ compare(ordString);
  var compare23 = /* @__PURE__ */ compare(ordNumber);
  var compare32 = /* @__PURE__ */ compare(ordInt);
  var compare42 = /* @__PURE__ */ compare(ordBoolean);
  var compare52 = /* @__PURE__ */ compare(/* @__PURE__ */ ordArray(ordJson));
  var apply3 = /* @__PURE__ */ apply(applyEither);
  var map32 = /* @__PURE__ */ map(functorEither);
  var traverse3 = /* @__PURE__ */ traverse(traversableList)(applicativeEither);
  var toUnfoldable1 = /* @__PURE__ */ toUnfoldable3(unfoldableArray);
  var map42 = /* @__PURE__ */ map(functorTuple);
  var alt1 = /* @__PURE__ */ alt(altMaybe);
  var fold13 = /* @__PURE__ */ fold(foldableList)(monoidString);
  var composeKleisli3 = /* @__PURE__ */ composeKleisli(bindEither);
  var sum2 = /* @__PURE__ */ sum(foldableList)(semiringNumber);
  var product3 = /* @__PURE__ */ product(foldableList)(semiringNumber);
  var recip2 = /* @__PURE__ */ recip(divisionringNumber);
  var and2 = /* @__PURE__ */ and(foldableList)(heytingAlgebraBoolean);
  var or2 = /* @__PURE__ */ or(foldableList)(heytingAlgebraBoolean);
  var bindFlipped7 = /* @__PURE__ */ bindFlipped(bindEither);
  var ix1 = /* @__PURE__ */ ix(indexArray);
  var mapWithIndex3 = /* @__PURE__ */ mapWithIndex(functorWithIndexList);
  var monoidEndo3 = /* @__PURE__ */ monoidEndo(categoryFn);
  var choiceForget12 = /* @__PURE__ */ choiceForget(monoidEndo3);
  var _Array1 = /* @__PURE__ */ _Array(choiceForget12);
  var traversed2 = /* @__PURE__ */ traversed(traversableArray)(/* @__PURE__ */ wanderForget(monoidEndo3));
  var _Object12 = /* @__PURE__ */ _Object(choiceForget12);
  var apply1 = /* @__PURE__ */ apply(applyParserT);
  var map52 = /* @__PURE__ */ map(functorParserT);
  var bind13 = /* @__PURE__ */ bind(bindParserT);
  var Concat = /* @__PURE__ */ function() {
    function Concat2() {
    }
    ;
    Concat2.value = new Concat2();
    return Concat2;
  }();
  var Sum = /* @__PURE__ */ function() {
    function Sum3() {
    }
    ;
    Sum3.value = new Sum3();
    return Sum3;
  }();
  var Product3 = /* @__PURE__ */ function() {
    function Product4() {
    }
    ;
    Product4.value = new Product4();
    return Product4;
  }();
  var Negate = /* @__PURE__ */ function() {
    function Negate2() {
    }
    ;
    Negate2.value = new Negate2();
    return Negate2;
  }();
  var Inverse = /* @__PURE__ */ function() {
    function Inverse2() {
    }
    ;
    Inverse2.value = new Inverse2();
    return Inverse2;
  }();
  var Conj2 = /* @__PURE__ */ function() {
    function Conj3() {
    }
    ;
    Conj3.value = new Conj3();
    return Conj3;
  }();
  var Disj2 = /* @__PURE__ */ function() {
    function Disj3() {
    }
    ;
    Disj3.value = new Disj3();
    return Disj3;
  }();
  var Round = /* @__PURE__ */ function() {
    function Round2() {
    }
    ;
    Round2.value = new Round2();
    return Round2;
  }();
  var Ceiling = /* @__PURE__ */ function() {
    function Ceiling2() {
    }
    ;
    Ceiling2.value = new Ceiling2();
    return Ceiling2;
  }();
  var Stringify = /* @__PURE__ */ function() {
    function Stringify2() {
    }
    ;
    Stringify2.value = new Stringify2();
    return Stringify2;
  }();
  var Predicate = /* @__PURE__ */ function() {
    function Predicate2() {
    }
    ;
    Predicate2.value = new Predicate2();
    return Predicate2;
  }();
  var Branch = /* @__PURE__ */ function() {
    function Branch2() {
    }
    ;
    Branch2.value = new Branch2();
    return Branch2;
  }();
  var ObjectLookup = /* @__PURE__ */ function() {
    function ObjectLookup2() {
    }
    ;
    ObjectLookup2.value = new ObjectLookup2();
    return ObjectLookup2;
  }();
  var ArrayLookup = /* @__PURE__ */ function() {
    function ArrayLookup2() {
    }
    ;
    ArrayLookup2.value = new ArrayLookup2();
    return ArrayLookup2;
  }();
  var NotEvaluated = /* @__PURE__ */ function() {
    function NotEvaluated2() {
    }
    ;
    NotEvaluated2.value = new NotEvaluated2();
    return NotEvaluated2;
  }();
  var Uncoercible = /* @__PURE__ */ function() {
    function Uncoercible2(value0) {
      this.value0 = value0;
    }
    ;
    Uncoercible2.create = function(value0) {
      return new Uncoercible2(value0);
    };
    return Uncoercible2;
  }();
  var ArgError = /* @__PURE__ */ function() {
    function ArgError2(value0) {
      this.value0 = value0;
    }
    ;
    ArgError2.create = function(value0) {
      return new ArgError2(value0);
    };
    return ArgError2;
  }();
  var ConversionError = /* @__PURE__ */ function() {
    function ConversionError2() {
    }
    ;
    ConversionError2.value = new ConversionError2();
    return ConversionError2;
  }();
  var NotImplemented = /* @__PURE__ */ function() {
    function NotImplemented2() {
    }
    ;
    NotImplemented2.value = new NotImplemented2();
    return NotImplemented2;
  }();
  var Link = /* @__PURE__ */ function() {
    function Link2() {
    }
    ;
    Link2.value = new Link2();
    return Link2;
  }();
  var Image2 = /* @__PURE__ */ function() {
    function Image3() {
    }
    ;
    Image3.value = new Image3();
    return Image3;
  }();
  var ProgressBar = /* @__PURE__ */ function() {
    function ProgressBar2() {
    }
    ;
    ProgressBar2.value = new ProgressBar2();
    return ProgressBar2;
  }();
  var ColorDot = /* @__PURE__ */ function() {
    function ColorDot2() {
    }
    ;
    ColorDot2.value = new ColorDot2();
    return ColorDot2;
  }();
  var AjaxCall = /* @__PURE__ */ function() {
    function AjaxCall2() {
    }
    ;
    AjaxCall2.value = new AjaxCall2();
    return AjaxCall2;
  }();
  var EqAtom = /* @__PURE__ */ function() {
    function EqAtom2() {
    }
    ;
    EqAtom2.value = new EqAtom2();
    return EqAtom2;
  }();
  var NeqAtom = /* @__PURE__ */ function() {
    function NeqAtom2() {
    }
    ;
    NeqAtom2.value = new NeqAtom2();
    return NeqAtom2;
  }();
  var GteAtom = /* @__PURE__ */ function() {
    function GteAtom2() {
    }
    ;
    GteAtom2.value = new GteAtom2();
    return GteAtom2;
  }();
  var GtAtom = /* @__PURE__ */ function() {
    function GtAtom2() {
    }
    ;
    GtAtom2.value = new GtAtom2();
    return GtAtom2;
  }();
  var LteAtom = /* @__PURE__ */ function() {
    function LteAtom2() {
    }
    ;
    LteAtom2.value = new LteAtom2();
    return LteAtom2;
  }();
  var LtAtom = /* @__PURE__ */ function() {
    function LtAtom2() {
    }
    ;
    LtAtom2.value = new LtAtom2();
    return LtAtom2;
  }();
  var ExprString = /* @__PURE__ */ function() {
    function ExprString2(value0) {
      this.value0 = value0;
    }
    ;
    ExprString2.create = function(value0) {
      return new ExprString2(value0);
    };
    return ExprString2;
  }();
  var ExprFloat = /* @__PURE__ */ function() {
    function ExprFloat2(value0) {
      this.value0 = value0;
    }
    ;
    ExprFloat2.create = function(value0) {
      return new ExprFloat2(value0);
    };
    return ExprFloat2;
  }();
  var ExprInt = /* @__PURE__ */ function() {
    function ExprInt2(value0) {
      this.value0 = value0;
    }
    ;
    ExprInt2.create = function(value0) {
      return new ExprInt2(value0);
    };
    return ExprInt2;
  }();
  var ExprBoolean = /* @__PURE__ */ function() {
    function ExprBoolean2(value0) {
      this.value0 = value0;
    }
    ;
    ExprBoolean2.create = function(value0) {
      return new ExprBoolean2(value0);
    };
    return ExprBoolean2;
  }();
  var ExprObject = /* @__PURE__ */ function() {
    function ExprObject2(value0) {
      this.value0 = value0;
    }
    ;
    ExprObject2.create = function(value0) {
      return new ExprObject2(value0);
    };
    return ExprObject2;
  }();
  var ExprArray = /* @__PURE__ */ function() {
    function ExprArray2(value0) {
      this.value0 = value0;
    }
    ;
    ExprArray2.create = function(value0) {
      return new ExprArray2(value0);
    };
    return ExprArray2;
  }();
  var ExprAtom = /* @__PURE__ */ function() {
    function ExprAtom2(value0) {
      this.value0 = value0;
    }
    ;
    ExprAtom2.create = function(value0) {
      return new ExprAtom2(value0);
    };
    return ExprAtom2;
  }();
  var ExprLink = /* @__PURE__ */ function() {
    function ExprLink2(value0) {
      this.value0 = value0;
    }
    ;
    ExprLink2.create = function(value0) {
      return new ExprLink2(value0);
    };
    return ExprLink2;
  }();
  var ExprImage = /* @__PURE__ */ function() {
    function ExprImage2(value0) {
      this.value0 = value0;
    }
    ;
    ExprImage2.create = function(value0) {
      return new ExprImage2(value0);
    };
    return ExprImage2;
  }();
  var ExprProgressBar = /* @__PURE__ */ function() {
    function ExprProgressBar2(value0) {
      this.value0 = value0;
    }
    ;
    ExprProgressBar2.create = function(value0) {
      return new ExprProgressBar2(value0);
    };
    return ExprProgressBar2;
  }();
  var ExprColorDot = /* @__PURE__ */ function() {
    function ExprColorDot2(value0) {
      this.value0 = value0;
    }
    ;
    ExprColorDot2.create = function(value0) {
      return new ExprColorDot2(value0);
    };
    return ExprColorDot2;
  }();
  var ExprAjaxCall = /* @__PURE__ */ function() {
    function ExprAjaxCall2(value0) {
      this.value0 = value0;
    }
    ;
    ExprAjaxCall2.create = function(value0) {
      return new ExprAjaxCall2(value0);
    };
    return ExprAjaxCall2;
  }();
  var LString = /* @__PURE__ */ function() {
    function LString2(value0) {
      this.value0 = value0;
    }
    ;
    LString2.create = function(value0) {
      return new LString2(value0);
    };
    return LString2;
  }();
  var LFloat = /* @__PURE__ */ function() {
    function LFloat2(value0) {
      this.value0 = value0;
    }
    ;
    LFloat2.create = function(value0) {
      return new LFloat2(value0);
    };
    return LFloat2;
  }();
  var LInt = /* @__PURE__ */ function() {
    function LInt2(value0) {
      this.value0 = value0;
    }
    ;
    LInt2.create = function(value0) {
      return new LInt2(value0);
    };
    return LInt2;
  }();
  var LBoolean = /* @__PURE__ */ function() {
    function LBoolean2(value0) {
      this.value0 = value0;
    }
    ;
    LBoolean2.create = function(value0) {
      return new LBoolean2(value0);
    };
    return LBoolean2;
  }();
  var LAtom = /* @__PURE__ */ function() {
    function LAtom2(value0) {
      this.value0 = value0;
    }
    ;
    LAtom2.create = function(value0) {
      return new LAtom2(value0);
    };
    return LAtom2;
  }();
  var FieldVal = /* @__PURE__ */ function() {
    function FieldVal2(value0) {
      this.value0 = value0;
    }
    ;
    FieldVal2.create = function(value0) {
      return new FieldVal2(value0);
    };
    return FieldVal2;
  }();
  var ComputedFieldVal = /* @__PURE__ */ function() {
    function ComputedFieldVal2(value0) {
      this.value0 = value0;
    }
    ;
    ComputedFieldVal2.create = function(value0) {
      return new ComputedFieldVal2(value0);
    };
    return ComputedFieldVal2;
  }();
  var RowNumber = /* @__PURE__ */ function() {
    function RowNumber2() {
    }
    ;
    RowNumber2.value = new RowNumber2();
    return RowNumber2;
  }();
  var Lit = /* @__PURE__ */ function() {
    function Lit2(value0) {
      this.value0 = value0;
    }
    ;
    Lit2.create = function(value0) {
      return new Lit2(value0);
    };
    return Lit2;
  }();
  var ContainerExpression = /* @__PURE__ */ function() {
    function ContainerExpression2(value0) {
      this.value0 = value0;
    }
    ;
    ContainerExpression2.create = function(value0) {
      return new ContainerExpression2(value0);
    };
    return ContainerExpression2;
  }();
  var PrimFun = /* @__PURE__ */ function() {
    function PrimFun2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    PrimFun2.create = function(value0) {
      return function(value1) {
        return new PrimFun2(value0, value1);
      };
    };
    return PrimFun2;
  }();
  var Convert = /* @__PURE__ */ function() {
    function Convert2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Convert2.create = function(value0) {
      return function(value1) {
        return new Convert2(value0, value1);
      };
    };
    return Convert2;
  }();
  var PList = /* @__PURE__ */ function() {
    function PList2(value0) {
      this.value0 = value0;
    }
    ;
    PList2.create = function(value0) {
      return new PList2(value0);
    };
    return PList2;
  }();
  var PAssoc = /* @__PURE__ */ function() {
    function PAssoc2(value0) {
      this.value0 = value0;
    }
    ;
    PAssoc2.create = function(value0) {
      return new PAssoc2(value0);
    };
    return PAssoc2;
  }();
  var tokenParser = /* @__PURE__ */ makeTokenParser(haskellDef);
  var showAtom = function(v) {
    if (v instanceof EqAtom) {
      return ":eq";
    }
    ;
    if (v instanceof NeqAtom) {
      return ":neq";
    }
    ;
    if (v instanceof GteAtom) {
      return ":gte";
    }
    ;
    if (v instanceof GtAtom) {
      return ":gt";
    }
    ;
    if (v instanceof LteAtom) {
      return ":lte";
    }
    ;
    if (v instanceof LtAtom) {
      return ":lt";
    }
    ;
    throw new Error("Failed pattern match at Postgrest.MiniLang (line 96, column 1 - line 96, column 27): " + [v.constructor.name]);
  };
  var prim = /* @__PURE__ */ function() {
    return alt7(applySecond4(string2("concat"))(pure10(Concat.value)))(alt7(applySecond4(string2("sum"))(pure10(Sum.value)))(alt7(applySecond4(string2("product"))(pure10(Product3.value)))(alt7(applySecond4(string2("negate"))(pure10(Negate.value)))(alt7(applySecond4(string2("inverse"))(pure10(Inverse.value)))(alt7(applySecond4(string2("conj"))(pure10(Conj2.value)))(alt7(applySecond4(string2("disj"))(pure10(Disj2.value)))(alt7(applySecond4(string2("round"))(pure10(Round.value)))(alt7(applySecond4(string2("ceiling"))(pure10(Ceiling.value)))(alt7(applySecond4(string2("stringify"))(pure10(Stringify.value)))(alt7(applySecond4(string2("predicate"))(pure10(Predicate.value)))(alt7(applySecond4(string2("branch"))(pure10(Branch.value)))(alt7(applySecond4(string2("object-lookup"))(pure10(ObjectLookup.value)))(applySecond4(string2("array-lookup"))(pure10(ArrayLookup.value)))))))))))))));
  }();
  var newtypeRequestInfoEq = {
    eq: function(x2) {
      return function(y2) {
        return eq6(x2)(y2);
      };
    }
  };
  var eq7 = /* @__PURE__ */ eq(newtypeRequestInfoEq);
  var newtypeRequestInfoOrd = {
    compare: function(x2) {
      return function(y2) {
        return compare7(x2)(y2);
      };
    },
    Eq0: function() {
      return newtypeRequestInfoEq;
    }
  };
  var compare62 = /* @__PURE__ */ compare(newtypeRequestInfoOrd);
  var newContext = function(r) {
    return function(json2) {
      return {
        rownum: r,
        raw: json2,
        computed: mempty3
      };
    };
  };
  var lookupString = function(ctx) {
    return function(name18) {
      return preview(function() {
        var $488 = ix3(unwrap10(name18))(strongForget)(choiceForget3);
        return function($489) {
          return $488(_String3($489));
        };
      }())(ctx.raw);
    };
  };
  var lookupObject = function(ctx) {
    return function(name18) {
      return preview(function() {
        var $490 = ix3(unwrap10(name18))(strongForget)(choiceForget3);
        return function($491) {
          return $490(_Object3($491));
        };
      }())(ctx.raw);
    };
  };
  var lookupFloat = function(ctx) {
    return function(name18) {
      return preview(function() {
        var $492 = ix3(unwrap10(name18))(strongForget)(choiceForget3);
        return function($493) {
          return $492(_Number2($493));
        };
      }())(ctx.raw);
    };
  };
  var lookupComputedResult = function(ctx) {
    return function(name18) {
      return fromMaybe(new Left(NotEvaluated.value))(map113(snd)(find3(function(tup) {
        return eq14(fst(tup))(name18);
      })(ctx.computed)));
    };
  };
  var lookupBoolean = function(ctx) {
    return function(name18) {
      return preview(function() {
        var $494 = ix3(unwrap10(name18))(strongForget)(choiceForget3);
        return function($495) {
          return $494(_Boolean2($495));
        };
      }())(ctx.raw);
    };
  };
  var lookupArray = function(ctx) {
    return function(name18) {
      return preview(function() {
        var $496 = ix3(unwrap10(name18))(strongForget)(choiceForget3);
        return function($497) {
          return $496(_Array3($497));
        };
      }())(ctx.raw);
    };
  };
  var insertComputation = function(name18) {
    return function(res) {
      return function(ctx) {
        return {
          rownum: ctx.rownum,
          raw: ctx.raw,
          computed: new Cons(new Tuple(name18, res), ctx.computed)
        };
      };
    };
  };
  var exprTypeStr = function(v) {
    if (v instanceof ExprString) {
      return "String";
    }
    ;
    if (v instanceof ExprFloat) {
      return "Float";
    }
    ;
    if (v instanceof ExprInt) {
      return "Int";
    }
    ;
    if (v instanceof ExprBoolean) {
      return "Boolean";
    }
    ;
    if (v instanceof ExprObject) {
      return "Object";
    }
    ;
    if (v instanceof ExprArray) {
      return "Array";
    }
    ;
    if (v instanceof ExprAtom) {
      return "Atom";
    }
    ;
    if (v instanceof ExprLink) {
      return "Link";
    }
    ;
    if (v instanceof ExprImage) {
      return "Image";
    }
    ;
    if (v instanceof ExprProgressBar) {
      return "ProgressBar";
    }
    ;
    if (v instanceof ExprColorDot) {
      return "ColorDot";
    }
    ;
    if (v instanceof ExprAjaxCall) {
      return "AjaxCall";
    }
    ;
    throw new Error("Failed pattern match at Postgrest.MiniLang (line 287, column 1 - line 287, column 36): " + [v.constructor.name]);
  };
  var exprJson = function(v) {
    if (v instanceof ExprString) {
      return id(v.value0);
    }
    ;
    if (v instanceof ExprLink) {
      return id(v.value0);
    }
    ;
    if (v instanceof ExprImage) {
      return id(v.value0);
    }
    ;
    if (v instanceof ExprProgressBar) {
      return id(v.value0);
    }
    ;
    if (v instanceof ExprColorDot) {
      return id(v.value0);
    }
    ;
    if (v instanceof ExprAjaxCall) {
      return id(unwrap10(v.value0));
    }
    ;
    if (v instanceof ExprFloat) {
      return id(v.value0);
    }
    ;
    if (v instanceof ExprInt) {
      return id(toNumber2(v.value0));
    }
    ;
    if (v instanceof ExprBoolean) {
      return id(v.value0);
    }
    ;
    if (v instanceof ExprAtom) {
      return jsonNull;
    }
    ;
    if (v instanceof ExprObject) {
      return id(v.value0);
    }
    ;
    if (v instanceof ExprArray) {
      return id(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Postgrest.MiniLang (line 302, column 1 - line 302, column 31): " + [v.constructor.name]);
  };
  var packData = function(xs) {
    var packSingle = function(x2) {
      var computed = catMaybes2(map27(function(v) {
        return either($$const(Nothing.value))(function() {
          var $498 = Tuple.create(unwrap10(v.value0));
          return function($499) {
            return Just.create($498(exprJson($499)));
          };
        }())(v.value1);
      })(x2.computed));
      return id(fromFoldable6(append13(toUnfoldable7(x2.raw))(computed)));
    };
    return id(map28(packSingle)(xs));
  };
  var evalLit = function(v) {
    if (v instanceof LString) {
      return new Right(new ExprString(v.value0));
    }
    ;
    if (v instanceof LFloat) {
      return new Right(new ExprFloat(v.value0));
    }
    ;
    if (v instanceof LInt) {
      return new Right(new ExprInt(v.value0));
    }
    ;
    if (v instanceof LBoolean) {
      return new Right(new ExprBoolean(v.value0));
    }
    ;
    if (v instanceof LAtom) {
      return new Right(new ExprAtom(v.value0));
    }
    ;
    throw new Error("Failed pattern match at Postgrest.MiniLang (line 417, column 1 - line 417, column 48): " + [v.constructor.name]);
  };
  var convertType = /* @__PURE__ */ function() {
    return alt7(applySecond4(string2("link"))(pure10(Link.value)))(alt7(applySecond4(string2("image"))(pure10(Image2.value)))(alt7(applySecond4(string2("progressbar"))(pure10(ProgressBar.value)))(alt7(applySecond4(string2("colordot"))(pure10(ColorDot.value)))(applySecond4(string2("ajax"))(pure10(AjaxCall.value))))));
  }();
  var convertString = function(v) {
    if (v instanceof ExprString) {
      return new Right(v.value0);
    }
    ;
    return new Left(ConversionError.value);
  };
  var lookupComputedString = function(ctx) {
    return function(name18) {
      var memo = lookupComputedResult(ctx)(name18);
      return hush(bind6(memo)(convertString));
    };
  };
  var convertPercentFloat = function(v) {
    if (v instanceof ExprFloat && (v.value0 >= 0 && v.value0 <= 100)) {
      return new Right(v.value0);
    }
    ;
    if (v instanceof ExprInt && (v.value0 >= 0 && v.value0 <= 100)) {
      return new Right(toNumber2(v.value0));
    }
    ;
    return new Left(ConversionError.value);
  };
  var convertObject = function(v) {
    if (v instanceof ExprObject) {
      return new Right(v.value0);
    }
    ;
    return new Left(ConversionError.value);
  };
  var convertInt = function(v) {
    if (v instanceof ExprInt) {
      return new Right(v.value0);
    }
    ;
    return new Left(ConversionError.value);
  };
  var convertFloat = function(v) {
    if (v instanceof ExprFloat) {
      return new Right(v.value0);
    }
    ;
    return new Left(ConversionError.value);
  };
  var lookupComputedFloat = function(ctx) {
    return function(name18) {
      var memo = lookupComputedResult(ctx)(name18);
      return hush(bind6(memo)(convertFloat));
    };
  };
  var convertBoolean = function(v) {
    if (v instanceof ExprBoolean) {
      return new Right(v.value0);
    }
    ;
    return new Left(ConversionError.value);
  };
  var lookupComputedBoolean = function(ctx) {
    return function(name18) {
      var memo = lookupComputedResult(ctx)(name18);
      return hush(bind6(memo)(convertBoolean));
    };
  };
  var convertArray = function(v) {
    if (v instanceof ExprArray) {
      return new Right(v.value0);
    }
    ;
    return new Left(ConversionError.value);
  };
  var convertAjax = function(obj) {
    return pure13(wrap3(obj));
  };
  var atomEq = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof EqAtom && y2 instanceof EqAtom) {
          return true;
        }
        ;
        if (x2 instanceof NeqAtom && y2 instanceof NeqAtom) {
          return true;
        }
        ;
        if (x2 instanceof GteAtom && y2 instanceof GteAtom) {
          return true;
        }
        ;
        if (x2 instanceof GtAtom && y2 instanceof GtAtom) {
          return true;
        }
        ;
        if (x2 instanceof LteAtom && y2 instanceof LteAtom) {
          return true;
        }
        ;
        if (x2 instanceof LtAtom && y2 instanceof LtAtom) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq8 = /* @__PURE__ */ eq(atomEq);
  var atomOrd = {
    compare: function(x2) {
      return function(y2) {
        if (x2 instanceof EqAtom && y2 instanceof EqAtom) {
          return EQ.value;
        }
        ;
        if (x2 instanceof EqAtom) {
          return LT.value;
        }
        ;
        if (y2 instanceof EqAtom) {
          return GT.value;
        }
        ;
        if (x2 instanceof NeqAtom && y2 instanceof NeqAtom) {
          return EQ.value;
        }
        ;
        if (x2 instanceof NeqAtom) {
          return LT.value;
        }
        ;
        if (y2 instanceof NeqAtom) {
          return GT.value;
        }
        ;
        if (x2 instanceof GteAtom && y2 instanceof GteAtom) {
          return EQ.value;
        }
        ;
        if (x2 instanceof GteAtom) {
          return LT.value;
        }
        ;
        if (y2 instanceof GteAtom) {
          return GT.value;
        }
        ;
        if (x2 instanceof GtAtom && y2 instanceof GtAtom) {
          return EQ.value;
        }
        ;
        if (x2 instanceof GtAtom) {
          return LT.value;
        }
        ;
        if (y2 instanceof GtAtom) {
          return GT.value;
        }
        ;
        if (x2 instanceof LteAtom && y2 instanceof LteAtom) {
          return EQ.value;
        }
        ;
        if (x2 instanceof LteAtom) {
          return LT.value;
        }
        ;
        if (y2 instanceof LteAtom) {
          return GT.value;
        }
        ;
        if (x2 instanceof LtAtom && y2 instanceof LtAtom) {
          return EQ.value;
        }
        ;
        throw new Error("Failed pattern match at Postgrest.MiniLang (line 0, column 0 - line 0, column 0): " + [x2.constructor.name, y2.constructor.name]);
      };
    },
    Eq0: function() {
      return atomEq;
    }
  };
  var compare72 = /* @__PURE__ */ compare(atomOrd);
  var exprResultEq = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof ExprString && y2 instanceof ExprString) {
          return x2.value0 === y2.value0;
        }
        ;
        if (x2 instanceof ExprFloat && y2 instanceof ExprFloat) {
          return x2.value0 === y2.value0;
        }
        ;
        if (x2 instanceof ExprInt && y2 instanceof ExprInt) {
          return x2.value0 === y2.value0;
        }
        ;
        if (x2 instanceof ExprBoolean && y2 instanceof ExprBoolean) {
          return x2.value0 === y2.value0;
        }
        ;
        if (x2 instanceof ExprObject && y2 instanceof ExprObject) {
          return eq6(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprArray && y2 instanceof ExprArray) {
          return eq62(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprAtom && y2 instanceof ExprAtom) {
          return eq8(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprLink && y2 instanceof ExprLink) {
          return x2.value0 === y2.value0;
        }
        ;
        if (x2 instanceof ExprImage && y2 instanceof ExprImage) {
          return x2.value0 === y2.value0;
        }
        ;
        if (x2 instanceof ExprProgressBar && y2 instanceof ExprProgressBar) {
          return x2.value0 === y2.value0;
        }
        ;
        if (x2 instanceof ExprColorDot && y2 instanceof ExprColorDot) {
          return x2.value0 === y2.value0;
        }
        ;
        if (x2 instanceof ExprAjaxCall && y2 instanceof ExprAjaxCall) {
          return eq7(x2.value0)(y2.value0);
        }
        ;
        return false;
      };
    }
  };
  var eq9 = /* @__PURE__ */ eq(exprResultEq);
  var notEq1 = /* @__PURE__ */ notEq(exprResultEq);
  var exprResultOrd = {
    compare: function(x2) {
      return function(y2) {
        if (x2 instanceof ExprString && y2 instanceof ExprString) {
          return compare14(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprString) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprString) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprFloat && y2 instanceof ExprFloat) {
          return compare23(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprFloat) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprFloat) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprInt && y2 instanceof ExprInt) {
          return compare32(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprInt) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprInt) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprBoolean && y2 instanceof ExprBoolean) {
          return compare42(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprBoolean) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprBoolean) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprObject && y2 instanceof ExprObject) {
          return compare7(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprObject) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprObject) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprArray && y2 instanceof ExprArray) {
          return compare52(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprArray) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprArray) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprAtom && y2 instanceof ExprAtom) {
          return compare72(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprAtom) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprAtom) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprLink && y2 instanceof ExprLink) {
          return compare14(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprLink) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprLink) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprImage && y2 instanceof ExprImage) {
          return compare14(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprImage) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprImage) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprProgressBar && y2 instanceof ExprProgressBar) {
          return compare23(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprProgressBar) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprProgressBar) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprColorDot && y2 instanceof ExprColorDot) {
          return compare14(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof ExprColorDot) {
          return LT.value;
        }
        ;
        if (y2 instanceof ExprColorDot) {
          return GT.value;
        }
        ;
        if (x2 instanceof ExprAjaxCall && y2 instanceof ExprAjaxCall) {
          return compare62(x2.value0)(y2.value0);
        }
        ;
        throw new Error("Failed pattern match at Postgrest.MiniLang (line 0, column 0 - line 0, column 0): " + [x2.constructor.name, y2.constructor.name]);
      };
    },
    Eq0: function() {
      return exprResultEq;
    }
  };
  var greaterThan2 = /* @__PURE__ */ greaterThan(exprResultOrd);
  var greaterThanOrEq2 = /* @__PURE__ */ greaterThanOrEq(exprResultOrd);
  var lessThan2 = /* @__PURE__ */ lessThan(exprResultOrd);
  var lessThanOrEq2 = /* @__PURE__ */ lessThanOrEq(exprResultOrd);
  var evalTuplit = function(ctx) {
    return function(v) {
      return apply3(map32(Tuple.create)(evalExpression(ctx)(v.value0)))(evalExpression(ctx)(v.value1));
    };
  };
  var evalExpression = function(v) {
    return function(v1) {
      if (v1 instanceof Lit) {
        return evalLit(v1.value0);
      }
      ;
      if (v1 instanceof ContainerExpression && v1.value0 instanceof PList) {
        return bind6(traverse3(evalExpression(v))(v1.value0.value0))(function(subs) {
          return new Right(new ExprArray(toUnfoldable1(map27(exprJson)(subs))));
        });
      }
      ;
      if (v1 instanceof ContainerExpression && v1.value0 instanceof PAssoc) {
        return bind6(traverse3(evalTuplit(v))(v1.value0.value0))(function(subs) {
          return bind6(traverse3(function(v2) {
            return apply3(map32(Tuple.create)(convertString(v2.value0)))(pure13(v2.value1));
          })(subs))(function(subs$prime) {
            var obj = fromFoldable6(map27(map42(exprJson))(subs$prime));
            return new Right(new ExprObject(obj));
          });
        });
      }
      ;
      if (v1 instanceof FieldVal) {
        var expr = alt1(map113(ExprString.create)(lookupString(v)(v1.value0)))(alt1(map113(ExprFloat.create)(lookupFloat(v)(v1.value0)))(alt1(map113(ExprBoolean.create)(lookupBoolean(v)(v1.value0)))(alt1(map113(ExprObject.create)(lookupObject(v)(v1.value0)))(map113(ExprArray.create)(lookupArray(v)(v1.value0))))));
        return maybe(new Left(new Uncoercible(v1.value0)))(Right.create)(expr);
      }
      ;
      if (v1 instanceof ComputedFieldVal) {
        var expr = alt1(map113(ExprString.create)(lookupComputedString(v)(v1.value0)))(alt1(map113(ExprFloat.create)(lookupComputedFloat(v)(v1.value0)))(map113(ExprBoolean.create)(lookupComputedBoolean(v)(v1.value0))));
        return maybe(new Left(new Uncoercible(v1.value0)))(Right.create)(expr);
      }
      ;
      if (v1 instanceof RowNumber) {
        return new Right(new ExprInt(v.rownum));
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Concat) {
        return map32(function($500) {
          return ExprString.create(fold13($500));
        })(traverse3(composeKleisli3(evalExpression(v))(convertString))(v1.value1));
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Sum) {
        return map32(function($501) {
          return ExprFloat.create(sum2($501));
        })(traverse3(composeKleisli3(evalExpression(v))(convertFloat))(v1.value1));
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Product3) {
        return map32(function($502) {
          return ExprFloat.create(product3($502));
        })(traverse3(composeKleisli3(evalExpression(v))(convertFloat))(v1.value1));
      }
      ;
      if (v1 instanceof PrimFun && (v1.value0 instanceof Negate && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil))) {
        return map32(function($503) {
          return ExprFloat.create(-$503);
        })(bind6(evalExpression(v)(v1.value1.value0))(convertFloat));
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Negate) {
        return new Left(new ArgError("negate takes one arg"));
      }
      ;
      if (v1 instanceof PrimFun && (v1.value0 instanceof Inverse && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil))) {
        return map32(function($504) {
          return ExprFloat.create(recip2($504));
        })(bind6(evalExpression(v)(v1.value1.value0))(convertFloat));
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Inverse) {
        return new Left(new ArgError("inverse takes one arg"));
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Conj2) {
        return map32(function($505) {
          return ExprBoolean.create(and2($505));
        })(traverse3(composeKleisli3(evalExpression(v))(convertBoolean))(v1.value1));
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Disj2) {
        return map32(function($506) {
          return ExprBoolean.create(or2($506));
        })(traverse3(composeKleisli3(evalExpression(v))(convertBoolean))(v1.value1));
      }
      ;
      if (v1 instanceof PrimFun && (v1.value0 instanceof Round && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil))) {
        return map32(function($507) {
          return ExprInt.create(round2($507));
        })(bind6(evalExpression(v)(v1.value1.value0))(convertFloat));
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Round) {
        return new Left(new ArgError("round takes one arg"));
      }
      ;
      if (v1 instanceof PrimFun && (v1.value0 instanceof Ceiling && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil))) {
        return map32(function($508) {
          return ExprInt.create(ceil2($508));
        })(bind6(evalExpression(v)(v1.value1.value0))(convertFloat));
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Ceiling) {
        return new Left(new ArgError("ceiling takes one arg"));
      }
      ;
      if (v1 instanceof PrimFun && (v1.value0 instanceof Stringify && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil))) {
        return bind6(evalExpression(v)(v1.value1.value0))(function(sub3) {
          if (sub3 instanceof ExprFloat) {
            return new Right(new ExprString(show7(sub3.value0)));
          }
          ;
          if (sub3 instanceof ExprInt) {
            return new Right(new ExprString(show15(sub3.value0)));
          }
          ;
          if (sub3 instanceof ExprBoolean) {
            return new Right(new ExprString(show23(sub3.value0)));
          }
          ;
          return new Left(new ArgError("cannot stringify"));
        });
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Stringify) {
        return new Left(new ArgError("stringify takes one arg"));
      }
      ;
      if (v1 instanceof PrimFun && (v1.value0 instanceof Predicate && (v1.value1 instanceof Cons && (v1.value1.value0 instanceof Lit && v1.value1.value0.value0 instanceof LAtom)))) {
        var f = function() {
          if (v1.value1.value0.value0.value0 instanceof EqAtom) {
            return function(r1) {
              return function(r2) {
                return new ExprBoolean(eq9(r1)(r2));
              };
            };
          }
          ;
          if (v1.value1.value0.value0.value0 instanceof NeqAtom) {
            return function(r1) {
              return function(r2) {
                return new ExprBoolean(notEq1(r1)(r2));
              };
            };
          }
          ;
          if (v1.value1.value0.value0.value0 instanceof GtAtom) {
            return function(r1) {
              return function(r2) {
                return new ExprBoolean(greaterThan2(r1)(r2));
              };
            };
          }
          ;
          if (v1.value1.value0.value0.value0 instanceof GteAtom) {
            return function(r1) {
              return function(r2) {
                return new ExprBoolean(greaterThanOrEq2(r1)(r2));
              };
            };
          }
          ;
          if (v1.value1.value0.value0.value0 instanceof LtAtom) {
            return function(r1) {
              return function(r2) {
                return new ExprBoolean(lessThan2(r1)(r2));
              };
            };
          }
          ;
          if (v1.value1.value0.value0.value0 instanceof LteAtom) {
            return function(r1) {
              return function(r2) {
                return new ExprBoolean(lessThanOrEq2(r1)(r2));
              };
            };
          }
          ;
          throw new Error("Failed pattern match at Postgrest.MiniLang (line 518, column 11 - line 524, column 58): " + [v1.value1.value0.value0.value0.constructor.name]);
        }();
        return evalBinaryPredicate(v)(v1.value1.value0.value0.value0)(v1.value1.value1)(f);
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Predicate) {
        return new Left(new ArgError("predicates takes at least an atom arg and other arguments"));
      }
      ;
      if (v1 instanceof PrimFun && (v1.value0 instanceof Branch && v1.value1 instanceof Cons)) {
        return bind6(evalExpression(v)(v1.value1.value0))(function(sub0) {
          var $420 = odd(length3(v1.value1.value1));
          if ($420) {
            return new Left(new ArgError("branches must alternate predicates and expressions (odd number of params)"));
          }
          ;
          return evalBranchMatching(v)(sub0)(v1.value1.value1);
        });
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof Branch) {
        return new Left(new ArgError("predicates takes at least one default value argument"));
      }
      ;
      if (v1 instanceof PrimFun && (v1.value0 instanceof ObjectLookup && (v1.value1 instanceof Cons && (v1.value1.value1 instanceof Cons && (v1.value1.value1.value1 instanceof Cons && v1.value1.value1.value1.value1 instanceof Nil))))) {
        return bind6(bindFlipped7(convertObject)(evalExpression(v)(v1.value1.value0)))(function(obj) {
          return bind6(bindFlipped7(convertString)(evalExpression(v)(v1.value1.value1.value0)))(function(key) {
            var mexpr = alt1(map113(ExprString.create)(preview(function() {
              var $509 = ix3(key)(strongForget)(choiceForget3);
              return function($510) {
                return $509(_String3($510));
              };
            }())(obj)))(alt1(map113(ExprFloat.create)(preview(function() {
              var $511 = ix3(key)(strongForget)(choiceForget3);
              return function($512) {
                return $511(_Number2($512));
              };
            }())(obj)))(alt1(map113(ExprBoolean.create)(preview(function() {
              var $513 = ix3(key)(strongForget)(choiceForget3);
              return function($514) {
                return $513(_Boolean2($514));
              };
            }())(obj)))(alt1(map113(ExprObject.create)(preview(function() {
              var $515 = ix3(key)(strongForget)(choiceForget3);
              return function($516) {
                return $515(_Object3($516));
              };
            }())(obj)))(map113(ExprArray.create)(preview(function() {
              var $517 = ix3(key)(strongForget)(choiceForget3);
              return function($518) {
                return $517(_Array3($518));
              };
            }())(obj))))));
            return bind6(evalExpression(v)(v1.value1.value1.value1.value0))(function(def) {
              if (mexpr instanceof Nothing) {
                return new Right(def);
              }
              ;
              if (mexpr instanceof Just) {
                var t1 = exprTypeStr(mexpr.value0);
                var t2 = exprTypeStr(def);
                var $428 = t1 !== t2;
                if ($428) {
                  return new Left(new ArgError("looked-up and default parameter types mismatch: " + (t1 + (" vs " + t2))));
                }
                ;
                return new Right(mexpr.value0);
              }
              ;
              throw new Error("Failed pattern match at Postgrest.MiniLang (line 551, column 3 - line 559, column 22): " + [mexpr.constructor.name]);
            });
          });
        });
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof ObjectLookup) {
        return new Left(new ArgError("object-lookup takes three arguments: object, key, and default value"));
      }
      ;
      if (v1 instanceof PrimFun && (v1.value0 instanceof ArrayLookup && (v1.value1 instanceof Cons && (v1.value1.value1 instanceof Cons && (v1.value1.value1.value1 instanceof Cons && v1.value1.value1.value1.value1 instanceof Nil))))) {
        return bind6(bindFlipped7(convertArray)(evalExpression(v)(v1.value1.value0)))(function(arr) {
          return bind6(bindFlipped7(convertInt)(evalExpression(v)(v1.value1.value1.value0)))(function(key) {
            var mexpr = alt1(map113(ExprString.create)(preview(function() {
              var $519 = ix1(key)(strongForget)(choiceForget3);
              return function($520) {
                return $519(_String3($520));
              };
            }())(arr)))(alt1(map113(ExprFloat.create)(preview(function() {
              var $521 = ix1(key)(strongForget)(choiceForget3);
              return function($522) {
                return $521(_Number2($522));
              };
            }())(arr)))(alt1(map113(ExprBoolean.create)(preview(function() {
              var $523 = ix1(key)(strongForget)(choiceForget3);
              return function($524) {
                return $523(_Boolean2($524));
              };
            }())(arr)))(alt1(map113(ExprObject.create)(preview(function() {
              var $525 = ix1(key)(strongForget)(choiceForget3);
              return function($526) {
                return $525(_Object3($526));
              };
            }())(arr)))(map113(ExprArray.create)(preview(function() {
              var $527 = ix1(key)(strongForget)(choiceForget3);
              return function($528) {
                return $527(_Array3($528));
              };
            }())(arr))))));
            return bind6(evalExpression(v)(v1.value1.value1.value1.value0))(function(def) {
              if (mexpr instanceof Nothing) {
                return new Right(def);
              }
              ;
              if (mexpr instanceof Just) {
                var t1 = exprTypeStr(mexpr.value0);
                var t2 = exprTypeStr(def);
                var $441 = t1 !== t2;
                if ($441) {
                  return new Left(new ArgError("looked-up and default parameter types mismatch: " + (t1 + (" vs " + t2))));
                }
                ;
                return new Right(mexpr.value0);
              }
              ;
              throw new Error("Failed pattern match at Postgrest.MiniLang (line 576, column 3 - line 584, column 22): " + [mexpr.constructor.name]);
            });
          });
        });
      }
      ;
      if (v1 instanceof PrimFun && v1.value0 instanceof ArrayLookup) {
        return new Left(new ArgError("array-lookup takes three arguments: array, index, and default value"));
      }
      ;
      if (v1 instanceof Convert && v1.value0 instanceof Link) {
        return map32(ExprLink.create)(bindFlipped7(convertString)(evalExpression(v)(v1.value1)));
      }
      ;
      if (v1 instanceof Convert && v1.value0 instanceof Image2) {
        return map32(ExprImage.create)(bindFlipped7(convertString)(evalExpression(v)(v1.value1)));
      }
      ;
      if (v1 instanceof Convert && v1.value0 instanceof ProgressBar) {
        return map32(ExprProgressBar.create)(bindFlipped7(convertPercentFloat)(evalExpression(v)(v1.value1)));
      }
      ;
      if (v1 instanceof Convert && v1.value0 instanceof ColorDot) {
        return map32(ExprColorDot.create)(bindFlipped7(convertString)(evalExpression(v)(v1.value1)));
      }
      ;
      if (v1 instanceof Convert && v1.value0 instanceof AjaxCall) {
        return bind6(bindFlipped7(convertObject)(evalExpression(v)(v1.value1)))(function(obj) {
          return map32(ExprAjaxCall.create)(convertAjax(obj));
        });
      }
      ;
      throw new Error("Failed pattern match at Postgrest.MiniLang (line 428, column 1 - line 428, column 71): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var evalBranchMatching = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nil) {
          return new Right(v1);
        }
        ;
        if (v2 instanceof Cons && v2.value1 instanceof Cons) {
          return bind6(evalExpression(v)(v2.value1.value0))(function(sub1) {
            var t0 = exprTypeStr(v1);
            var t1 = exprTypeStr(sub1);
            var $466 = t0 === t1;
            if ($466) {
              return bind6(evalExpression(v)(v2.value0))(function(subPred) {
                if (subPred instanceof ExprBoolean) {
                  if (subPred.value0) {
                    return new Right(sub1);
                  }
                  ;
                  return evalBranchMatching(v)(v1)(v2.value1.value1);
                }
                ;
                return new Left(new ArgError("branches must alternate predicates and expressions (predicate returns a " + (exprTypeStr(subPred) + " instead of a Boolean)")));
              });
            }
            ;
            return new Left(new ArgError("branches parameter types mismatch: " + (t0 + (" vs " + t1))));
          });
        }
        ;
        if (v2 instanceof Cons && v2.value1 instanceof Nil) {
          return new Left(new ArgError("branches must alternate predicates and expressions (leftover param)"));
        }
        ;
        throw new Error("Failed pattern match at Postgrest.MiniLang (line 640, column 1 - line 640, column 94): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var evalBinaryPredicate = function(ctx) {
    return function(a2) {
      return function(xs) {
        return function(f) {
          if (xs instanceof Cons && (xs.value1 instanceof Cons && xs.value1.value1 instanceof Nil)) {
            return bind6(evalExpression(ctx)(xs.value0))(function(sub1) {
              return bind6(evalExpression(ctx)(xs.value1.value0))(function(sub22) {
                var t1 = exprTypeStr(sub1);
                var t2 = exprTypeStr(sub22);
                var $477 = t1 === t2;
                if ($477) {
                  return new Right(f(sub1)(sub22));
                }
                ;
                return new Left(new ArgError(showAtom(a2) + (" predicate parameter types mismatch: " + (t1 + (" vs " + t2)))));
              });
            });
          }
          ;
          return new Left(new ArgError(showAtom(a2) + " predicates takes exactly two arguments"));
        };
      };
    };
  };
  var reduceExpressions = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v instanceof Nil) {
          $tco_done = true;
          return v1;
        }
        ;
        if (v instanceof Cons) {
          var res0 = evalExpression(v1)(v.value0.value1);
          $tco_var_v = v.value1;
          $copy_v1 = insertComputation(v.value0.value0)(res0)(v1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Postgrest.MiniLang (line 605, column 1 - line 605, column 77): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  var contextualizeDataRows = function(json2) {
    return function(exprs) {
      var topsortedExprs = reverse2(exprs);
      return toUnfoldable1(mapWithIndex3(function(i2) {
        return function(o) {
          return reduceExpressions(topsortedExprs)(newContext(i2)(o));
        };
      })(toListOf(function($529) {
        return _Array1(traversed2(_Object12($529)));
      })(json2)));
    };
  };
  var atom = /* @__PURE__ */ function() {
    return alt7(applySecond4(string2(":eq"))(pure10(EqAtom.value)))(alt7(applySecond4(string2(":neq"))(pure10(NeqAtom.value)))(alt7(applySecond4(string2(":gte"))(pure10(GteAtom.value)))(alt7(applySecond4(string2(":gt"))(pure10(GtAtom.value)))(alt7(applySecond4(string2(":lte"))(pure10(LteAtom.value)))(applySecond4(string2(":lt"))(pure10(LtAtom.value)))))));
  }();
  var expression = /* @__PURE__ */ function() {
    var tupleexpr = function(expr) {
      return apply1(map52(Tuple.create)(expr))(applySecond4($$char(":"))(expr));
    };
    var rownumber = bind13(string2("$row-number"))(function() {
      return pure10(RowNumber.value);
    });
    var primFun = function(expr) {
      return apply1(map52(PrimFun.create)(prim))(tokenParser.parens(tokenParser.commaSep(expr)));
    };
    var plist = function(expr) {
      return map52(PList.create)(tokenParser.brackets(tokenParser.commaSep(expr)));
    };
    var passoc = function(expr) {
      return map52(PAssoc.create)(tokenParser.braces(tokenParser.commaSep(tupleexpr(expr))));
    };
    var litString = map52(LString.create)(tokenParser.stringLiteral);
    var litInt = map52(LInt.create)(tokenParser.decimal);
    var litFloat = map52(LFloat.create)(tokenParser["float"]);
    var litBoolean = alt7(applySecond4(string2("true"))(pure10(new LBoolean(true))))(applySecond4(string2("false"))(pure10(new LBoolean(false))));
    var litAtom = map52(LAtom.create)(atom);
    var lit$prime = alt7(litString)(alt7($$try4(litFloat))(alt7(litInt)(alt7(litBoolean)(litAtom))));
    var lit = map52(Lit.create)(lit$prime);
    var fieldVal = bind13(string2("$field:"))(function() {
      return map52(function($530) {
        return FieldVal.create(FieldName($530));
      })(tokenParser.stringLiteral);
    });
    var convert2 = function(expr) {
      return apply1(map52(Convert.create)(convertType))(tokenParser.parens(expr));
    };
    var containerExpr = function(expr) {
      return map52(ContainerExpression.create)(alt7(plist(expr))(passoc(expr)));
    };
    var computedFieldVal = bind13(string2("$computed-field:"))(function() {
      return map52(function($531) {
        return ComputedFieldVal.create(FieldName($531));
      })(tokenParser.stringLiteral);
    });
    return fix(lazyParserT)(function(expr) {
      return alt7(primFun(expr))(alt7(convert2(expr))(alt7(fieldVal)(alt7(computedFieldVal)(alt7(rownumber)(alt7(lit)(containerExpr(expr)))))));
    });
  }();
  var parseExpression = function(str) {
    return runParser(str)(expression);
  };

  // output/VegaLite.Vega/foreign.js
  var embed2 = function(sel) {
    return function(chart2) {
      return function(opts) {
        return function(f) {
          return function() {
            return vegaEmbed(sel, chart2, opts).then(function(res) {
              res.view.addEventListener("click", function(event, item) {
                f("click", event, item)();
              });
            });
          };
        };
      };
    };
  };

  // output/Data.Argonaut.Encode.Encoders/index.js
  var extend2 = function(encoder) {
    return function(v) {
      var $40 = caseJsonObject(jsonSingletonObject(v.value0)(v.value1))(function() {
        var $42 = insert(v.value0)(v.value1);
        return function($43) {
          return id($42($43));
        };
      }());
      return function($41) {
        return $40(encoder($41));
      };
    };
  };
  var encodeString = id;
  var assoc = function(encoder) {
    return function(k) {
      var $64 = Tuple.create(k);
      return function($65) {
        return $64(encoder($65));
      };
    };
  };

  // output/Record/index.js
  var get3 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function(l) {
        return function(r) {
          return unsafeGet(reflectSymbol2(l))(r);
        };
      };
    };
  };

  // output/Data.Argonaut.Encode.Class/index.js
  var gEncodeJsonNil = {
    gEncodeJson: function(v) {
      return function(v1) {
        return empty;
      };
    }
  };
  var gEncodeJson = function(dict) {
    return dict.gEncodeJson;
  };
  var encodeRecord = function(dictGEncodeJson) {
    var gEncodeJson1 = gEncodeJson(dictGEncodeJson);
    return function() {
      return {
        encodeJson: function(rec) {
          return id(gEncodeJson1(rec)($$Proxy.value));
        }
      };
    };
  };
  var encodeJsonJson = {
    encodeJson: /* @__PURE__ */ identity(categoryFn)
  };
  var encodeJsonJString = {
    encodeJson: encodeString
  };
  var encodeJson = function(dict) {
    return dict.encodeJson;
  };
  var gEncodeJsonCons = function(dictEncodeJson) {
    var encodeJson1 = encodeJson(dictEncodeJson);
    return function(dictGEncodeJson) {
      var gEncodeJson1 = gEncodeJson(dictGEncodeJson);
      return function(dictIsSymbol) {
        var reflectSymbol2 = reflectSymbol(dictIsSymbol);
        var get11 = get3(dictIsSymbol)();
        return function() {
          return {
            gEncodeJson: function(row) {
              return function(v) {
                return insert(reflectSymbol2($$Proxy.value))(encodeJson1(get11($$Proxy.value)(row)))(gEncodeJson1(row)($$Proxy.value));
              };
            }
          };
        };
      };
    };
  };

  // output/Data.Argonaut.Encode.Combinators/index.js
  var extend3 = function(dictEncodeJson) {
    return extend2(encodeJson(dictEncodeJson));
  };
  var assoc2 = function(dictEncodeJson) {
    return assoc(encodeJson(dictEncodeJson));
  };

  // output/VegaLite.Vega/index.js
  var extend4 = /* @__PURE__ */ extend3(encodeJsonJson);
  var assoc3 = /* @__PURE__ */ assoc2(encodeJsonJString);
  var monoidEndo4 = /* @__PURE__ */ monoidEndo(categoryFn);
  var fold4 = /* @__PURE__ */ fold(foldableArray)(monoidEndo4);
  var assoc1 = /* @__PURE__ */ assoc2(encodeJsonJson);
  var Nominal = /* @__PURE__ */ function() {
    function Nominal2() {
    }
    ;
    Nominal2.value = new Nominal2();
    return Nominal2;
  }();
  var Ordinal = /* @__PURE__ */ function() {
    function Ordinal2() {
    }
    ;
    Ordinal2.value = new Ordinal2();
    return Ordinal2;
  }();
  var Quantitative = /* @__PURE__ */ function() {
    function Quantitative2() {
    }
    ;
    Quantitative2.value = new Quantitative2();
    return Quantitative2;
  }();
  var Temporal = /* @__PURE__ */ function() {
    function Temporal2() {
    }
    ;
    Temporal2.value = new Temporal2();
    return Temporal2;
  }();
  var RawFieldType = /* @__PURE__ */ function() {
    function RawFieldType2(value0) {
      this.value0 = value0;
    }
    ;
    RawFieldType2.create = function(value0) {
      return new RawFieldType2(value0);
    };
    return RawFieldType2;
  }();
  var Mean = /* @__PURE__ */ function() {
    function Mean2() {
    }
    ;
    Mean2.value = new Mean2();
    return Mean2;
  }();
  var Sum2 = /* @__PURE__ */ function() {
    function Sum3() {
    }
    ;
    Sum3.value = new Sum3();
    return Sum3;
  }();
  var Median = /* @__PURE__ */ function() {
    function Median2() {
    }
    ;
    Median2.value = new Median2();
    return Median2;
  }();
  var Min2 = /* @__PURE__ */ function() {
    function Min3() {
    }
    ;
    Min3.value = new Min3();
    return Min3;
  }();
  var Max2 = /* @__PURE__ */ function() {
    function Max3() {
    }
    ;
    Max3.value = new Max3();
    return Max3;
  }();
  var Count = /* @__PURE__ */ function() {
    function Count2() {
    }
    ;
    Count2.value = new Count2();
    return Count2;
  }();
  var RawAggregate = /* @__PURE__ */ function() {
    function RawAggregate2(value0) {
      this.value0 = value0;
    }
    ;
    RawAggregate2.create = function(value0) {
      return new RawAggregate2(value0);
    };
    return RawAggregate2;
  }();
  var tick = function(obj) {
    return extend4(assoc3("mark")("tick"))(obj);
  };
  var specifyType = function(v) {
    if (v instanceof Nominal) {
      return "nominal";
    }
    ;
    if (v instanceof Ordinal) {
      return "ordinal";
    }
    ;
    if (v instanceof Quantitative) {
      return "quantitative";
    }
    ;
    if (v instanceof Temporal) {
      return "temporal";
    }
    ;
    if (v instanceof RawFieldType) {
      return v.value0;
    }
    ;
    throw new Error("Failed pattern match at VegaLite.Vega (line 59, column 1 - line 59, column 35): " + [v.constructor.name]);
  };
  var type_4 = function(ty) {
    return function(obj) {
      return extend4(assoc3("type")(specifyType(ty)))(obj);
    };
  };
  var specifyAggregate = function(v) {
    if (v instanceof Mean) {
      return "mean";
    }
    ;
    if (v instanceof Sum2) {
      return "sum";
    }
    ;
    if (v instanceof Median) {
      return "median";
    }
    ;
    if (v instanceof Min2) {
      return "min";
    }
    ;
    if (v instanceof Max2) {
      return "max";
    }
    ;
    if (v instanceof Count) {
      return "count";
    }
    ;
    if (v instanceof RawAggregate) {
      return v.value0;
    }
    ;
    throw new Error("Failed pattern match at VegaLite.Vega (line 78, column 1 - line 78, column 40): " + [v.constructor.name]);
  };
  var rect = function(obj) {
    return extend4(assoc3("mark")("rect"))(obj);
  };
  var point = function(obj) {
    return extend4(assoc3("mark")("point"))(obj);
  };
  var name5 = function(str) {
    return function(obj) {
      return extend4(assoc3("field")(str))(obj);
    };
  };
  var line = function(obj) {
    return extend4(assoc3("mark")("line"))(obj);
  };
  var encoding = function(xs) {
    var v = fold4(xs);
    return function(obj) {
      return extend4(assoc1("encoding")(v(jsonEmptyObject)))(obj);
    };
  };
  var defaultOpts = /* @__PURE__ */ encodeJson(/* @__PURE__ */ encodeRecord(/* @__PURE__ */ gEncodeJsonCons(encodeJsonJString)(gEncodeJsonNil)({
    reflectSymbol: function() {
      return "theme";
    }
  })())())({
    theme: "urbaninstitute"
  });
  var defaultChart2 = function(xs) {
    return function(rows5) {
      var v = fold4(xs);
      return extend4(assoc1("data")(extend4(assoc1("values")(rows5))(jsonEmptyObject)))(v(jsonEmptyObject));
    };
  };
  var build = function(dictFoldable) {
    var fold14 = fold(dictFoldable)(monoidEndo4);
    return function(xs) {
      var v = fold14(xs);
      return v(jsonEmptyObject);
    };
  };
  var build1 = /* @__PURE__ */ build(foldableArray);
  var color = function(fld) {
    return function(obj) {
      return extend4(assoc1("color")(build1(fld)))(obj);
    };
  };
  var facet = function(fld) {
    return function(obj) {
      return extend4(assoc1("facet")(build1(fld)))(obj);
    };
  };
  var theta = function(fld) {
    return function(obj) {
      return extend4(assoc1("theta")(build1(fld)))(obj);
    };
  };
  var x = function(fld) {
    return function(obj) {
      return extend4(assoc1("x")(build1(fld)))(obj);
    };
  };
  var y = function(fld) {
    return function(obj) {
      return extend4(assoc1("y")(build1(fld)))(obj);
    };
  };
  var boxplot = function(obj) {
    return extend4(assoc3("mark")("boxplot"))(obj);
  };
  var bar = function(obj) {
    return extend4(assoc3("mark")("bar"))(obj);
  };
  var area2 = function(obj) {
    return extend4(assoc3("mark")("area"))(obj);
  };
  var arc = function(obj) {
    return extend4(assoc3("mark")("arc"))(obj);
  };
  var aggregates = /* @__PURE__ */ function() {
    return [Count.value, Sum2.value, Min2.value, Max2.value, Mean.value, Median.value];
  }();
  var aggregate = function(agg) {
    return function(obj) {
      return extend4(assoc3("aggregate")(specifyAggregate(agg)))(obj);
    };
  };

  // output/Postgrest.ChartDisplay/index.js
  var pure11 = /* @__PURE__ */ pure(applicativeHalogenM);
  var choiceForget4 = /* @__PURE__ */ choiceForget(monoidFirst);
  var _Object4 = /* @__PURE__ */ _Object(choiceForget4);
  var ix4 = /* @__PURE__ */ ix(indexForeignObject);
  var discard2 = /* @__PURE__ */ discard(discardUnit);
  var pure14 = /* @__PURE__ */ pure(applicativeEffect);
  var bind7 = /* @__PURE__ */ bind(bindHalogenM);
  var get4 = /* @__PURE__ */ get(monadStateHalogenM);
  var apply4 = /* @__PURE__ */ apply(applyMaybe);
  var map29 = /* @__PURE__ */ map(functorMaybe);
  var discard22 = /* @__PURE__ */ discard2(bindHalogenM);
  var modify_3 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var UpdateSpec = /* @__PURE__ */ function() {
    function UpdateSpec2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    UpdateSpec2.create = function(value0) {
      return function(value1) {
        return new UpdateSpec2(value0, value1);
      };
    };
    return UpdateSpec2;
  }();
  var ReceiveRows = /* @__PURE__ */ function() {
    function ReceiveRows5(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ReceiveRows5.create = function(value0) {
      return function(value1) {
        return new ReceiveRows5(value0, value1);
      };
    };
    return ReceiveRows5;
  }();
  var Clear = /* @__PURE__ */ function() {
    function Clear4(value0) {
      this.value0 = value0;
    }
    ;
    Clear4.create = function(value0) {
      return new Clear4(value0);
    };
    return Clear4;
  }();
  var Clicked = /* @__PURE__ */ function() {
    function Clicked2(value0) {
      this.value0 = value0;
    }
    ;
    Clicked2.create = function(value0) {
      return new Clicked2(value0);
    };
    return Clicked2;
  }();
  var VegaClick = /* @__PURE__ */ function() {
    function VegaClick2(value0) {
      this.value0 = value0;
    }
    ;
    VegaClick2.create = function(value0) {
      return new VegaClick2(value0);
    };
    return VegaClick2;
  }();
  var render = function(state3) {
    return div2([id3(state3.htmlID)])([]);
  };
  var newState = function(input3) {
    return {
      htmlID: input3.htmlID,
      dataRows: Nothing.value,
      vegaSpec: Nothing.value,
      clickSubscription: Nothing.value
    };
  };
  var handleAction = function(dictMonadAff) {
    return function(v) {
      if (v.value0 instanceof Nothing) {
        return pure11(unit);
      }
      ;
      if (v.value0 instanceof Just) {
        return raise(new Clicked(v.value0.value0));
      }
      ;
      throw new Error("Failed pattern match at Postgrest.ChartDisplay (line 69, column 16 - line 73, column 28): " + [v.constructor.name]);
    };
  };
  var embedEffectSource = function(htmlID) {
    return function(chart2) {
      var onVegaClick = function(f) {
        return function(evname) {
          return function(event) {
            return function(obj) {
              return f(preview(function() {
                var $52 = ix4("datum")(strongForget)(choiceForget4);
                return function($53) {
                  return _Object4($52($53));
                };
              }())(obj));
            };
          };
        };
      };
      return makeEmitter(function(emitter) {
        var f = function($54) {
          return emitter(VegaClick.create($54));
        };
        return function __do2() {
          embed2("#" + htmlID)(chart2)(defaultOpts)(mkFn3(onVegaClick(f)))();
          return pure14(unit);
        };
      });
    };
  };
  var handleQuery = function(dictMonadAff) {
    var dorefresh = bind7(get4)(function(st) {
      var v = apply4(map29(defaultChart2)(st.vegaSpec))(map29(packData)(st.dataRows));
      if (v instanceof Nothing) {
        return pure11(unit);
      }
      ;
      if (v instanceof Just) {
        return bind7(subscribe2(embedEffectSource(st.htmlID)(v.value0)))(function(sid) {
          return discard22(maybe(pure11(unit))(unsubscribe2)(st.clickSubscription))(function() {
            return modify_3(function(v1) {
              var $33 = {};
              for (var $34 in v1) {
                if ({}.hasOwnProperty.call(v1, $34)) {
                  $33[$34] = v1[$34];
                }
                ;
              }
              ;
              $33.clickSubscription = new Just(sid);
              return $33;
            });
          });
        });
      }
      ;
      throw new Error("Failed pattern match at Postgrest.ChartDisplay (line 93, column 7 - line 98, column 54): " + [v.constructor.name]);
    });
    return function(v) {
      if (v instanceof UpdateSpec) {
        return discard22(modify_3(function(v1) {
          var $38 = {};
          for (var $39 in v1) {
            if ({}.hasOwnProperty.call(v1, $39)) {
              $38[$39] = v1[$39];
            }
            ;
          }
          ;
          $38.vegaSpec = new Just(v.value0);
          return $38;
        }))(function() {
          return discard22(dorefresh)(function() {
            return pure11(new Just(v.value1));
          });
        });
      }
      ;
      if (v instanceof ReceiveRows) {
        return discard22(modify_3(function(v1) {
          var $43 = {};
          for (var $44 in v1) {
            if ({}.hasOwnProperty.call(v1, $44)) {
              $43[$44] = v1[$44];
            }
            ;
          }
          ;
          $43.dataRows = new Just(v.value0);
          return $43;
        }))(function() {
          return discard22(dorefresh)(function() {
            return pure11(new Just(v.value1));
          });
        });
      }
      ;
      if (v instanceof Clear) {
        return discard22(modify_3(function(v1) {
          var $48 = {};
          for (var $49 in v1) {
            if ({}.hasOwnProperty.call(v1, $49)) {
              $48[$49] = v1[$49];
            }
            ;
          }
          ;
          $48.dataRows = Nothing.value;
          $48.vegaSpec = Nothing.value;
          return $48;
        }))(function() {
          return pure11(new Just(v.value0));
        });
      }
      ;
      throw new Error("Failed pattern match at Postgrest.ChartDisplay (line 78, column 15 - line 89, column 18): " + [v.constructor.name]);
    };
  };
  var chartDisplay = function(dictMonadAff) {
    return mkComponent({
      initialState: newState,
      render,
      "eval": mkEval({
        receive: defaultEval.receive,
        initialize: defaultEval.initialize,
        finalize: defaultEval.finalize,
        handleQuery: handleQuery(dictMonadAff),
        handleAction: handleAction(dictMonadAff)
      })
    });
  };

  // output/Postgrest.ChartPrefs/index.js
  var tickPlot = function(axes) {
    return [tick, encoding(axes)];
  };
  var scatterMap = function(axes) {
    return [rect, encoding(axes)];
  };
  var scatter = function(axes) {
    return [point, encoding(axes)];
  };
  var preferredFieldType = function(v) {
    if (v === "character varying") {
      return Nominal.value;
    }
    ;
    if (v === "varchar") {
      return Nominal.value;
    }
    ;
    if (v === "character") {
      return Nominal.value;
    }
    ;
    if (v === "char") {
      return Nominal.value;
    }
    ;
    if (v === "text") {
      return Nominal.value;
    }
    ;
    if (v === "serial") {
      return Ordinal.value;
    }
    ;
    if (v === "bigserial") {
      return Ordinal.value;
    }
    ;
    if (v === "uuid") {
      return Ordinal.value;
    }
    ;
    if (v === "smallint") {
      return Quantitative.value;
    }
    ;
    if (v === "integer") {
      return Quantitative.value;
    }
    ;
    if (v === "bigint") {
      return Quantitative.value;
    }
    ;
    if (v === "decimal") {
      return Quantitative.value;
    }
    ;
    if (v === "numeric") {
      return Quantitative.value;
    }
    ;
    if (v === "real") {
      return Quantitative.value;
    }
    ;
    if (v === "double precision") {
      return Quantitative.value;
    }
    ;
    if (v === "double precision") {
      return Quantitative.value;
    }
    ;
    if (v === "money") {
      return Quantitative.value;
    }
    ;
    if (v === "timestamp") {
      return Temporal.value;
    }
    ;
    if (v === "timestamp with time zone") {
      return Temporal.value;
    }
    ;
    if (v === "timestamp with timezone") {
      return Temporal.value;
    }
    ;
    if (v === "date") {
      return Temporal.value;
    }
    ;
    if (v === "time") {
      return Temporal.value;
    }
    ;
    if (v === "time with time zone") {
      return Temporal.value;
    }
    ;
    if (v === "time with timezone") {
      return Temporal.value;
    }
    ;
    if (v === "interval") {
      return Quantitative.value;
    }
    ;
    if (v === "boolean") {
      return Nominal.value;
    }
    ;
    return Nominal.value;
  };
  var linePlot = function(axes) {
    return [line, encoding(axes)];
  };
  var lineArea = function(axes) {
    return [area2, encoding(axes)];
  };
  var boxPlot = function(axes) {
    return [boxplot, encoding(axes)];
  };
  var barchart = function(axes) {
    return [bar, encoding(axes)];
  };
  var arcPlot = function(axes) {
    return [arc, encoding(axes)];
  };

  // output/Postgrest.Utils/index.js
  var css = function($1) {
    return class_(ClassName($1));
  };

  // output/Postgrest.FilterPopup/index.js
  var ix5 = /* @__PURE__ */ ix(indexForeignObject);
  var unwrap11 = /* @__PURE__ */ unwrap();
  var choiceForget5 = /* @__PURE__ */ choiceForget(monoidFirst);
  var _String4 = /* @__PURE__ */ _String(choiceForget5);
  var identity16 = /* @__PURE__ */ identity(categoryFn);
  var _Number3 = /* @__PURE__ */ _Number(choiceForget5);
  var show8 = /* @__PURE__ */ show(showInt);
  var show16 = /* @__PURE__ */ show(showNumber);
  var alt8 = /* @__PURE__ */ alt(altMaybe);
  var FinerSelector = /* @__PURE__ */ function() {
    function FinerSelector2(value0) {
      this.value0 = value0;
    }
    ;
    FinerSelector2.create = function(value0) {
      return new FinerSelector2(value0);
    };
    return FinerSelector2;
  }();
  var stringField = function(obj) {
    return function(name18) {
      return preview(function() {
        var $15 = ix5(unwrap11(name18))(strongForget)(choiceForget5);
        return function($16) {
          return $15(_String4($16));
        };
      }())(obj);
    };
  };
  var popup = function(spec) {
    return function(obj) {
      return function(addFilter) {
        var go2 = function(f) {
          return function(op) {
            return new FinerSelector(function(name18) {
              return function(val2) {
                return f(new LeafSelector({
                  column: name18,
                  operator: op,
                  val: val2
                }));
              };
            });
          };
        };
        var nullButtons = [button([onClick(addFilter(go2(identity16)(Ois.value)))])([text("=")]), button([onClick(addFilter(go2(NotClause.create)(Ois.value)))])([text("/=")])];
        var defaultButtons = [button([onClick(addFilter(go2(identity16)(Oeq.value)))])([text("=")]), button([onClick(addFilter(go2(identity16)(Oneq.value)))])([text("/=")]), button([onClick(addFilter(go2(identity16)(Ogte.value)))])([text(">=")]), button([onClick(addFilter(go2(identity16)(Olte.value)))])([text("<=")]), button([onClick(addFilter(go2(identity16)(Ogt.value)))])([text(">")]), button([onClick(addFilter(go2(identity16)(Olt.value)))])([text("<")])];
        var booleanButtons = [button([onClick(addFilter(go2(identity16)(Ois.value)))])([text("=")]), button([onClick(addFilter(go2(NotClause.create)(Ois.value)))])([text("/=")])];
        var lookupedVal = preview(ix5(unwrap11(spec.name))(strongForget)(choiceForget5))(obj);
        return div2([css("qb-buttons")])(function() {
          if (lookupedVal instanceof Nothing) {
            return defaultButtons;
          }
          ;
          if (lookupedVal instanceof Just) {
            return caseJson($$const(nullButtons))($$const(booleanButtons))($$const(defaultButtons))($$const(defaultButtons))($$const(defaultButtons))($$const(defaultButtons))(lookupedVal.value0);
          }
          ;
          throw new Error("Failed pattern match at Postgrest.FilterPopup (line 41, column 5 - line 43, column 158): " + [lookupedVal.constructor.name]);
        }());
      };
    };
  };
  var numericField = function(obj) {
    return function(name18) {
      return function(sqltype) {
        if (sqlDecimalType(sqltype)) {
          return preview(function() {
            var $17 = ix5(unwrap11(name18))(strongForget)(choiceForget5);
            var $18 = to(round2);
            var $19 = to(show8);
            return function($20) {
              return $17(_Number3($18($19($20))));
            };
          }())(obj);
        }
        ;
        if (otherwise) {
          return preview(function() {
            var $21 = ix5(unwrap11(name18))(strongForget)(choiceForget5);
            var $22 = to(show16);
            return function($23) {
              return $21(_Number3($22($23)));
            };
          }())(obj);
        }
        ;
        throw new Error("Failed pattern match at Postgrest.FilterPopup (line 79, column 1 - line 79, column 73): " + [obj.constructor.name, name18.constructor.name, sqltype.constructor.name]);
      };
    };
  };
  var jsonField = function(obj) {
    return function(name18) {
      return preview(function() {
        var $24 = ix5(unwrap11(name18))(strongForget)(choiceForget5);
        var $25 = to(stringifyWithIndent(2));
        return function($26) {
          return $24($25($26));
        };
      }())(obj);
    };
  };
  var contentStr = function(name18) {
    return function(sqltype) {
      return function(obj) {
        return fromMaybe("")(alt8(stringField(obj)(name18))(alt8(numericField(obj)(name18)(sqltype))(jsonField(obj)(name18))));
      };
    };
  };

  // output/Affjax.StatusCode/index.js
  var show9 = /* @__PURE__ */ show(showInt);
  var showStatusCode = {
    show: function(v) {
      return "(StatusCode " + (show9(v) + ")");
    }
  };

  // output/Postgrest.TableDisplay/index.js
  var show10 = /* @__PURE__ */ show(showNumber);
  var show17 = /* @__PURE__ */ show(showInt);
  var show24 = /* @__PURE__ */ show(showBoolean);
  var lookup6 = /* @__PURE__ */ lookup2(/* @__PURE__ */ ordRecord()(/* @__PURE__ */ ordRecordCons(/* @__PURE__ */ ordRecordCons(ordRecordNil)()({
    reflectSymbol: function() {
      return "index";
    }
  })(ordInt))()({
    reflectSymbol: function() {
      return "field";
    }
  })(newtypeFieldNameOrd)));
  var unwrap12 = /* @__PURE__ */ unwrap();
  var show32 = /* @__PURE__ */ show(showStatusCode);
  var show42 = /* @__PURE__ */ show(/* @__PURE__ */ showRecord()()(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "body";
    }
  })(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "headers";
    }
  })(/* @__PURE__ */ showRecordFieldsCons({
    reflectSymbol: function() {
      return "status";
    }
  })(/* @__PURE__ */ showRecordFieldsConsNil({
    reflectSymbol: function() {
      return "statusText";
    }
  })(showString))(showStatusCode))(/* @__PURE__ */ showArray(showResponseHeader)))(showUnit)));
  var ix6 = /* @__PURE__ */ ix(indexForeignObject);
  var choiceForget6 = /* @__PURE__ */ choiceForget(monoidFirst);
  var toUnfoldable10 = /* @__PURE__ */ toUnfoldable3(unfoldableArray);
  var append14 = /* @__PURE__ */ append(semigroupList);
  var map30 = /* @__PURE__ */ map(functorList);
  var mempty4 = /* @__PURE__ */ mempty(monoidList);
  var compare8 = /* @__PURE__ */ compare(newtypeModelNameOrd);
  var discard3 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_4 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var pure15 = /* @__PURE__ */ pure(applicativeHalogenM);
  var bind8 = /* @__PURE__ */ bind(bindHalogenM);
  var get5 = /* @__PURE__ */ get(monadStateHalogenM);
  var put3 = /* @__PURE__ */ put(monadStateHalogenM);
  var notEq3 = /* @__PURE__ */ notEq(/* @__PURE__ */ eqMaybe(newtypeFieldNameEq));
  var notEq12 = /* @__PURE__ */ notEq(/* @__PURE__ */ eqMaybe(newtypeModelNameEq));
  var eq10 = /* @__PURE__ */ eq(newtypeFieldNameEq);
  var eq15 = /* @__PURE__ */ eq(newtypeModelNameEq);
  var map114 = /* @__PURE__ */ map(functorMaybe);
  var map210 = /* @__PURE__ */ map(functorArray);
  var append22 = /* @__PURE__ */ append(semigroupArray);
  var ReceiveRows2 = /* @__PURE__ */ function() {
    function ReceiveRows5(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    ReceiveRows5.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new ReceiveRows5(value0, value1, value22, value32);
          };
        };
      };
    };
    return ReceiveRows5;
  }();
  var ReceiveAjaxRows = /* @__PURE__ */ function() {
    function ReceiveAjaxRows2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ReceiveAjaxRows2.create = function(value0) {
      return function(value1) {
        return new ReceiveAjaxRows2(value0, value1);
      };
    };
    return ReceiveAjaxRows2;
  }();
  var Clear2 = /* @__PURE__ */ function() {
    function Clear4(value0) {
      this.value0 = value0;
    }
    ;
    Clear4.create = function(value0) {
      return new Clear4(value0);
    };
    return Clear4;
  }();
  var PickMainColumn = /* @__PURE__ */ function() {
    function PickMainColumn2(value0) {
      this.value0 = value0;
    }
    ;
    PickMainColumn2.create = function(value0) {
      return new PickMainColumn2(value0);
    };
    return PickMainColumn2;
  }();
  var PickNestedColumn = /* @__PURE__ */ function() {
    function PickNestedColumn2(value0) {
      this.value0 = value0;
    }
    ;
    PickNestedColumn2.create = function(value0) {
      return new PickNestedColumn2(value0);
    };
    return PickNestedColumn2;
  }();
  var PickComputedColumn = /* @__PURE__ */ function() {
    function PickComputedColumn2(value0) {
      this.value0 = value0;
    }
    ;
    PickComputedColumn2.create = function(value0) {
      return new PickComputedColumn2(value0);
    };
    return PickComputedColumn2;
  }();
  var AddFilter = /* @__PURE__ */ function() {
    function AddFilter3(value0) {
      this.value0 = value0;
    }
    ;
    AddFilter3.create = function(value0) {
      return new AddFilter3(value0);
    };
    return AddFilter3;
  }();
  var AddSelector = /* @__PURE__ */ function() {
    function AddSelector3(value0) {
      this.value0 = value0;
    }
    ;
    AddSelector3.create = function(value0) {
      return new AddSelector3(value0);
    };
    return AddSelector3;
  }();
  var SelectionChanged = /* @__PURE__ */ function() {
    function SelectionChanged2(value0) {
      this.value0 = value0;
    }
    ;
    SelectionChanged2.create = function(value0) {
      return new SelectionChanged2(value0);
    };
    return SelectionChanged2;
  }();
  var EditionStarted = /* @__PURE__ */ function() {
    function EditionStarted2(value0) {
      this.value0 = value0;
    }
    ;
    EditionStarted2.create = function(value0) {
      return new EditionStarted2(value0);
    };
    return EditionStarted2;
  }();
  var TriggerAjax = /* @__PURE__ */ function() {
    function TriggerAjax2(value0) {
      this.value0 = value0;
    }
    ;
    TriggerAjax2.create = function(value0) {
      return new TriggerAjax2(value0);
    };
    return TriggerAjax2;
  }();
  var Emit = /* @__PURE__ */ function() {
    function Emit3(value0) {
      this.value0 = value0;
    }
    ;
    Emit3.create = function(value0) {
      return new Emit3(value0);
    };
    return Emit3;
  }();
  var SelectField = /* @__PURE__ */ function() {
    function SelectField2(value0) {
      this.value0 = value0;
    }
    ;
    SelectField2.create = function(value0) {
      return new SelectField2(value0);
    };
    return SelectField2;
  }();
  var UnselectField = /* @__PURE__ */ function() {
    function UnselectField2(value0) {
      this.value0 = value0;
    }
    ;
    UnselectField2.create = function(value0) {
      return new UnselectField2(value0);
    };
    return UnselectField2;
  }();
  var SelectNestedField = /* @__PURE__ */ function() {
    function SelectNestedField2(value0) {
      this.value0 = value0;
    }
    ;
    SelectNestedField2.create = function(value0) {
      return new SelectNestedField2(value0);
    };
    return SelectNestedField2;
  }();
  var UnselectNestedField = /* @__PURE__ */ function() {
    function UnselectNestedField2(value0) {
      this.value0 = value0;
    }
    ;
    UnselectNestedField2.create = function(value0) {
      return new UnselectNestedField2(value0);
    };
    return UnselectNestedField2;
  }();
  var SelectComputedField = /* @__PURE__ */ function() {
    function SelectComputedField2(value0) {
      this.value0 = value0;
    }
    ;
    SelectComputedField2.create = function(value0) {
      return new SelectComputedField2(value0);
    };
    return SelectComputedField2;
  }();
  var UnselectComputedField = /* @__PURE__ */ function() {
    function UnselectComputedField2(value0) {
      this.value0 = value0;
    }
    ;
    UnselectComputedField2.create = function(value0) {
      return new UnselectComputedField2(value0);
    };
    return UnselectComputedField2;
  }();
  var toModeldName = function(v) {
    if (v instanceof PickMainColumn) {
      return Nothing.value;
    }
    ;
    if (v instanceof PickComputedColumn) {
      return Nothing.value;
    }
    ;
    if (v instanceof PickNestedColumn) {
      return new Just(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Postgrest.TableDisplay (line 104, column 16 - line 107, column 39): " + [v.constructor.name]);
  };
  var toFieldName = function(v) {
    if (v instanceof PickMainColumn) {
      return new Just(v.value0);
    }
    ;
    if (v instanceof PickComputedColumn) {
      return new Just(v.value0);
    }
    ;
    if (v instanceof PickNestedColumn) {
      return Nothing.value;
    }
    ;
    throw new Error("Failed pattern match at Postgrest.TableDisplay (line 98, column 15 - line 101, column 32): " + [v.constructor.name]);
  };
  var renderDataRow = function(state3) {
    return function(fields) {
      return function(cols3) {
        return function(compfields) {
          return function(ctx) {
            var renderComputedCell = function(compfield) {
              var v = lookupComputedResult(ctx)(compfield.name);
              if (v instanceof Right && v.value0 instanceof ExprString) {
                return td_([pre_([text(v.value0.value0)])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprFloat) {
                return td_([pre_([text(show10(v.value0.value0))])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprInt) {
                return td_([pre_([text(show17(v.value0.value0))])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprBoolean) {
                return td_([pre_([text(show24(v.value0.value0))])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprObject) {
                return td_([pre_([text(stringifyWithIndent(2)(id(v.value0.value0)))])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprArray) {
                return td_([pre_([text(stringifyWithIndent(2)(id(v.value0.value0)))])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprAtom) {
                return td_([code_([text(showAtom(v.value0.value0))])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprLink) {
                return td_([pre_([a([href(v.value0.value0)])([text(v.value0.value0)])])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprImage) {
                return td_([img([src(v.value0.value0)])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprProgressBar) {
                return td_([div2([css("progress-bar")])([div2([style("width:" + (toString2(v.value0.value0) + "%;"))])([])])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprColorDot) {
                return td_([div2([css("color-dot")])([div2([style("background-color:" + (v.value0.value0 + ";"))])([])])]);
              }
              ;
              if (v instanceof Right && v.value0 instanceof ExprAjaxCall) {
                var key = {
                  field: compfield.name,
                  index: ctx.rownum
                };
                var ajaxResult = lookup6(key)(state3.ajaxRows);
                return td_([pre_([text(stringifyWithIndent(2)(id(unwrap12(v.value0.value0))))]), function() {
                  if (ajaxResult instanceof Nothing) {
                    return text("");
                  }
                  ;
                  if (ajaxResult instanceof Just && ajaxResult.value0 instanceof NotRun) {
                    return text("");
                  }
                  ;
                  if (ajaxResult instanceof Just && ajaxResult.value0 instanceof PerformedFailure) {
                    return text("!");
                  }
                  ;
                  if (ajaxResult instanceof Just && ajaxResult.value0 instanceof PerformedSuccess) {
                    return text(show32(ajaxResult.value0.value0.status));
                  }
                  ;
                  throw new Error("Failed pattern match at Postgrest.TableDisplay (line 299, column 13 - line 303, column 73): " + [ajaxResult.constructor.name]);
                }(), div2([css("cell-interactions")])([button([css("button"), onClick(function(v1) {
                  return new Emit(new TriggerAjax([{
                    field: compfield,
                    ctx,
                    req: v.value0.value0
                  }]));
                })])([text("exec")]), function() {
                  if (ajaxResult instanceof Nothing) {
                    return text("");
                  }
                  ;
                  if (ajaxResult instanceof Just && ajaxResult.value0 instanceof NotRun) {
                    return text("");
                  }
                  ;
                  if (ajaxResult instanceof Just && ajaxResult.value0 instanceof PerformedFailure) {
                    return div_([strong_([text("ajax-error")]), p_([text(printError(ajaxResult.value0.value0))])]);
                  }
                  ;
                  if (ajaxResult instanceof Just && ajaxResult.value0 instanceof PerformedSuccess) {
                    return div_([strong_([text("ajax-result")]), pre_([text(show42(ajaxResult.value0.value0))])]);
                  }
                  ;
                  throw new Error("Failed pattern match at Postgrest.TableDisplay (line 311, column 15 - line 323, column 20): " + [ajaxResult.constructor.name]);
                }()])]);
              }
              ;
              if (v instanceof Left && v.value0 instanceof ConversionError) {
                return td_([pre([css("warn")])([text("conversion error")])]);
              }
              ;
              if (v instanceof Left && v.value0 instanceof Uncoercible) {
                return td_([pre([css("warn")])([text(unwrap12(v.value0.value0) + " is not coercible")])]);
              }
              ;
              if (v instanceof Left && v.value0 instanceof ArgError) {
                return td_([pre([css("warn")])([text("argument error: " + v.value0.value0)])]);
              }
              ;
              if (v instanceof Left && v.value0 instanceof NotEvaluated) {
                return td_([pre([css("error")])([text("evaluation missing")])]);
              }
              ;
              if (v instanceof Left && v.value0 instanceof NotImplemented) {
                return td_([pre([css("warn")])([text("not implemented (please raise your voice)")])]);
              }
              ;
              throw new Error("Failed pattern match at Postgrest.TableDisplay (line 269, column 7 - line 345, column 14): " + [v.constructor.name]);
            };
            var jsonFieldStr = function(name18) {
              return preview(function() {
                var $230 = ix6(name18)(strongForget)(choiceForget6);
                var $231 = to(stringifyWithIndent(2));
                return function($232) {
                  return $230($231($232));
                };
              }())(ctx.raw);
            };
            var renderNestedCell = function(col2) {
              return td_([pre_([text(fromMaybe("")(jsonFieldStr(col2)))])]);
            };
            var addFilter = function(spec) {
              return function(strval) {
                return function(intent) {
                  return function(v) {
                    return new Emit(new AddSelector(intent.value0(spec.name)(strval)));
                  };
                };
              };
            };
            var renderCell = function(v) {
              if (v instanceof Just) {
                var str = contentStr(v.value0.name)(v.value0.sqlType)(ctx.raw);
                return td([])([pre_([text(str)]), popup(v.value0)(ctx.raw)(addFilter(v.value0)(str))]);
              }
              ;
              if (v instanceof Nothing) {
                return td_([p_([text("could not retrieve field-name")])]);
              }
              ;
              throw new Error("Failed pattern match at Postgrest.TableDisplay (line 243, column 18 - line 254, column 78): " + [v.constructor.name]);
            };
            return tr_(toUnfoldable10(append14(map30(renderCell)(fields))(append14(map30(renderNestedCell)(cols3))(map30(renderComputedCell)(compfields)))));
          };
        };
      };
    };
  };
  var newState2 = function(input3) {
    return {
      fields: input3.fields,
      nestedFields: mempty4,
      computedFields: mempty4,
      dataRows: Nothing.value,
      ajaxRows: emptyResults,
      tableSelection: mempty4
    };
  };
  var nestedColumnsName$prime = function(state3) {
    return map30(function($233) {
      return unwrap12(fst($233));
    })(nubBy(function(t1) {
      return function(t2) {
        return compare8(fst(t1))(fst(t2));
      };
    })(state3.nestedFields));
  };
  var nestedColumnsName = function(state3) {
    return map30(fst)(nubBy(function(t1) {
      return function(t2) {
        return compare8(fst(t1))(fst(t2));
      };
    })(state3.nestedFields));
  };
  var handleQuery2 = function(dictMonadAff) {
    return function(v) {
      if (v instanceof ReceiveRows2) {
        return discard3(modify_4(function(v1) {
          var $164 = {};
          for (var $165 in v1) {
            if ({}.hasOwnProperty.call(v1, $165)) {
              $164[$165] = v1[$165];
            }
            ;
          }
          ;
          $164.dataRows = new Just(v.value0);
          $164.nestedFields = v.value1;
          $164.computedFields = v.value2;
          $164.ajaxRows = emptyResults;
          return $164;
        }))(function() {
          return pure15(new Just(v.value3));
        });
      }
      ;
      if (v instanceof ReceiveAjaxRows) {
        return discard3(modify_4(function(v1) {
          var $171 = {};
          for (var $172 in v1) {
            if ({}.hasOwnProperty.call(v1, $172)) {
              $171[$172] = v1[$172];
            }
            ;
          }
          ;
          $171.ajaxRows = v.value0;
          return $171;
        }))(function() {
          return pure15(new Just(v.value1));
        });
      }
      ;
      if (v instanceof Clear2) {
        return discard3(modify_4(function(v1) {
          var $176 = {};
          for (var $177 in v1) {
            if ({}.hasOwnProperty.call(v1, $177)) {
              $176[$177] = v1[$177];
            }
            ;
          }
          ;
          $176.dataRows = Nothing.value;
          $176.ajaxRows = emptyResults;
          return $176;
        }))(function() {
          return pure15(new Just(v.value0));
        });
      }
      ;
      throw new Error("Failed pattern match at Postgrest.TableDisplay (line 172, column 15 - line 181, column 18): " + [v.constructor.name]);
    };
  };
  var handleAction2 = function(dictMonadAff) {
    var raiseSelection = function(st) {
      return raise(new SelectionChanged(st.tableSelection));
    };
    return function(v) {
      if (v instanceof Emit) {
        return raise(v.value0);
      }
      ;
      if (v instanceof SelectField) {
        return bind8(get5)(function(st0) {
          var st1 = function() {
            var $182 = {};
            for (var $183 in st0) {
              if ({}.hasOwnProperty.call(st0, $183)) {
                $182[$183] = st0[$183];
              }
              ;
            }
            ;
            $182.tableSelection = new Cons(new PickMainColumn(v.value0), st0.tableSelection);
            return $182;
          }();
          return discard3(put3(st1))(function() {
            return raiseSelection(st1);
          });
        });
      }
      ;
      if (v instanceof UnselectField) {
        return bind8(get5)(function(st0) {
          var st1 = function() {
            var $186 = {};
            for (var $187 in st0) {
              if ({}.hasOwnProperty.call(st0, $187)) {
                $186[$187] = st0[$187];
              }
              ;
            }
            ;
            $186.tableSelection = filter(function(fld) {
              return notEq3(toFieldName(fld))(new Just(v.value0));
            })(st0.tableSelection);
            return $186;
          }();
          return discard3(put3(st1))(function() {
            return raiseSelection(st1);
          });
        });
      }
      ;
      if (v instanceof SelectNestedField) {
        return bind8(get5)(function(st0) {
          var st1 = function() {
            var $190 = {};
            for (var $191 in st0) {
              if ({}.hasOwnProperty.call(st0, $191)) {
                $190[$191] = st0[$191];
              }
              ;
            }
            ;
            $190.tableSelection = new Cons(new PickNestedColumn(v.value0), st0.tableSelection);
            return $190;
          }();
          return discard3(put3(st1))(function() {
            return raiseSelection(st1);
          });
        });
      }
      ;
      if (v instanceof UnselectNestedField) {
        return bind8(get5)(function(st0) {
          var st1 = function() {
            var $194 = {};
            for (var $195 in st0) {
              if ({}.hasOwnProperty.call(st0, $195)) {
                $194[$195] = st0[$195];
              }
              ;
            }
            ;
            $194.tableSelection = filter(function(fld) {
              return notEq12(toModeldName(fld))(new Just(v.value0));
            })(st0.tableSelection);
            return $194;
          }();
          return discard3(put3(st1))(function() {
            return raiseSelection(st1);
          });
        });
      }
      ;
      if (v instanceof SelectComputedField) {
        return bind8(get5)(function(st0) {
          var st1 = function() {
            var $198 = {};
            for (var $199 in st0) {
              if ({}.hasOwnProperty.call(st0, $199)) {
                $198[$199] = st0[$199];
              }
              ;
            }
            ;
            $198.tableSelection = new Cons(new PickComputedColumn(v.value0), st0.tableSelection);
            return $198;
          }();
          return discard3(put3(st1))(function() {
            return raiseSelection(st1);
          });
        });
      }
      ;
      if (v instanceof UnselectComputedField) {
        return bind8(get5)(function(st0) {
          var st1 = function() {
            var $202 = {};
            for (var $203 in st0) {
              if ({}.hasOwnProperty.call(st0, $203)) {
                $202[$203] = st0[$203];
              }
              ;
            }
            ;
            $202.tableSelection = filter(function(fld) {
              return notEq3(toFieldName(fld))(new Just(v.value0));
            })(st0.tableSelection);
            return $202;
          }();
          return discard3(put3(st1))(function() {
            return raiseSelection(st1);
          });
        });
      }
      ;
      throw new Error("Failed pattern match at Postgrest.TableDisplay (line 132, column 16 - line 163, column 23): " + [v.constructor.name]);
    };
  };
  var columnPickEq = {
    eq: function(x2) {
      return function(y2) {
        if (x2 instanceof PickMainColumn && y2 instanceof PickMainColumn) {
          return eq10(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof PickNestedColumn && y2 instanceof PickNestedColumn) {
          return eq15(x2.value0)(y2.value0);
        }
        ;
        if (x2 instanceof PickComputedColumn && y2 instanceof PickComputedColumn) {
          return eq10(x2.value0)(y2.value0);
        }
        ;
        return false;
      };
    }
  };
  var elem4 = /* @__PURE__ */ elem(foldableList)(columnPickEq);
  var fieldSelected = function(state3) {
    return function(pick) {
      return elem4(pick)(state3.tableSelection);
    };
  };
  var renderColumnCol = function(state3) {
    return function(v) {
      if (v instanceof Nothing) {
        return col([]);
      }
      ;
      if (v instanceof Just) {
        var attrs = function() {
          var $215 = fieldSelected(state3)(new PickMainColumn(v.value0.name));
          if ($215) {
            return [css("selected")];
          }
          ;
          return [css("")];
        }();
        return col(attrs);
      }
      ;
      throw new Error("Failed pattern match at Postgrest.TableDisplay (line 365, column 25 - line 375, column 17): " + [v.constructor.name]);
    };
  };
  var renderColumnName = function(state3) {
    return function(v) {
      if (v instanceof Nothing) {
        return th([scope(ScopeCol.value)])([text("unspecified")]);
      }
      ;
      if (v instanceof Just) {
        return th([css("colname"), scope(ScopeCol.value), function() {
          var $218 = fieldSelected(state3)(new PickMainColumn(v.value0.name));
          if ($218) {
            return onClick(function(v1) {
              return new UnselectField(v.value0.name);
            });
          }
          ;
          return onClick(function(v1) {
            return new SelectField(v.value0.name);
          });
        }()])([text(unwrap12(v.value0.name))]);
      }
      ;
      throw new Error("Failed pattern match at Postgrest.TableDisplay (line 351, column 26 - line 362, column 6): " + [v.constructor.name]);
    };
  };
  var renderComputedColumnCol = function(state3) {
    return function(col2) {
      var attrs = function() {
        var $220 = fieldSelected(state3)(new PickComputedColumn(col2.name));
        if ($220) {
          return [css("selected")];
        }
        ;
        return [css("")];
      }();
      return col(attrs);
    };
  };
  var renderComputedColumnHead = function(state3) {
    return function(compfield) {
      var isSelected = fieldSelected(state3)(new PickComputedColumn(compfield.name));
      var ajaxCall = function(ctx) {
        var v = lookupComputedResult(ctx)(compfield.name);
        if (v instanceof Right && v.value0 instanceof ExprAjaxCall) {
          return new Just({
            field: compfield,
            ctx,
            req: v.value0.value0
          });
        }
        ;
        return Nothing.value;
      };
      var ajaxes = fromMaybe([])(map114(function() {
        var $234 = map210(ajaxCall);
        return function($235) {
          return catMaybes($234($235));
        };
      }())(state3.dataRows));
      return th([css("colname"), scope(ScopeCol.value)])([div2([css("col-title"), function() {
        if (isSelected) {
          return onClick(function(v) {
            return new UnselectComputedField(compfield.name);
          });
        }
        ;
        return onClick(function(v) {
          return new SelectComputedField(compfield.name);
        });
      }()])([text(unwrap12(compfield.name))]), div2([css("col-interactions")])([button([css("button"), onClick(function(v) {
        return new Emit(new EditionStarted(compfield));
      })])([text("edit")]), function() {
        var $225 = $$null(ajaxes);
        if ($225) {
          return text("");
        }
        ;
        return button([css("button"), onClick(function(v) {
          return new Emit(new TriggerAjax(ajaxes));
        })])([text("exec-all")]);
      }()])]);
    };
  };
  var renderNestedColumnCol = function(state3) {
    return function(col2) {
      var attrs = function() {
        var $226 = fieldSelected(state3)(new PickNestedColumn(col2));
        if ($226) {
          return [css("selected")];
        }
        ;
        return [css("")];
      }();
      return col(attrs);
    };
  };
  var renderNestedColumnName = function(state3) {
    return function(model) {
      return th([css("colname"), scope(ScopeCol.value), function() {
        var $227 = fieldSelected(state3)(new PickNestedColumn(model));
        if ($227) {
          return onClick(function(v) {
            return new UnselectNestedField(model);
          });
        }
        ;
        return onClick(function(v) {
          return new SelectNestedField(model);
        });
      }()])([text(unwrap12(model))]);
    };
  };
  var renderTable = function(state3) {
    return function(rows5) {
      var nestedfieldTRs = toUnfoldable10(map30(renderNestedColumnName(state3))(nestedColumnsName(state3)));
      var nestedfieldCols = toUnfoldable10(map30(renderNestedColumnCol(state3))(nestedColumnsName(state3)));
      var fieldTRs = toUnfoldable10(map30(renderColumnName(state3))(state3.fields));
      var fieldCols = toUnfoldable10(map30(renderColumnCol(state3))(state3.fields));
      var computedFieldsTRs = toUnfoldable10(map30(renderComputedColumnHead(state3))(state3.computedFields));
      var computedFieldsCols = toUnfoldable10(map30(renderComputedColumnCol(state3))(state3.computedFields));
      return table_([colgroup_(append22(fieldCols)(append22(nestedfieldCols)(computedFieldsCols))), thead_([tr_(append22(fieldTRs)(append22(nestedfieldTRs)(computedFieldsTRs)))]), tbody_(map210(renderDataRow(state3)(state3.fields)(nestedColumnsName$prime(state3))(state3.computedFields))(rows5))]);
    };
  };
  var render2 = function(state3) {
    if (state3.dataRows instanceof Nothing) {
      return div_([text("no data")]);
    }
    ;
    if (state3.dataRows instanceof Just) {
      return div_([renderTable(state3)(state3.dataRows.value0)]);
    }
    ;
    throw new Error("Failed pattern match at Postgrest.TableDisplay (line 184, column 16 - line 189, column 8): " + [state3.dataRows.constructor.name]);
  };
  var tableDisplay = function(dictMonadAff) {
    return mkComponent({
      initialState: newState2,
      render: render2,
      "eval": mkEval({
        receive: defaultEval.receive,
        initialize: defaultEval.initialize,
        finalize: defaultEval.finalize,
        handleAction: handleAction2(dictMonadAff),
        handleQuery: handleQuery2(dictMonadAff)
      })
    });
  };

  // output/Web.UIEvent.MouseEvent/foreign.js
  function clientX(e) {
    return e.clientX;
  }
  function clientY(e) {
    return e.clientY;
  }

  // output/Web.UIEvent.MouseEvent/index.js
  var toEvent = unsafeCoerce2;

  // output/Postgrest.Chart/index.js
  var bind9 = /* @__PURE__ */ bind(bindMaybe);
  var choiceForget7 = /* @__PURE__ */ choiceForget(monoidFirst);
  var _Object5 = /* @__PURE__ */ _Object(choiceForget7);
  var ix7 = /* @__PURE__ */ ix(indexForeignObject);
  var unwrap13 = /* @__PURE__ */ unwrap();
  var toUnfoldable11 = /* @__PURE__ */ toUnfoldable3(unfoldableArray);
  var map31 = /* @__PURE__ */ map(functorList);
  var map115 = /* @__PURE__ */ map(functorMaybe);
  var map211 = /* @__PURE__ */ map(functorArray);
  var eq16 = /* @__PURE__ */ eq(newtypeFieldNameEq);
  var find4 = /* @__PURE__ */ find(foldableList);
  var pure16 = /* @__PURE__ */ pure(applicativeMaybe);
  var mempty5 = /* @__PURE__ */ mempty(/* @__PURE__ */ monoidEndo(categoryFn));
  var mempty1 = /* @__PURE__ */ mempty(monoidArray);
  var wrap4 = /* @__PURE__ */ wrap();
  var discard4 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_5 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var bind14 = /* @__PURE__ */ bind(bindHalogenM);
  var get6 = /* @__PURE__ */ get(monadStateHalogenM);
  var applySecond5 = /* @__PURE__ */ applySecond(applyHalogenM);
  var chartDisplayIsSymbol = {
    reflectSymbol: function() {
      return "chartDisplay";
    }
  };
  var query2 = /* @__PURE__ */ query()(chartDisplayIsSymbol)(ordUnit);
  var pure17 = /* @__PURE__ */ pure(applicativeHalogenM);
  var find1 = /* @__PURE__ */ find(foldableArray);
  var put4 = /* @__PURE__ */ put(monadStateHalogenM);
  var mod4 = /* @__PURE__ */ mod(euclideanRingInt);
  var show11 = /* @__PURE__ */ show(showInt);
  var slot2 = /* @__PURE__ */ slot()(chartDisplayIsSymbol)(ordUnit);
  var ReceiveRows3 = /* @__PURE__ */ function() {
    function ReceiveRows5(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ReceiveRows5.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ReceiveRows5(value0, value1, value22);
        };
      };
    };
    return ReceiveRows5;
  }();
  var Clear3 = /* @__PURE__ */ function() {
    function Clear4(value0) {
      this.value0 = value0;
    }
    ;
    Clear4.create = function(value0) {
      return new Clear4(value0);
    };
    return Clear4;
  }();
  var AddFilter2 = /* @__PURE__ */ function() {
    function AddFilter3(value0) {
      this.value0 = value0;
    }
    ;
    AddFilter3.create = function(value0) {
      return new AddFilter3(value0);
    };
    return AddFilter3;
  }();
  var AddSelector2 = /* @__PURE__ */ function() {
    function AddSelector3(value0) {
      this.value0 = value0;
    }
    ;
    AddSelector3.create = function(value0) {
      return new AddSelector3(value0);
    };
    return AddSelector3;
  }();
  var DeleteMe = /* @__PURE__ */ function() {
    function DeleteMe2() {
    }
    ;
    DeleteMe2.value = new DeleteMe2();
    return DeleteMe2;
  }();
  var NoSelection = /* @__PURE__ */ function() {
    function NoSelection2() {
    }
    ;
    NoSelection2.value = new NoSelection2();
    return NoSelection2;
  }();
  var MainFieldSelection = /* @__PURE__ */ function() {
    function MainFieldSelection2(value0) {
      this.value0 = value0;
    }
    ;
    MainFieldSelection2.create = function(value0) {
      return new MainFieldSelection2(value0);
    };
    return MainFieldSelection2;
  }();
  var ComputedFieldSelection = /* @__PURE__ */ function() {
    function ComputedFieldSelection2(value0) {
      this.value0 = value0;
    }
    ;
    ComputedFieldSelection2.create = function(value0) {
      return new ComputedFieldSelection2(value0);
    };
    return ComputedFieldSelection2;
  }();
  var SelectTemplate = /* @__PURE__ */ function() {
    function SelectTemplate2(value0) {
      this.value0 = value0;
    }
    ;
    SelectTemplate2.create = function(value0) {
      return new SelectTemplate2(value0);
    };
    return SelectTemplate2;
  }();
  var SelectXAxis = /* @__PURE__ */ function() {
    function SelectXAxis2(value0) {
      this.value0 = value0;
    }
    ;
    SelectXAxis2.create = function(value0) {
      return new SelectXAxis2(value0);
    };
    return SelectXAxis2;
  }();
  var AggregateXAxis = /* @__PURE__ */ function() {
    function AggregateXAxis2(value0) {
      this.value0 = value0;
    }
    ;
    AggregateXAxis2.create = function(value0) {
      return new AggregateXAxis2(value0);
    };
    return AggregateXAxis2;
  }();
  var SelectYAxis = /* @__PURE__ */ function() {
    function SelectYAxis2(value0) {
      this.value0 = value0;
    }
    ;
    SelectYAxis2.create = function(value0) {
      return new SelectYAxis2(value0);
    };
    return SelectYAxis2;
  }();
  var AggregateYAxis = /* @__PURE__ */ function() {
    function AggregateYAxis2(value0) {
      this.value0 = value0;
    }
    ;
    AggregateYAxis2.create = function(value0) {
      return new AggregateYAxis2(value0);
    };
    return AggregateYAxis2;
  }();
  var SelectColorAxis = /* @__PURE__ */ function() {
    function SelectColorAxis2(value0) {
      this.value0 = value0;
    }
    ;
    SelectColorAxis2.create = function(value0) {
      return new SelectColorAxis2(value0);
    };
    return SelectColorAxis2;
  }();
  var AggregateColorAxis = /* @__PURE__ */ function() {
    function AggregateColorAxis2(value0) {
      this.value0 = value0;
    }
    ;
    AggregateColorAxis2.create = function(value0) {
      return new AggregateColorAxis2(value0);
    };
    return AggregateColorAxis2;
  }();
  var SelectThetaAxis = /* @__PURE__ */ function() {
    function SelectThetaAxis2(value0) {
      this.value0 = value0;
    }
    ;
    SelectThetaAxis2.create = function(value0) {
      return new SelectThetaAxis2(value0);
    };
    return SelectThetaAxis2;
  }();
  var AggregateThetaAxis = /* @__PURE__ */ function() {
    function AggregateThetaAxis2(value0) {
      this.value0 = value0;
    }
    ;
    AggregateThetaAxis2.create = function(value0) {
      return new AggregateThetaAxis2(value0);
    };
    return AggregateThetaAxis2;
  }();
  var SelectFacetAxis = /* @__PURE__ */ function() {
    function SelectFacetAxis2(value0) {
      this.value0 = value0;
    }
    ;
    SelectFacetAxis2.create = function(value0) {
      return new SelectFacetAxis2(value0);
    };
    return SelectFacetAxis2;
  }();
  var SetFormVisibility = /* @__PURE__ */ function() {
    function SetFormVisibility2(value0) {
      this.value0 = value0;
    }
    ;
    SetFormVisibility2.create = function(value0) {
      return new SetFormVisibility2(value0);
    };
    return SetFormVisibility2;
  }();
  var SetDocking = /* @__PURE__ */ function() {
    function SetDocking2(value0) {
      this.value0 = value0;
    }
    ;
    SetDocking2.create = function(value0) {
      return new SetDocking2(value0);
    };
    return SetDocking2;
  }();
  var StartDragging = /* @__PURE__ */ function() {
    function StartDragging2(value0) {
      this.value0 = value0;
    }
    ;
    StartDragging2.create = function(value0) {
      return new StartDragging2(value0);
    };
    return StartDragging2;
  }();
  var Dragging = /* @__PURE__ */ function() {
    function Dragging2(value0) {
      this.value0 = value0;
    }
    ;
    Dragging2.create = function(value0) {
      return new Dragging2(value0);
    };
    return Dragging2;
  }();
  var StopDragging = /* @__PURE__ */ function() {
    function StopDragging2(value0) {
      this.value0 = value0;
    }
    ;
    StopDragging2.create = function(value0) {
      return new StopDragging2(value0);
    };
    return StopDragging2;
  }();
  var HandleChartDisplay = /* @__PURE__ */ function() {
    function HandleChartDisplay3(value0) {
      this.value0 = value0;
    }
    ;
    HandleChartDisplay3.create = function(value0) {
      return new HandleChartDisplay3(value0);
    };
    return HandleChartDisplay3;
  }();
  var ClearDatum = /* @__PURE__ */ function() {
    function ClearDatum2() {
    }
    ;
    ClearDatum2.value = new ClearDatum2();
    return ClearDatum2;
  }();
  var Emit2 = /* @__PURE__ */ function() {
    function Emit3(value0) {
      this.value0 = value0;
    }
    ;
    Emit3.create = function(value0) {
      return new Emit3(value0);
    };
    return Emit3;
  }();
  var templates = [{
    shorthand: "scatter",
    spec: scatter
  }, {
    shorthand: "barchart",
    spec: barchart
  }, {
    shorthand: "scatter-map",
    spec: scatterMap
  }, {
    shorthand: "ticks",
    spec: tickPlot
  }, {
    shorthand: "lines",
    spec: linePlot
  }, {
    shorthand: "area",
    spec: lineArea
  }, {
    shorthand: "pie",
    spec: arcPlot
  }, {
    shorthand: "box",
    spec: boxPlot
  }];
  var templateOption = function(sel) {
    return function(template) {
      return option([selected(sel === template.shorthand)])([text(template.shorthand)]);
    };
  };
  var selectAxis = function(v) {
    return function(v1) {
      if (v instanceof Nothing && v1 instanceof Nothing) {
        return NoSelection.value;
      }
      ;
      if (v instanceof Just) {
        return new MainFieldSelection(v.value0);
      }
      ;
      if (v1 instanceof Just) {
        return new ComputedFieldSelection(v1.value0);
      }
      ;
      throw new Error("Failed pattern match at Postgrest.Chart (line 163, column 1 - line 163, column 70): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var renderDatumSelector = function(dictMonadAff) {
    return function(state3) {
      return function(datum) {
        var filterIntention = function(spec) {
          return function(strval) {
            return function(intent) {
              return function(v) {
                return new Emit2(new AddSelector2(intent.value0(spec.name)(strval)));
              };
            };
          };
        };
        var renderSelector2 = function(spec) {
          return bind9(preview(_Object5)(datum))(function(obj) {
            var v = preview(function() {
              var $225 = ix7(unwrap13(spec.name))(strongForget)(choiceForget7);
              return function($226) {
                return _Object5($225($226));
              };
            }())(datum);
            if (v instanceof Nothing) {
              return Nothing.value;
            }
            ;
            if (v instanceof Just) {
              return new Just(function() {
                var strval = contentStr(spec.name)(spec.sqlType)(obj);
                return div2([css("datum-selector")])([strong([css("datum-selector-name")])([text(unwrap13(spec.name))]), pre([css("datum-selector-value")])([text(strval)]), popup(spec)(obj)(filterIntention(spec)(strval))]);
              }());
            }
            ;
            throw new Error("Failed pattern match at Postgrest.Chart (line 444, column 7 - line 454, column 12): " + [v.constructor.name]);
          });
        };
        return div2([css("datum-details")])(toUnfoldable11(catMaybes2(map31(renderSelector2)(state3.fields))));
      };
    };
  };
  var pickTemplate = function(dictMonadAff) {
    return function(state3) {
      var lookupTemplate = function(n) {
        return index(templates)(n);
      };
      var changeTemplate = function(n) {
        var tpl = map115(function(v) {
          return v.shorthand;
        })(lookupTemplate(n));
        return new SelectTemplate(tpl);
      };
      return div_([p_([text("Chart style")]), select([onSelectedIndexChange(changeTemplate)])(map211(templateOption(state3.templateName))(templates))]);
    };
  };
  var pickAxis = function(state3) {
    return function(n) {
      var f2 = index2(state3.computedFields)((n - 1 | 0) - length3(state3.fields) | 0);
      var f1 = index2(state3.fields)(n - 1 | 0);
      return selectAxis(f1)(f2);
    };
  };
  var noneOption = /* @__PURE__ */ option([])([/* @__PURE__ */ text("~none~")]);
  var fieldOption = function(sel) {
    return function(field) {
      var selected3 = function() {
        if (sel instanceof MainFieldSelection) {
          return eq16(sel.value0.name)(field.name);
        }
        ;
        return false;
      }();
      return option([selected(selected3)])([text(unwrap13(field.name))]);
    };
  };
  var defaultPosition = {
    dx: 0,
    dy: 0
  };
  var newState3 = function(input3) {
    var lookupAxisSelection = function(n) {
      return bind9(index2(reverse2(input3.prefillFields))(n))(function(pick) {
        if (pick instanceof PickMainColumn) {
          return bind9(find4(function(spec) {
            return eq16(spec.name)(pick.value0);
          })(input3.fields))(function(spec) {
            return pure16(new MainFieldSelection(spec));
          });
        }
        ;
        if (pick instanceof PickComputedColumn) {
          return bind9(find4(function(comp) {
            return eq16(comp.name)(pick.value0);
          })(input3.computedFields))(function(spec) {
            return pure16(new ComputedFieldSelection(spec));
          });
        }
        ;
        return Nothing.value;
      });
    };
    var xaxis0 = lookupAxisSelection(0);
    var yaxis0 = lookupAxisSelection(1);
    var defaultTemplate = index(templates)(0);
    var coloraxis0 = lookupAxisSelection(2);
    return {
      htmlID: input3.htmlID,
      fields: input3.fields,
      computedFields: input3.computedFields,
      dataRows: input3.dataRows,
      title: input3.title,
      templateName: fromMaybe("")(map115(function(v) {
        return v.shorthand;
      })(defaultTemplate)),
      xaxis: fromMaybe(NoSelection.value)(xaxis0),
      xaggregation: mempty5,
      yaxis: fromMaybe(NoSelection.value)(yaxis0),
      yaggregation: mempty5,
      coloraxis: fromMaybe(NoSelection.value)(coloraxis0),
      coloraggregation: mempty5,
      thetaaxis: NoSelection.value,
      thetaaggregation: mempty5,
      facetaxis: NoSelection.value,
      axes: mempty1,
      template: defaultTemplate,
      position: defaultPosition,
      showForm: false,
      dragging: Nothing.value,
      datum: Nothing.value,
      docked: false
    };
  };
  var computedfieldOption = function(sel) {
    return function(field) {
      var selected3 = function() {
        if (sel instanceof ComputedFieldSelection) {
          return eq16(sel.value0.name)(field.name);
        }
        ;
        return false;
      }();
      return option([selected(selected3)])([text(unwrap13(field.name))]);
    };
  };
  var pickFacetAxisSelector = function(dictMonadAff) {
    return function(state3) {
      var changeFacetAxis = function(n) {
        return new SelectFacetAxis(pickAxis(state3)(n));
      };
      return div_([p_([text("Facet")]), select([onSelectedIndexChange(changeFacetAxis)])([noneOption, optgroup([attr2(wrap4("label"))("fields")])(toUnfoldable11(map31(fieldOption(state3.facetaxis))(state3.fields))), optgroup([attr2(wrap4("label"))("computed-fields")])(toUnfoldable11(map31(computedfieldOption(state3.facetaxis))(state3.computedFields)))])]);
    };
  };
  var computeVegaSpec = function(state3) {
    return bind9(state3.template)(function(tpl) {
      return pure16(tpl.spec(state3.axes));
    });
  };
  var axisSelection = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof NoSelection) {
          return Nothing.value;
        }
        ;
        if (v2 instanceof MainFieldSelection) {
          return new Just(v(v2.value0));
        }
        ;
        if (v2 instanceof ComputedFieldSelection) {
          return new Just(v1(v2.value0));
        }
        ;
        throw new Error("Failed pattern match at Postgrest.Chart (line 177, column 1 - line 181, column 13): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var computeAxes = function(state3) {
    var g = function(spec) {
      return [name5(unwrap13(spec.name)), type_4(Nominal.value)];
    };
    var f = function(spec) {
      return [name5(unwrap13(spec.name)), type_4(preferredFieldType(spec.sqlType))];
    };
    var facet2 = function() {
      var f2 = function($227) {
        return facet(g($227));
      };
      var f1 = function($228) {
        return facet(f($228));
      };
      return axisSelection(f1)(f2)(state3.facetaxis);
    }();
    var theta2 = function() {
      var f2 = function() {
        var $229 = cons(state3.thetaaggregation);
        return function($230) {
          return theta($229(g($230)));
        };
      }();
      var f1 = function() {
        var $231 = cons(state3.thetaaggregation);
        return function($232) {
          return theta($231(f($232)));
        };
      }();
      return axisSelection(f1)(f2)(state3.thetaaxis);
    }();
    var x2 = function() {
      var f2 = function() {
        var $233 = cons(state3.xaggregation);
        return function($234) {
          return x($233(g($234)));
        };
      }();
      var f1 = function() {
        var $235 = cons(state3.xaggregation);
        return function($236) {
          return x($235(f($236)));
        };
      }();
      return axisSelection(f1)(f2)(state3.xaxis);
    }();
    var y2 = function() {
      var f2 = function() {
        var $237 = cons(state3.yaggregation);
        return function($238) {
          return y($237(g($238)));
        };
      }();
      var f1 = function() {
        var $239 = cons(state3.yaggregation);
        return function($240) {
          return y($239(f($240)));
        };
      }();
      return axisSelection(f1)(f2)(state3.yaxis);
    }();
    var color2 = function() {
      var f2 = function() {
        var $241 = cons(state3.coloraggregation);
        return function($242) {
          return color($241(g($242)));
        };
      }();
      var f1 = function() {
        var $243 = cons(state3.coloraggregation);
        return function($244) {
          return color($243(f($244)));
        };
      }();
      return axisSelection(f1)(f2)(state3.coloraxis);
    }();
    return catMaybes([x2, y2, color2, theta2, facet2]);
  };
  var aggregationSelector = function(mkev) {
    var lookupAggregation = function(n) {
      return index(aggregates)(n - 1 | 0);
    };
    var changeAggregation = function(f) {
      return function(n) {
        return f(lookupAggregation(n));
      };
    };
    var aggregateOption = function(agg) {
      return option([])([text(specifyAggregate(agg))]);
    };
    return select([onSelectedIndexChange(changeAggregation(mkev))])([noneOption, optgroup([attr2(wrap4("label"))("aggregate")])(map211(aggregateOption)(aggregates))]);
  };
  var pickColorAxisSelector = function(dictMonadAff) {
    return function(state3) {
      var changeColorAxis = function(n) {
        return new SelectColorAxis(pickAxis(state3)(n));
      };
      return div_([p_([text("Colour")]), select([onSelectedIndexChange(changeColorAxis)])([noneOption, optgroup([attr2(wrap4("label"))("fields")])(toUnfoldable11(map31(fieldOption(state3.coloraxis))(state3.fields))), optgroup([attr2(wrap4("label"))("computed-fields")])(toUnfoldable11(map31(computedfieldOption(state3.coloraxis))(state3.computedFields)))]), aggregationSelector(AggregateColorAxis.create)]);
    };
  };
  var pickThetaAxisSelector = function(dictMonadAff) {
    return function(state3) {
      var changeThetaAxis = function(n) {
        return new SelectThetaAxis(pickAxis(state3)(n));
      };
      return div_([p_([text("Theta")]), select([onSelectedIndexChange(changeThetaAxis)])([noneOption, optgroup([attr2(wrap4("label"))("fields")])(toUnfoldable11(map31(fieldOption(state3.thetaaxis))(state3.fields))), optgroup([attr2(wrap4("label"))("computed-fields")])(toUnfoldable11(map31(computedfieldOption(state3.thetaaxis))(state3.computedFields)))]), aggregationSelector(AggregateThetaAxis.create)]);
    };
  };
  var pickXAxisSelector = function(dictMonadAff) {
    return function(state3) {
      var changeXAxis = function(n) {
        return new SelectXAxis(pickAxis(state3)(n));
      };
      return div_([p_([text("X-axis")]), select([onSelectedIndexChange(changeXAxis)])([noneOption, optgroup([attr2(wrap4("label"))("fields")])(toUnfoldable11(map31(fieldOption(state3.xaxis))(state3.fields))), optgroup([attr2(wrap4("label"))("computed-fields")])(toUnfoldable11(map31(computedfieldOption(state3.xaxis))(state3.computedFields)))]), aggregationSelector(AggregateXAxis.create)]);
    };
  };
  var pickYAxisSelector = function(dictMonadAff) {
    return function(state3) {
      var changeYAxis = function(n) {
        return new SelectYAxis(pickAxis(state3)(n));
      };
      return div_([p_([text("Y-axis")]), select([onSelectedIndexChange(changeYAxis)])([noneOption, optgroup([attr2(wrap4("label"))("fields")])(toUnfoldable11(map31(fieldOption(state3.yaxis))(state3.fields))), optgroup([attr2(wrap4("label"))("computed-fields")])(toUnfoldable11(map31(computedfieldOption(state3.yaxis))(state3.computedFields)))]), aggregationSelector(AggregateYAxis.create)]);
    };
  };
  var _chartDisplay = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var refreshDisplay = function(dictMonadAff) {
    return discard4(modify_5(function(st0) {
      return {
        coloraggregation: st0.coloraggregation,
        coloraxis: st0.coloraxis,
        computedFields: st0.computedFields,
        dataRows: st0.dataRows,
        datum: st0.datum,
        docked: st0.docked,
        dragging: st0.dragging,
        facetaxis: st0.facetaxis,
        fields: st0.fields,
        htmlID: st0.htmlID,
        position: st0.position,
        showForm: st0.showForm,
        template: st0.template,
        templateName: st0.templateName,
        thetaaggregation: st0.thetaaggregation,
        thetaaxis: st0.thetaaxis,
        title: st0.title,
        xaggregation: st0.xaggregation,
        xaxis: st0.xaxis,
        yaggregation: st0.yaggregation,
        yaxis: st0.yaxis,
        axes: computeAxes(st0)
      };
    }))(function() {
      return bind14(get6)(function(st1) {
        return discard4(function() {
          var v = computeVegaSpec(st1);
          if (v instanceof Just) {
            return applySecond5(query2(_chartDisplay)(unit)(new UpdateSpec(v.value0, unit)))(pure17(unit));
          }
          ;
          if (v instanceof Nothing) {
            return pure17(unit);
          }
          ;
          throw new Error("Failed pattern match at Postgrest.Chart (line 313, column 5 - line 315, column 27): " + [v.constructor.name]);
        }())(function() {
          if (st1.dataRows instanceof Just) {
            return applySecond5(query2(_chartDisplay)(unit)(new ReceiveRows(st1.dataRows.value0, unit)))(pure17(unit));
          }
          ;
          if (st1.dataRows instanceof Nothing) {
            return pure17(unit);
          }
          ;
          throw new Error("Failed pattern match at Postgrest.Chart (line 316, column 5 - line 318, column 27): " + [st1.dataRows.constructor.name]);
        });
      });
    });
  };
  var handleAction3 = function(dictMonadAff) {
    var refreshDisplay1 = refreshDisplay(dictMonadAff);
    return function(v) {
      if (v instanceof Emit2) {
        return raise(v.value0);
      }
      ;
      if (v instanceof SelectTemplate && v.value0 instanceof Nothing) {
        return discard4(modify_5(function(v1) {
          var $132 = {};
          for (var $133 in v1) {
            if ({}.hasOwnProperty.call(v1, $133)) {
              $132[$133] = v1[$133];
            }
            ;
          }
          ;
          $132.templateName = "";
          $132.template = Nothing.value;
          return $132;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof SelectTemplate && v.value0 instanceof Just) {
        var template = find1(function(tpl) {
          return tpl.shorthand === v.value0.value0;
        })(templates);
        return discard4(modify_5(function(v1) {
          var $136 = {};
          for (var $137 in v1) {
            if ({}.hasOwnProperty.call(v1, $137)) {
              $136[$137] = v1[$137];
            }
            ;
          }
          ;
          $136.templateName = v.value0.value0;
          $136.template = template;
          return $136;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof SelectXAxis) {
        return discard4(modify_5(function(v1) {
          var $141 = {};
          for (var $142 in v1) {
            if ({}.hasOwnProperty.call(v1, $142)) {
              $141[$142] = v1[$142];
            }
            ;
          }
          ;
          $141.xaxis = v.value0;
          return $141;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof AggregateXAxis) {
        return discard4(modify_5(function(v1) {
          var $145 = {};
          for (var $146 in v1) {
            if ({}.hasOwnProperty.call(v1, $146)) {
              $145[$146] = v1[$146];
            }
            ;
          }
          ;
          $145.xaggregation = maybe(mempty5)(aggregate)(v.value0);
          return $145;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof SelectYAxis) {
        return discard4(modify_5(function(v1) {
          var $149 = {};
          for (var $150 in v1) {
            if ({}.hasOwnProperty.call(v1, $150)) {
              $149[$150] = v1[$150];
            }
            ;
          }
          ;
          $149.yaxis = v.value0;
          return $149;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof AggregateYAxis) {
        return discard4(modify_5(function(v1) {
          var $153 = {};
          for (var $154 in v1) {
            if ({}.hasOwnProperty.call(v1, $154)) {
              $153[$154] = v1[$154];
            }
            ;
          }
          ;
          $153.yaggregation = maybe(mempty5)(aggregate)(v.value0);
          return $153;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof SelectColorAxis) {
        return discard4(modify_5(function(v1) {
          var $157 = {};
          for (var $158 in v1) {
            if ({}.hasOwnProperty.call(v1, $158)) {
              $157[$158] = v1[$158];
            }
            ;
          }
          ;
          $157.coloraxis = v.value0;
          return $157;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof AggregateColorAxis) {
        return discard4(modify_5(function(v1) {
          var $161 = {};
          for (var $162 in v1) {
            if ({}.hasOwnProperty.call(v1, $162)) {
              $161[$162] = v1[$162];
            }
            ;
          }
          ;
          $161.coloraggregation = maybe(mempty5)(aggregate)(v.value0);
          return $161;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof SelectThetaAxis) {
        return discard4(modify_5(function(v1) {
          var $165 = {};
          for (var $166 in v1) {
            if ({}.hasOwnProperty.call(v1, $166)) {
              $165[$166] = v1[$166];
            }
            ;
          }
          ;
          $165.thetaaxis = v.value0;
          return $165;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof AggregateThetaAxis) {
        return discard4(modify_5(function(v1) {
          var $169 = {};
          for (var $170 in v1) {
            if ({}.hasOwnProperty.call(v1, $170)) {
              $169[$170] = v1[$170];
            }
            ;
          }
          ;
          $169.thetaaggregation = maybe(mempty5)(aggregate)(v.value0);
          return $169;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof SelectFacetAxis) {
        return discard4(modify_5(function(v1) {
          var $173 = {};
          for (var $174 in v1) {
            if ({}.hasOwnProperty.call(v1, $174)) {
              $173[$174] = v1[$174];
            }
            ;
          }
          ;
          $173.facetaxis = v.value0;
          return $173;
        }))(function() {
          return refreshDisplay1;
        });
      }
      ;
      if (v instanceof SetFormVisibility) {
        return modify_5(function(v1) {
          var $177 = {};
          for (var $178 in v1) {
            if ({}.hasOwnProperty.call(v1, $178)) {
              $177[$178] = v1[$178];
            }
            ;
          }
          ;
          $177.showForm = v.value0;
          return $177;
        });
      }
      ;
      if (v instanceof SetDocking) {
        return modify_5(function(v1) {
          var $181 = {};
          for (var $182 in v1) {
            if ({}.hasOwnProperty.call(v1, $182)) {
              $181[$182] = v1[$182];
            }
            ;
          }
          ;
          $181.docked = v.value0;
          $181.position = defaultPosition;
          return $181;
        });
      }
      ;
      if (v instanceof StartDragging) {
        return modify_5(function(st) {
          var $185 = {};
          for (var $186 in st) {
            if ({}.hasOwnProperty.call(st, $186)) {
              $185[$186] = st[$186];
            }
            ;
          }
          ;
          $185.dragging = new Just(new Tuple(st.position, {
            dx: clientX(v.value0),
            dy: clientY(v.value0)
          }));
          return $185;
        });
      }
      ;
      if (v instanceof Dragging) {
        return bind14(get6)(function(st0) {
          if (st0.dragging instanceof Just) {
            return put4(function() {
              var $190 = {};
              for (var $191 in st0) {
                if ({}.hasOwnProperty.call(st0, $191)) {
                  $190[$191] = st0[$191];
                }
                ;
              }
              ;
              $190.position = {
                dx: (st0.dragging.value0.value0.dx - clientX(v.value0) | 0) + st0.dragging.value0.value1.dx | 0,
                dy: (st0.dragging.value0.value0.dy - clientY(v.value0) | 0) + st0.dragging.value0.value1.dy | 0
              };
              return $190;
            }());
          }
          ;
          if (st0.dragging instanceof Nothing) {
            return pure17(unit);
          }
          ;
          throw new Error("Failed pattern match at Postgrest.Chart (line 276, column 5 - line 280, column 18): " + [st0.dragging.constructor.name]);
        });
      }
      ;
      if (v instanceof StopDragging) {
        return bind14(get6)(function(st0) {
          return put4(function() {
            var $197 = {};
            for (var $198 in st0) {
              if ({}.hasOwnProperty.call(st0, $198)) {
                $197[$198] = st0[$198];
              }
              ;
            }
            ;
            $197.position = {
              dx: st0.position.dx - mod4(st0.position.dx)(25) | 0,
              dy: st0.position.dy - mod4(st0.position.dy)(25) | 0
            };
            $197.dragging = Nothing.value;
            return $197;
          }());
        });
      }
      ;
      if (v instanceof HandleChartDisplay) {
        return modify_5(function(v1) {
          var $201 = {};
          for (var $202 in v1) {
            if ({}.hasOwnProperty.call(v1, $202)) {
              $201[$202] = v1[$202];
            }
            ;
          }
          ;
          $201.datum = new Just(v.value0.value0);
          return $201;
        });
      }
      ;
      if (v instanceof ClearDatum) {
        return modify_5(function(v1) {
          var $206 = {};
          for (var $207 in v1) {
            if ({}.hasOwnProperty.call(v1, $207)) {
              $206[$207] = v1[$207];
            }
            ;
          }
          ;
          $206.datum = Nothing.value;
          return $206;
        });
      }
      ;
      throw new Error("Failed pattern match at Postgrest.Chart (line 231, column 16 - line 293, column 36): " + [v.constructor.name]);
    };
  };
  var handleQuery3 = function(dictMonadAff) {
    var refreshDisplay1 = refreshDisplay(dictMonadAff);
    return function(v) {
      if (v instanceof ReceiveRows3) {
        return discard4(modify_5(function(v1) {
          var $210 = {};
          for (var $211 in v1) {
            if ({}.hasOwnProperty.call(v1, $211)) {
              $210[$211] = v1[$211];
            }
            ;
          }
          ;
          $210.dataRows = new Just(v.value0);
          $210.computedFields = v.value1;
          return $210;
        }))(function() {
          return discard4(refreshDisplay1)(function() {
            return pure17(new Just(v.value2));
          });
        });
      }
      ;
      if (v instanceof Clear3) {
        return discard4(modify_5(function(v1) {
          var $216 = {};
          for (var $217 in v1) {
            if ({}.hasOwnProperty.call(v1, $217)) {
              $216[$217] = v1[$217];
            }
            ;
          }
          ;
          $216.dataRows = Nothing.value;
          $216.computedFields = Nil.value;
          return $216;
        }))(function() {
          return discard4(refreshDisplay1)(function() {
            return pure17(new Just(v.value0));
          });
        });
      }
      ;
      throw new Error("Failed pattern match at Postgrest.Chart (line 298, column 15 - line 306, column 18): " + [v.constructor.name]);
    };
  };
  var render3 = function(dictMonadAff) {
    var pickTemplate1 = pickTemplate(dictMonadAff);
    var pickXAxisSelector1 = pickXAxisSelector(dictMonadAff);
    var pickYAxisSelector1 = pickYAxisSelector(dictMonadAff);
    var pickColorAxisSelector1 = pickColorAxisSelector(dictMonadAff);
    var pickThetaAxisSelector1 = pickThetaAxisSelector(dictMonadAff);
    var pickFacetAxisSelector1 = pickFacetAxisSelector(dictMonadAff);
    var chartDisplay2 = chartDisplay(dictMonadAff);
    var renderDatumSelector1 = renderDatumSelector(dictMonadAff);
    return function(state3) {
      var input3 = {
        htmlID: state3.htmlID
      };
      return div2([css(function() {
        if (state3.docked) {
          return "chart-box-docked";
        }
        ;
        return "chart-box";
      }()), style("right:calc(50% + " + (show11(state3.position.dx) + ("px);" + ("bottom:calc(50% + " + (show11(state3.position.dy) + "px);"))))), onMouseDown(StartDragging.create), onMouseUp(StopDragging.create), onMouseLeave(StopDragging.create), onMouseMove(Dragging.create), onMouseLeave(function(v) {
        return ClearDatum.value;
      })])([div2([css("chart-control")])([div2([css("dragging-bar")])([p_([text(state3.title)])]), function() {
        if (state3.showForm) {
          return form([css("chart-form")])([pickTemplate1(state3), pickXAxisSelector1(state3), pickYAxisSelector1(state3), pickColorAxisSelector1(state3), pickThetaAxisSelector1(state3), pickFacetAxisSelector1(state3), div2([css("buttons")])([button([css("mini-button"), onClick(function(v) {
            return new SetFormVisibility(false);
          })])([text("done")]), button([css("mini-button warn"), onClick(function(v) {
            return new Emit2(DeleteMe.value);
          })])([text("del")])])]);
        }
        ;
        return div2([css("buttons")])([button([css("mini-button"), onClick(function(v) {
          return new SetFormVisibility(true);
        })])([text("tune")]), button([css("mini-button"), onClick(function(v) {
          return new SetDocking(!state3.docked);
        })])([function() {
          if (state3.docked) {
            return text("undock");
          }
          ;
          return text("dock");
        }()])]);
      }()]), div2([css("chart-display")])([slot2(_chartDisplay)(unit)(chartDisplay2)(input3)(HandleChartDisplay.create), function() {
        if (state3.datum instanceof Nothing) {
          return text("");
        }
        ;
        if (state3.datum instanceof Just) {
          return renderDatumSelector1(state3)(state3.datum.value0);
        }
        ;
        throw new Error("Failed pattern match at Postgrest.Chart (line 426, column 9 - line 428, column 56): " + [state3.datum.constructor.name]);
      }()])]);
    };
  };
  var chart = function(dictMonadAff) {
    return mkComponent({
      initialState: newState3,
      render: render3(dictMonadAff),
      "eval": mkEval({
        receive: defaultEval.receive,
        initialize: defaultEval.initialize,
        finalize: defaultEval.finalize,
        handleQuery: handleQuery3(dictMonadAff),
        handleAction: handleAction3(dictMonadAff)
      })
    });
  };

  // output/Postgrest.ComputedField/index.js
  var show18 = /* @__PURE__ */ show(showParseError);
  var toExpressionTuple = function(fld) {
    if (fld.computation instanceof Left) {
      return Nothing.value;
    }
    ;
    if (fld.computation instanceof Right) {
      return new Just(new Tuple(fld.name, fld.computation.value0));
    }
    ;
    throw new Error("Failed pattern match at Postgrest.ComputedField (line 28, column 25 - line 30, column 43): " + [fld.computation.constructor.name]);
  };
  var showError = function(err) {
    return show18(err);
  };
  var newComputedField = function(name18) {
    return function(src10) {
      return {
        name: name18,
        source: src10,
        computation: parseExpression(src10)
      };
    };
  };
  var emptyComputedField = /* @__PURE__ */ newComputedField("new field")("");

  // output/Postgrest.QueryBuilder/index.js
  var bind10 = /* @__PURE__ */ bind(bindMaybe);
  var pure18 = /* @__PURE__ */ pure(applicativeMaybe);
  var type_5 = /* @__PURE__ */ type_(isPropInputType);
  var value4 = /* @__PURE__ */ value2(isPropString);
  var show19 = /* @__PURE__ */ show(showInt);
  var map33 = /* @__PURE__ */ map(functorMaybe);
  var unwrap14 = /* @__PURE__ */ unwrap();
  var elem5 = /* @__PURE__ */ elem(foldableList);
  var elem12 = /* @__PURE__ */ elem5(newtypeFieldNameEq);
  var find5 = /* @__PURE__ */ find(foldableList);
  var eq11 = /* @__PURE__ */ eq(newtypeFieldNameEq);
  var toUnfoldable12 = /* @__PURE__ */ toUnfoldable3(unfoldableArray);
  var map116 = /* @__PURE__ */ map(functorList);
  var mempty6 = /* @__PURE__ */ mempty(monoidList);
  var eqTuple2 = /* @__PURE__ */ eqTuple(newtypeModelNameEq)(newtypeFieldNameEq);
  var elem22 = /* @__PURE__ */ elem5(eqTuple2);
  var notEq4 = /* @__PURE__ */ notEq(newtypePathEq);
  var eq17 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(eqString));
  var eqMaybe2 = /* @__PURE__ */ eqMaybe(newtypeFieldNameEq);
  var notEq13 = /* @__PURE__ */ notEq(eqMaybe2);
  var eqMaybe1 = /* @__PURE__ */ eqMaybe(eqOperator);
  var notEq22 = /* @__PURE__ */ notEq(eqMaybe1);
  var eq23 = /* @__PURE__ */ eq(eqMaybe2);
  var eq32 = /* @__PURE__ */ eq(eqMaybe1);
  var insert7 = /* @__PURE__ */ insert2(ordSelector);
  var $$delete6 = /* @__PURE__ */ $$delete2(eqSelector);
  var discard5 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_6 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var pure19 = /* @__PURE__ */ pure(applicativeHalogenM);
  var notEq32 = /* @__PURE__ */ notEq(newtypeFieldNameEq);
  var bind15 = /* @__PURE__ */ bind(bindHalogenM);
  var get7 = /* @__PURE__ */ get(monadStateHalogenM);
  var difference4 = /* @__PURE__ */ difference(newtypeFieldNameEq);
  var applySecond6 = /* @__PURE__ */ applySecond(applyHalogenM);
  var notEq42 = /* @__PURE__ */ notEq(eqTuple2);
  var ClearSelector = /* @__PURE__ */ function() {
    function ClearSelector2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ClearSelector2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ClearSelector2(value0, value1, value22);
        };
      };
    };
    return ClearSelector2;
  }();
  var UpdateSelector = /* @__PURE__ */ function() {
    function UpdateSelector2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    UpdateSelector2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new UpdateSelector2(value0, value1, value22);
        };
      };
    };
    return UpdateSelector2;
  }();
  var UpdatePaginationLimit = /* @__PURE__ */ function() {
    function UpdatePaginationLimit2(value0) {
      this.value0 = value0;
    }
    ;
    UpdatePaginationLimit2.create = function(value0) {
      return new UpdatePaginationLimit2(value0);
    };
    return UpdatePaginationLimit2;
  }();
  var UpdatePaginationSkip = /* @__PURE__ */ function() {
    function UpdatePaginationSkip2(value0) {
      this.value0 = value0;
    }
    ;
    UpdatePaginationSkip2.create = function(value0) {
      return new UpdatePaginationSkip2(value0);
    };
    return UpdatePaginationSkip2;
  }();
  var UpdateOrdering = /* @__PURE__ */ function() {
    function UpdateOrdering2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    UpdateOrdering2.create = function(value0) {
      return function(value1) {
        return new UpdateOrdering2(value0, value1);
      };
    };
    return UpdateOrdering2;
  }();
  var UpdateFieldPresence = /* @__PURE__ */ function() {
    function UpdateFieldPresence2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    UpdateFieldPresence2.create = function(value0) {
      return function(value1) {
        return new UpdateFieldPresence2(value0, value1);
      };
    };
    return UpdateFieldPresence2;
  }();
  var UpdateNestedFieldPresence = /* @__PURE__ */ function() {
    function UpdateNestedFieldPresence2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    UpdateNestedFieldPresence2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new UpdateNestedFieldPresence2(value0, value1, value22);
        };
      };
    };
    return UpdateNestedFieldPresence2;
  }();
  var renderPagination = function(state3) {
    var paginatePrevious = bind10(state3.limit)(function(lim) {
      return bind10(state3.skip)(function(skip) {
        var newSkip = skip - lim | 0;
        var $83 = newSkip >= 0;
        if ($83) {
          return new Just(new UpdatePaginationSkip(newSkip));
        }
        ;
        return Nothing.value;
      });
    });
    var paginateNext = bind10(state3.limit)(function(lim) {
      var skip = fromMaybe(0)(state3.skip);
      var newSkip = skip + lim | 0;
      return pure18(new UpdatePaginationSkip(newSkip));
    });
    var formStringToInt = function(v) {
      if (v === "") {
        return new Just(0);
      }
      ;
      return fromString2(v);
    };
    return div2([css("qb-pagination")])([div2([css("qb-pagination-input")])([p_([text("limit rows")]), input([type_5(InputNumber.value), placeholder("limit"), value4(maybe("")(show19)(state3.limit)), onValueInput(function(str) {
      return map33(UpdatePaginationLimit.create)(formStringToInt(str));
    })])]), div2([css("qb-pagination-input")])([p_([text("skip rows")]), input([type_5(InputNumber.value), placeholder("skip"), value4(maybe("")(show19)(state3.skip)), onValueInput(function(str) {
      return map33(UpdatePaginationSkip.create)(formStringToInt(str));
    })])]), div2([css("qb-pagination-input")])([p_([text("paginate rows")]), div2([css("qb-pagination-buttons")])([button([onClick(function(v) {
      return paginatePrevious;
    })])([text("prev")]), button([onClick(function(v) {
      return paginateNext;
    })])([text("next")])])])]);
  };
  var renderFieldForeignKey = function(v) {
    if (v instanceof Nothing) {
      return text("");
    }
    ;
    if (v instanceof Just) {
      return span_([text("(->"), strong_([text(unwrap14(v.value0.value0))]), em_([text(v.value0.value1)]), text(")")]);
    }
    ;
    throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 397, column 25 - line 405, column 10): " + [v.constructor.name]);
  };
  var renderFieldSpec = function(exclusions) {
    return function(orderings) {
      var textFilter = function(name18) {
        return function(operator2) {
          return input([type_5(InputText.value), onValueInput(function() {
            var $182 = UpdateSelector.create(name18)(operator2);
            return function($183) {
              return Just.create($182($183));
            };
          }())]);
        };
      };
      var numberFilter = function(name18) {
        return function(operator2) {
          return input([type_5(InputNumber.value), onValueInput(function() {
            var $184 = UpdateSelector.create(name18)(operator2);
            return function($185) {
              return Just.create($184($185));
            };
          }())]);
        };
      };
      var label5 = function(txt) {
        return function(html2) {
          return div_([p_([text(txt)]), html2]);
        };
      };
      var numberFilters = function(name18) {
        return div_([label5("equals")(numberFilter(name18)(Oeq.value)), label5("different from")(numberFilter(name18)(Oneq.value)), label5("greather or equal to")(numberFilter(name18)(Ogte.value)), label5("greather than")(numberFilter(name18)(Ogt.value)), label5("lower or equal to")(numberFilter(name18)(Olte.value)), label5("lower than")(numberFilter(name18)(Olt.value))]);
      };
      var defaultFilters = function(name18) {
        return div_([label5("equals")(textFilter(name18)(Oeq.value)), label5("different from")(textFilter(name18)(Oneq.value)), label5("greater than")(textFilter(name18)(Ogt.value)), label5("greater or equal to")(textFilter(name18)(Ogte.value)), label5("lower than")(textFilter(name18)(Olt.value)), label5("lower or equal to")(textFilter(name18)(Olte.value)), label5("like")(textFilter(name18)(Olike.value)), label5("like (case insensitive)")(textFilter(name18)(Oilike.value))]);
      };
      var dateTimeFilter = function(name18) {
        return function(operator2) {
          return input([type_5(InputDatetimeLocal.value), onValueInput(function() {
            var $186 = UpdateSelector.create(name18)(operator2);
            return function($187) {
              return Just.create($186($187));
            };
          }())]);
        };
      };
      var dateTimeFilters = function(name18) {
        return div_([label5("equals")(dateTimeFilter(name18)(Oeq.value)), label5("different from")(dateTimeFilter(name18)(Oneq.value)), label5("greater than")(dateTimeFilter(name18)(Ogt.value)), label5("greater or equal to")(dateTimeFilter(name18)(Ogte.value)), label5("lower than")(dateTimeFilter(name18)(Olt.value)), label5("lower or equal to")(dateTimeFilter(name18)(Olte.value))]);
      };
      var dateFilter = function(name18) {
        return function(operator2) {
          return input([type_5(InputDate.value), onValueInput(function() {
            var $188 = UpdateSelector.create(name18)(operator2);
            return function($189) {
              return Just.create($188($189));
            };
          }())]);
        };
      };
      var dateFilters = function(name18) {
        return div_([label5("equals")(dateFilter(name18)(Oeq.value)), label5("different from")(dateFilter(name18)(Oneq.value)), label5("greater than")(dateFilter(name18)(Ogt.value)), label5("greater or equal to")(dateFilter(name18)(Ogte.value)), label5("lower than")(dateFilter(name18)(Olt.value)), label5("lower or equal to")(dateFilter(name18)(Olte.value))]);
      };
      var selector = function(spec) {
        if (spec.sqlType === "timestamp with time zone") {
          return dateTimeFilters(spec.name);
        }
        ;
        if (spec.sqlType === "timestamp without time zone") {
          return dateTimeFilters(spec.name);
        }
        ;
        if (spec.sqlType === "date") {
          return dateFilters(spec.name);
        }
        ;
        if (spec.sqlType === "smallint") {
          return numberFilters(spec.name);
        }
        ;
        if (spec.sqlType === "integer") {
          return numberFilters(spec.name);
        }
        ;
        if (spec.sqlType === "bigint") {
          return numberFilters(spec.name);
        }
        ;
        if (spec.sqlType === "smallserial") {
          return numberFilters(spec.name);
        }
        ;
        if (spec.sqlType === "serial") {
          return numberFilters(spec.name);
        }
        ;
        if (spec.sqlType === "bigserial") {
          return numberFilters(spec.name);
        }
        ;
        return defaultFilters(spec.name);
      };
      return function(v) {
        if (v instanceof Nothing) {
          return div_([p([css("warn")])([text("missing spec")])]);
        }
        ;
        if (v instanceof Just) {
          var excluded = elem12(v.value0.name)(exclusions);
          return div2([css("qb-field")])([div2([css("qb-field-meta")])([p([css("qb-field-name")])([input([type_5(InputCheckbox.value), checked(!excluded), onChecked(function() {
            var $190 = UpdateFieldPresence.create(v.value0.name);
            return function($191) {
              return Just.create($190($191));
            };
          }())]), text(unwrap14(v.value0.name))]), function() {
            if (excluded) {
              return text("(excluded)");
            }
            ;
            return div2([css("qb-field-querypart")])([div2([css("qb-field-ordering")])([function() {
              var v1 = map33(snd)(find5(function(v2) {
                return eq11(v2.value0)(v.value0.name);
              })(orderings));
              if (v1 instanceof Nothing) {
                return button([onClick($$const(new Just(new UpdateOrdering(v.value0.name, new Just(Ascending.value)))))])([text("-")]);
              }
              ;
              if (v1 instanceof Just && v1.value0 instanceof Ascending) {
                return button([onClick($$const(new Just(new UpdateOrdering(v.value0.name, new Just(Descending.value)))))])([text("a-z")]);
              }
              ;
              if (v1 instanceof Just && v1.value0 instanceof Descending) {
                return button([onClick($$const(new Just(new UpdateOrdering(v.value0.name, Nothing.value))))])([text("z-a")]);
              }
              ;
              throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 295, column 19 - line 301, column 115): " + [v1.constructor.name]);
            }()])]);
          }()]), div2([css("qb-field-selector")])([selector(v.value0), p([css("qb-field-type")])([text("("), text(v.value0.sqlType), text(")"), renderFieldForeignKey(v.value0.fk)])])]);
        }
        ;
        throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 273, column 40 - line 314, column 8): " + [v.constructor.name]);
      };
    };
  };
  var renderFieldSelectors = function(state3) {
    return div2([css("qb-fields")])(toUnfoldable12(map116(renderFieldSpec(state3.excludedFields)(state3.order))(state3.fields)));
  };
  var newState4 = function(input3) {
    return {
      schema: input3.schema,
      path: input3.path,
      fields: input3.fields,
      excludedFields: mempty6,
      selectors: mempty6,
      limit: new Just(defaultLimit),
      skip: Nothing.value,
      order: mempty6,
      nestedFields: mempty6
    };
  };
  var nestedFieldcheckbox = function(state3) {
    return function(model) {
      return function(field) {
        return function(isjoinkey) {
          var included = elem22(new Tuple(model, field))(state3.nestedFields);
          return div2([css("qb-field")])([div2([css("qb-field-meta")])([p([css("qb-field-name")])([input([type_5(InputCheckbox.value), checked(included), onChecked(function() {
            var $192 = UpdateNestedFieldPresence.create(model)(field);
            return function($193) {
              return Just.create($192($193));
            };
          }())]), text(unwrap14(field) + function() {
            if (isjoinkey) {
              return "*";
            }
            ;
            return "";
          }())])])]);
        };
      };
    };
  };
  var renderIncomingFieldSelectors = function(state3) {
    return function(v) {
      var nestedRef = function(model) {
        return function(ref2) {
          var v1 = fieldName(model)(ref2);
          if (v1 instanceof Nothing) {
            return li([css("warn")])([text("error: unparseable ref: " + unwrap14(ref2))]);
          }
          ;
          if (v1 instanceof Just) {
            return li_([nestedFieldcheckbox(state3)(model)(v1.value0)(false)]);
          }
          ;
          throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 245, column 7 - line 247, column 77): " + [v1.constructor.name]);
        };
      };
      return div2([css("qb-fields")])([div_([p_([text(unwrap14(v.value0))]), function() {
        var v1 = pathToModelName(v.value0);
        if (v1 instanceof Nothing) {
          return p_([text("error, could not locate srcmodel name")]);
        }
        ;
        if (v1 instanceof Just) {
          var v2 = map33(fksPointingTo(state3.schema)(new Tuple(v1.value0, v.value1)))(pathToModelName(state3.path));
          if (v2 instanceof Nothing) {
            return p_([text("error, could not locate targetmodel name")]);
          }
          ;
          if (v2 instanceof Just && v2.value0 instanceof Nil) {
            return p_([text("no FKs")]);
          }
          ;
          if (v2 instanceof Just) {
            return ul_(toUnfoldable12(map116(nestedRef(v1.value0))(extractRefs(v.value1))));
          }
          ;
          throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 234, column 15 - line 240, column 50): " + [v2.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 231, column 9 - line 240, column 50): " + [v1.constructor.name]);
      }()])]);
    };
  };
  var renderRelatedFieldSelectors = function(state3) {
    var nestedRef = function(fmodel) {
      return function(fkfname) {
        return function(ref2) {
          var v = fieldName(fmodel)(ref2);
          if (v instanceof Nothing) {
            return li([css("warn")])([text("error: unparseable ref: " + unwrap14(ref2))]);
          }
          ;
          if (v instanceof Just) {
            return li_([nestedFieldcheckbox(state3)(fmodel)(v.value0)(eq11(fkfname)(v.value0))]);
          }
          ;
          throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 222, column 7 - line 224, column 91): " + [v.constructor.name]);
        };
      };
    };
    var renderOutgoingFK = function(localfield) {
      if (localfield.fk instanceof Nothing) {
        return p_([text(unwrap14(localfield.name))]);
      }
      ;
      if (localfield.fk instanceof Just) {
        return div_([p_([text("via "), text(unwrap14(localfield.name)), text(" ~> "), text(unwrap14(localfield.fk.value0.value0))]), function() {
          var v = path(state3.schema)(modelNameToPath(localfield.fk.value0.value0));
          if (v instanceof Nothing) {
            return p_([text(unwrap14(localfield.fk.value0.value0))]);
          }
          ;
          if (v instanceof Just) {
            return ul_(toUnfoldable12(map116(nestedRef(localfield.fk.value0.value0)(localfield.fk.value0.value1))(extractRefs(v.value0))));
          }
          ;
          throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 213, column 17 - line 219, column 44): " + [v.constructor.name]);
        }()]);
      }
      ;
      throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 203, column 35 - line 220, column 16): " + [localfield.fk.constructor.name]);
    };
    return div2([css("qb-fields")])(toUnfoldable12(map116(renderOutgoingFK)(filter(function($194) {
      return isJust(function(v) {
        return v.fk;
      }($194));
    })(catMaybes2(state3.fields)))));
  };
  var render4 = function(state3) {
    return div2([css("qb-container")])([div2([css("qb-pagination-container")])([h4_([text("pagination")]), renderPagination(state3)]), div2([css("qb-fields-container")])([h4_([text("fields")]), renderFieldSelectors(state3)]), div2([css("qb-relations-container")])([h4_([text("embedding (out)")]), renderRelatedFieldSelectors(state3)]), div2([css("qb-relations-container")])([h4_([text("embedding (in)")]), div_(toUnfoldable12(map116(renderIncomingFieldSelectors(state3))(filter(function() {
      var $195 = notEq4(rootPath);
      return function($196) {
        return $195(fst($196));
      };
    }())(filter(function($197) {
      return hasTags(snd($197));
    })(fromMaybe(Nil.value)(lookupPathsInfos(state3.schema)))))))])]);
  };
  var mergeSelector = function(sels) {
    return function($$new2) {
      if (eq17(val($$new2))(new Just(""))) {
        return filter(function(old) {
          return notEq13(column(old))(column($$new2)) || notEq22(operator(old))(operator($$new2));
        })(sels);
      }
      ;
      if (otherwise) {
        var v = find5(function(old) {
          return eq23(column(old))(column($$new2)) && eq32(operator($$new2))(operator($$new2));
        })(sels);
        if (v instanceof Nothing) {
          return insert7($$new2)(sels);
        }
        ;
        if (v instanceof Just) {
          return insert7($$new2)($$delete6(v.value0)(sels));
        }
        ;
        throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 59, column 5 - line 61, column 54): " + [v.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 54, column 1 - line 54, column 60): " + [sels.constructor.name, $$new2.constructor.name]);
    };
  };
  var handleQuery4 = function(dictMonadAff) {
    return function(v) {
      var runFilter = filter(function(old) {
        return notEq13(column(old))(new Just(v.value0)) || notEq22(operator(old))(new Just(v.value1));
      });
      return discard5(modify_6(function(state3) {
        var $124 = {};
        for (var $125 in state3) {
          if ({}.hasOwnProperty.call(state3, $125)) {
            $124[$125] = state3[$125];
          }
          ;
        }
        ;
        $124.selectors = runFilter(state3.selectors);
        return $124;
      }))(function() {
        return pure19(new Just(v.value2));
      });
    };
  };
  var handleAction4 = function(dictMonadAff) {
    return function(v) {
      if (v instanceof Nothing) {
        return pure19(unit);
      }
      ;
      if (v instanceof Just) {
        var removeOrdering = function(xs) {
          return function(k) {
            return filter(function(kv) {
              return notEq32(fst(kv))(k);
            })(xs);
          };
        };
        var mergeOrdering = function(xs) {
          return function(k) {
            return function(v1) {
              if (v1 instanceof Nothing) {
                return removeOrdering(xs)(k);
              }
              ;
              if (v1 instanceof Just) {
                return new Cons(new Tuple(k, v1.value0), removeOrdering(xs)(k));
              }
              ;
              throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 134, column 26 - line 136, column 60): " + [v1.constructor.name]);
            };
          };
        };
        var emit = bind15(get7)(function(state3) {
          var knownFields = map116(function(v1) {
            return v1.name;
          })(catMaybes2(state3.fields));
          var selection = difference4(knownFields)(state3.excludedFields);
          return raise({
            selectors: state3.selectors,
            limit: state3.limit,
            skip: state3.skip,
            order: state3.order,
            selection,
            nestedFields: state3.nestedFields
          });
        });
        if (v.value0 instanceof UpdateSelector) {
          var $$new2 = new LeafSelector({
            column: v.value0.value0,
            operator: v.value0.value1,
            val: v.value0.value2
          });
          return discard5(modify_6(function(state3) {
            var $134 = {};
            for (var $135 in state3) {
              if ({}.hasOwnProperty.call(state3, $135)) {
                $134[$135] = state3[$135];
              }
              ;
            }
            ;
            $134.selectors = mergeSelector(state3.selectors)($$new2);
            return $134;
          }))(function() {
            return emit;
          });
        }
        ;
        if (v.value0 instanceof UpdatePaginationLimit) {
          if (v.value0.value0 > 0) {
            return applySecond6(modify_6(function(v1) {
              var $140 = {};
              for (var $141 in v1) {
                if ({}.hasOwnProperty.call(v1, $141)) {
                  $140[$141] = v1[$141];
                }
                ;
              }
              ;
              $140.limit = new Just(v.value0.value0);
              return $140;
            }))(emit);
          }
          ;
          if (otherwise) {
            return applySecond6(modify_6(function(v1) {
              var $143 = {};
              for (var $144 in v1) {
                if ({}.hasOwnProperty.call(v1, $144)) {
                  $143[$144] = v1[$144];
                }
                ;
              }
              ;
              $143.limit = Nothing.value;
              return $143;
            }))(emit);
          }
          ;
        }
        ;
        if (v.value0 instanceof UpdatePaginationSkip) {
          if (v.value0.value0 > 0) {
            return applySecond6(modify_6(function(v1) {
              var $147 = {};
              for (var $148 in v1) {
                if ({}.hasOwnProperty.call(v1, $148)) {
                  $147[$148] = v1[$148];
                }
                ;
              }
              ;
              $147.skip = new Just(v.value0.value0);
              return $147;
            }))(emit);
          }
          ;
          if (otherwise) {
            return applySecond6(modify_6(function(v1) {
              var $150 = {};
              for (var $151 in v1) {
                if ({}.hasOwnProperty.call(v1, $151)) {
                  $150[$151] = v1[$151];
                }
                ;
              }
              ;
              $150.skip = Nothing.value;
              return $150;
            }))(emit);
          }
          ;
        }
        ;
        if (v.value0 instanceof UpdateFieldPresence && !v.value0.value1) {
          return discard5(modify_6(function(state3) {
            var $154 = {};
            for (var $155 in state3) {
              if ({}.hasOwnProperty.call(state3, $155)) {
                $154[$155] = state3[$155];
              }
              ;
            }
            ;
            $154.excludedFields = new Cons(v.value0.value0, state3.excludedFields);
            return $154;
          }))(function() {
            return emit;
          });
        }
        ;
        if (v.value0 instanceof UpdateFieldPresence && v.value0.value1) {
          return discard5(modify_6(function(state3) {
            var $159 = {};
            for (var $160 in state3) {
              if ({}.hasOwnProperty.call(state3, $160)) {
                $159[$160] = state3[$160];
              }
              ;
            }
            ;
            $159.excludedFields = filter(notEq32(v.value0.value0))(state3.excludedFields);
            return $159;
          }))(function() {
            return emit;
          });
        }
        ;
        if (v.value0 instanceof UpdateNestedFieldPresence && v.value0.value2) {
          var tup = new Tuple(v.value0.value0, v.value0.value1);
          return discard5(modify_6(function(state3) {
            var $164 = {};
            for (var $165 in state3) {
              if ({}.hasOwnProperty.call(state3, $165)) {
                $164[$165] = state3[$165];
              }
              ;
            }
            ;
            $164.nestedFields = new Cons(tup, state3.nestedFields);
            return $164;
          }))(function() {
            return emit;
          });
        }
        ;
        if (v.value0 instanceof UpdateNestedFieldPresence && !v.value0.value2) {
          var tup = new Tuple(v.value0.value0, v.value0.value1);
          return discard5(modify_6(function(state3) {
            var $170 = {};
            for (var $171 in state3) {
              if ({}.hasOwnProperty.call(state3, $171)) {
                $170[$171] = state3[$171];
              }
              ;
            }
            ;
            $170.nestedFields = filter(notEq42(tup))(state3.nestedFields);
            return $170;
          }))(function() {
            return emit;
          });
        }
        ;
        if (v.value0 instanceof UpdateOrdering) {
          return discard5(modify_6(function(state3) {
            var $176 = {};
            for (var $177 in state3) {
              if ({}.hasOwnProperty.call(state3, $177)) {
                $176[$177] = state3[$177];
              }
              ;
            }
            ;
            $176.order = mergeOrdering(state3.order)(v.value0.value0)(v.value0.value1);
            return $176;
          }))(function() {
            return emit;
          });
        }
        ;
        throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 105, column 27 - line 132, column 9): " + [v.value0.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Postgrest.QueryBuilder (line 100, column 1 - line 103, column 54): " + [v.constructor.name]);
    };
  };
  var queryBuilder = function(dictMonadAff) {
    return mkComponent({
      initialState: newState4,
      render: render4,
      "eval": mkEval({
        receive: defaultEval.receive,
        initialize: defaultEval.initialize,
        finalize: defaultEval.finalize,
        handleAction: handleAction4(dictMonadAff),
        handleQuery: handleQuery4(dictMonadAff)
      })
    });
  };

  // output/Web.HTML.Event.DragEvent/index.js
  var toEvent2 = unsafeCoerce2;

  // output/Postgrest.Perspective/index.js
  var pure20 = /* @__PURE__ */ pure(applicativeEffect);
  var forever2 = /* @__PURE__ */ forever(monadRecAff);
  var discard6 = /* @__PURE__ */ discard(discardUnit);
  var discard1 = /* @__PURE__ */ discard6(bindAff);
  var liftEffect3 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var unwrap15 = /* @__PURE__ */ unwrap();
  var toUnfoldable13 = /* @__PURE__ */ toUnfoldable3(unfoldableArray);
  var map34 = /* @__PURE__ */ map(functorList);
  var type_6 = /* @__PURE__ */ type_(isPropInputType);
  var show20 = /* @__PURE__ */ show(showBoolean);
  var value5 = /* @__PURE__ */ value2(isPropString);
  var show110 = /* @__PURE__ */ show(showInt);
  var show25 = /* @__PURE__ */ show(showNumber);
  var map117 = /* @__PURE__ */ map(functorArray);
  var length7 = /* @__PURE__ */ length2(foldableList)(semiringInt);
  var nub3 = /* @__PURE__ */ nub(newtypeModelNameOrd);
  var length1 = /* @__PURE__ */ length2(foldableMap)(semiringInt);
  var append15 = /* @__PURE__ */ append(semigroupList);
  var mempty7 = /* @__PURE__ */ mempty(monoidList);
  var bind16 = /* @__PURE__ */ bind(bindMaybe);
  var ix8 = /* @__PURE__ */ ix(indexForeignObject);
  var choiceForget8 = /* @__PURE__ */ choiceForget(monoidFirst);
  var _String5 = /* @__PURE__ */ _String(choiceForget8);
  var map212 = /* @__PURE__ */ map(functorMaybe);
  var pure110 = /* @__PURE__ */ pure(applicativeMaybe);
  var pure23 = /* @__PURE__ */ pure(applicativeAff);
  var bind22 = /* @__PURE__ */ bind(bindAff);
  var _Just2 = /* @__PURE__ */ _Just(choiceForget8);
  var _Array4 = /* @__PURE__ */ _Array(choiceForget8);
  var length22 = /* @__PURE__ */ length2(foldableArray)(semiringInt);
  var bind32 = /* @__PURE__ */ bind(bindHalogenM);
  var get8 = /* @__PURE__ */ get(monadStateHalogenM);
  var when2 = /* @__PURE__ */ when(applicativeHalogenM);
  var discard23 = /* @__PURE__ */ discard6(bindHalogenM);
  var modify_7 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var insert8 = /* @__PURE__ */ insert2(ordSelector);
  var map35 = /* @__PURE__ */ map(functorAff);
  var traverse4 = /* @__PURE__ */ traverse(traversableArray)(applicativeAff);
  var ordRecord2 = /* @__PURE__ */ ordRecord()(/* @__PURE__ */ ordRecordCons(/* @__PURE__ */ ordRecordCons(ordRecordNil)()({
    reflectSymbol: function() {
      return "index";
    }
  })(ordInt))()({
    reflectSymbol: function() {
      return "field";
    }
  })(newtypeFieldNameOrd));
  var union3 = /* @__PURE__ */ union2(ordRecord2);
  var fromFoldable7 = /* @__PURE__ */ fromFoldable4(ordRecord2)(foldableArray);
  var put5 = /* @__PURE__ */ put(monadStateHalogenM);
  var query3 = /* @__PURE__ */ query();
  var tableDisplayIsSymbol = {
    reflectSymbol: function() {
      return "tableDisplay";
    }
  };
  var query1 = /* @__PURE__ */ query3(tableDisplayIsSymbol)(ordUnit);
  var pure32 = /* @__PURE__ */ pure(applicativeHalogenM);
  var notEq14 = /* @__PURE__ */ notEq(eqSelector);
  var queryBuilderIsSymbol = {
    reflectSymbol: function() {
      return "queryBuilder";
    }
  };
  var query22 = /* @__PURE__ */ query3(queryBuilderIsSymbol)(ordUnit);
  var chartIsSymbol = {
    reflectSymbol: function() {
      return "chart";
    }
  };
  var query32 = /* @__PURE__ */ query3(chartIsSymbol)(ordInt);
  var notEq23 = /* @__PURE__ */ notEq(newtypeFieldNameEq);
  var apply5 = /* @__PURE__ */ apply(applyMaybe);
  var fromFoldable1 = /* @__PURE__ */ fromFoldable3(foldableArray);
  var traverse12 = /* @__PURE__ */ traverse(traversableList)(applicativeHalogenM);
  var monoidEndo5 = /* @__PURE__ */ monoidEndo(categoryFn);
  var choiceForget13 = /* @__PURE__ */ choiceForget(monoidEndo5);
  var _Just1 = /* @__PURE__ */ _Just(choiceForget13);
  var _Array12 = /* @__PURE__ */ _Array(choiceForget13);
  var traversed3 = /* @__PURE__ */ traversed(traversableArray)(/* @__PURE__ */ wanderForget(monoidEndo5));
  var _Object6 = /* @__PURE__ */ _Object(choiceForget13);
  var slot3 = /* @__PURE__ */ slot();
  var slot1 = /* @__PURE__ */ slot3(queryBuilderIsSymbol)(ordUnit);
  var fold5 = /* @__PURE__ */ fold(foldableArray)(monoidList);
  var slot22 = /* @__PURE__ */ slot3(tableDisplayIsSymbol)(ordUnit);
  var slot32 = /* @__PURE__ */ slot3(chartIsSymbol)(ordInt);
  var Refresh = /* @__PURE__ */ function() {
    function Refresh2() {
    }
    ;
    Refresh2.value = new Refresh2();
    return Refresh2;
  }();
  var DownloadCSV = /* @__PURE__ */ function() {
    function DownloadCSV2() {
    }
    ;
    DownloadCSV2.value = new DownloadCSV2();
    return DownloadCSV2;
  }();
  var ClearRows = /* @__PURE__ */ function() {
    function ClearRows2(value0) {
      this.value0 = value0;
    }
    ;
    ClearRows2.create = function(value0) {
      return new ClearRows2(value0);
    };
    return ClearRows2;
  }();
  var ReceiveRows4 = /* @__PURE__ */ function() {
    function ReceiveRows5(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ReceiveRows5.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ReceiveRows5(value0, value1, value22);
        };
      };
    };
    return ReceiveRows5;
  }();
  var HandleQueryBuilder = /* @__PURE__ */ function() {
    function HandleQueryBuilder2(value0, value1, value22, value32, value42) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
    }
    ;
    HandleQueryBuilder2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return new HandleQueryBuilder2(value0, value1, value22, value32, value42);
            };
          };
        };
      };
    };
    return HandleQueryBuilder2;
  }();
  var HandleTableDisplay = /* @__PURE__ */ function() {
    function HandleTableDisplay2(value0) {
      this.value0 = value0;
    }
    ;
    HandleTableDisplay2.create = function(value0) {
      return new HandleTableDisplay2(value0);
    };
    return HandleTableDisplay2;
  }();
  var HandleChartDisplay2 = /* @__PURE__ */ function() {
    function HandleChartDisplay3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    HandleChartDisplay3.create = function(value0) {
      return function(value1) {
        return new HandleChartDisplay3(value0, value1);
      };
    };
    return HandleChartDisplay3;
  }();
  var SetRefreshOnChange = /* @__PURE__ */ function() {
    function SetRefreshOnChange2(value0) {
      this.value0 = value0;
    }
    ;
    SetRefreshOnChange2.create = function(value0) {
      return new SetRefreshOnChange2(value0);
    };
    return SetRefreshOnChange2;
  }();
  var SetRefreshSeconds = /* @__PURE__ */ function() {
    function SetRefreshSeconds2(value0) {
      this.value0 = value0;
    }
    ;
    SetRefreshSeconds2.create = function(value0) {
      return new SetRefreshSeconds2(value0);
    };
    return SetRefreshSeconds2;
  }();
  var PromoteEditingSelector = /* @__PURE__ */ function() {
    function PromoteEditingSelector2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    PromoteEditingSelector2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new PromoteEditingSelector2(value0, value1, value22);
        };
      };
    };
    return PromoteEditingSelector2;
  }();
  var ClearEditingSelector = /* @__PURE__ */ function() {
    function ClearEditingSelector2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ClearEditingSelector2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ClearEditingSelector2(value0, value1, value22);
        };
      };
    };
    return ClearEditingSelector2;
  }();
  var RemoveSelector = /* @__PURE__ */ function() {
    function RemoveSelector2(value0) {
      this.value0 = value0;
    }
    ;
    RemoveSelector2.create = function(value0) {
      return new RemoveSelector2(value0);
    };
    return RemoveSelector2;
  }();
  var NegateSelector = /* @__PURE__ */ function() {
    function NegateSelector2(value0) {
      this.value0 = value0;
    }
    ;
    NegateSelector2.create = function(value0) {
      return new NegateSelector2(value0);
    };
    return NegateSelector2;
  }();
  var DisableSelector = /* @__PURE__ */ function() {
    function DisableSelector2(value0) {
      this.value0 = value0;
    }
    ;
    DisableSelector2.create = function(value0) {
      return new DisableSelector2(value0);
    };
    return DisableSelector2;
  }();
  var SplitSelector = /* @__PURE__ */ function() {
    function SplitSelector2(value0) {
      this.value0 = value0;
    }
    ;
    SplitSelector2.create = function(value0) {
      return new SplitSelector2(value0);
    };
    return SplitSelector2;
  }();
  var RequestFetch = /* @__PURE__ */ function() {
    function RequestFetch2() {
    }
    ;
    RequestFetch2.value = new RequestFetch2();
    return RequestFetch2;
  }();
  var RequestDownload = /* @__PURE__ */ function() {
    function RequestDownload2() {
    }
    ;
    RequestDownload2.value = new RequestDownload2();
    return RequestDownload2;
  }();
  var AddChart = /* @__PURE__ */ function() {
    function AddChart2() {
    }
    ;
    AddChart2.value = new AddChart2();
    return AddChart2;
  }();
  var SetNewChartTitle = /* @__PURE__ */ function() {
    function SetNewChartTitle2(value0) {
      this.value0 = value0;
    }
    ;
    SetNewChartTitle2.create = function(value0) {
      return new SetNewChartTitle2(value0);
    };
    return SetNewChartTitle2;
  }();
  var SetEditComputedColumn = /* @__PURE__ */ function() {
    function SetEditComputedColumn2(value0) {
      this.value0 = value0;
    }
    ;
    SetEditComputedColumn2.create = function(value0) {
      return new SetEditComputedColumn2(value0);
    };
    return SetEditComputedColumn2;
  }();
  var AddComputedColumn = /* @__PURE__ */ function() {
    function AddComputedColumn2(value0) {
      this.value0 = value0;
    }
    ;
    AddComputedColumn2.create = function(value0) {
      return new AddComputedColumn2(value0);
    };
    return AddComputedColumn2;
  }();
  var SetComputedColumnName = /* @__PURE__ */ function() {
    function SetComputedColumnName2(value0) {
      this.value0 = value0;
    }
    ;
    SetComputedColumnName2.create = function(value0) {
      return new SetComputedColumnName2(value0);
    };
    return SetComputedColumnName2;
  }();
  var SetComputedColumnExpression = /* @__PURE__ */ function() {
    function SetComputedColumnExpression2(value0) {
      this.value0 = value0;
    }
    ;
    SetComputedColumnExpression2.create = function(value0) {
      return new SetComputedColumnExpression2(value0);
    };
    return SetComputedColumnExpression2;
  }();
  var DraggingSelector = /* @__PURE__ */ function() {
    function DraggingSelector2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    DraggingSelector2.create = function(value0) {
      return function(value1) {
        return new DraggingSelector2(value0, value1);
      };
    };
    return DraggingSelector2;
  }();
  var DraggingOver = /* @__PURE__ */ function() {
    function DraggingOver2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    DraggingOver2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new DraggingOver2(value0, value1, value22);
        };
      };
    };
    return DraggingOver2;
  }();
  var DraggingDone = /* @__PURE__ */ function() {
    function DraggingDone2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    DraggingDone2.create = function(value0) {
      return function(value1) {
        return new DraggingDone2(value0, value1);
      };
    };
    return DraggingDone2;
  }();
  var timer = function(ms) {
    var onError = function(v) {
      return pure20(unit);
    };
    return makeEmitter(function(emitter) {
      return function __do2() {
        var fiber = runAff(onError)(forever2(discard1(liftEffect3(emitter(RequestFetch.value)))(function() {
          return delay(ms);
        })))();
        return launchAff_(killFiber(error("killing timer fiber"))(fiber));
      };
    });
  };
  var renderSelector = function(state3) {
    return function(depth) {
      return function(sel) {
        var showButton = depth === 0;
        var selectorText = function() {
          if (sel instanceof NotClause) {
            return [text("NOT")];
          }
          ;
          if (sel instanceof DisableClause) {
            return [text("--disabled--")];
          }
          ;
          if (sel instanceof AndClause) {
            return [text("AND")];
          }
          ;
          if (sel instanceof OrClause) {
            return [text("OR")];
          }
          ;
          if (sel instanceof LeafSelector) {
            return [text(unwrap15(sel.value0.column)), text(" "), strong_([text(readableQueryFragment(sel.value0.operator))]), text(" "), text(sel.value0.val)];
          }
          ;
          throw new Error("Failed pattern match at Postgrest.Perspective (line 617, column 7 - line 632, column 12): " + [sel.constructor.name]);
        }();
        var nestedSelectors = function() {
          if (sel instanceof NotClause) {
            return renderSelector(state3)(depth + 1 | 0)(sel.value0);
          }
          ;
          if (sel instanceof DisableClause) {
            return renderSelector(state3)(depth + 1 | 0)(sel.value0);
          }
          ;
          if (sel instanceof AndClause) {
            return div_(toUnfoldable13(map34(renderSelector(state3)(depth + 1 | 0))(sel.value0)));
          }
          ;
          if (sel instanceof OrClause) {
            return div_(toUnfoldable13(map34(renderSelector(state3)(depth + 1 | 0))(sel.value0)));
          }
          ;
          if (sel instanceof LeafSelector) {
            return text("");
          }
          ;
          throw new Error("Failed pattern match at Postgrest.Perspective (line 635, column 7 - line 645, column 21): " + [sel.constructor.name]);
        }();
        var dropOffZones = div2([css("selector-dragzones")])([div2([css("selector-dragzone"), onDragEnter(function(ev) {
          return new DraggingOver(ev, true, sel);
        }), onDragOver(function(ev) {
          return new DraggingOver(ev, true, sel);
        }), onDragLeave(function(ev) {
          return new DraggingOver(ev, false, sel);
        }), onDrop(function(ev) {
          return new DraggingDone(ev, OrClause.create);
        })])([strong_([text("DROP-OR")])]), div2([css("selector-dragzone"), onDragEnter(function(ev) {
          return new DraggingOver(ev, true, sel);
        }), onDragOver(function(ev) {
          return new DraggingOver(ev, true, sel);
        }), onDragLeave(function(ev) {
          return new DraggingOver(ev, false, sel);
        }), onDrop(function(ev) {
          return new DraggingDone(ev, AndClause.create);
        })])([strong_([text("DROP-AND")])])]);
        var doSplitButton = function($$char2) {
          return button([css("selector-invert-button"), onClick($$const(new SplitSelector(sel)))])([text($$char2)]);
        };
        var negateButton = function() {
          if (sel instanceof NotClause) {
            return doSplitButton("~");
          }
          ;
          if (sel instanceof DisableClause) {
            return text("");
          }
          ;
          return button([css("selector-invert-button"), onClick($$const(new NegateSelector(sel)))])([text("~")]);
        }();
        var splitButton = function() {
          if (sel instanceof LeafSelector) {
            return text("");
          }
          ;
          if (sel instanceof NotClause) {
            return text("");
          }
          ;
          if (sel instanceof DisableClause) {
            return text("");
          }
          ;
          return doSplitButton("x");
        }();
        var disableButton = function() {
          if (sel instanceof DisableClause) {
            return doSplitButton("o");
          }
          ;
          return button([css("selector-invert-button"), onClick($$const(new DisableSelector(sel)))])([text("o")]);
        }();
        var deleteButton = button([css("selector-remove-button"), onClick($$const(new RemoveSelector(sel)))])([text("-")]);
        var canDropOff = function() {
          if (sel instanceof DisableClause) {
            return false;
          }
          ;
          return isJust(state3.draggedSelector) && depth === 0;
        }();
        return div2([css("selector-container")])([div2([css("selector"), draggable(depth === 0), onDragStart(function(v) {
          return new DraggingSelector(true, sel);
        }), onDragEnd(function(v) {
          return new DraggingSelector(false, sel);
        })])([span2([css("selector-text")])([div_(selectorText), function() {
          if (canDropOff) {
            return dropOffZones;
          }
          ;
          return text("");
        }(), nestedSelectors]), function() {
          if (showButton) {
            return div_([disableButton, negateButton, splitButton, deleteButton]);
          }
          ;
          return text("");
        }()])]);
      };
    };
  };
  var renderRefresh = function(dictMonadAff) {
    return function(state3) {
      return div_([p_([input([type_6(InputCheckbox.value), onChecked(SetRefreshOnChange.create), checked(state3.refreshOnChange)]), text("refresh-on-change: " + show20(state3.refreshOnChange))]), p_([text("refresh interval (seconds):")]), input([type_6(InputNumber.value), min3(0), value5(show110(state3.refreshSeconds)), onValueInput(function() {
        var $467 = fromMaybe(0);
        return function($468) {
          return SetRefreshSeconds.create($467(fromString2($468)));
        };
      }())])]);
    };
  };
  var renderQueryBuilderSelectors = /* @__PURE__ */ function() {
    var renderQbLeafSelector = function(sel) {
      return div2([css("selector-container")])([div2([css("tmp-selector")])([span2([css("selector-text")])([text(unwrap15(sel.column)), text(" "), strong_([text(readableQueryFragment(sel.operator))]), text(" "), text(sel.val)]), button([css("selector-promote-button"), onClick($$const(new PromoteEditingSelector(sel.column, sel.operator, sel.val)))])([text(".")]), button([css("selector-remove-button"), onClick($$const(new ClearEditingSelector(sel.column, sel.operator, sel.val)))])([text("-")])])]);
    };
    var renderQbSelector = function(v) {
      if (v instanceof LeafSelector) {
        return renderQbLeafSelector(v.value0);
      }
      ;
      return text("");
    };
    return map34(renderQbSelector);
  }();
  var renderPreview = function(state3) {
    return function(expr) {
      if (state3.dataRows instanceof Nothing) {
        return p_([text("no data to preview")]);
      }
      ;
      if (state3.dataRows instanceof Just) {
        var renderRow$prime = function(ctx) {
          var v = lookupComputedResult(ctx)(state3.editingComputedField.name);
          if (v instanceof Right && v.value0 instanceof ExprString) {
            return td_([pre_([text(v.value0.value0)])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprFloat) {
            return td_([pre_([text(show25(v.value0.value0))])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprInt) {
            return td_([pre_([text(show110(v.value0.value0))])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprBoolean) {
            return td_([pre_([text(show20(v.value0.value0))])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprObject) {
            return td_([pre_([text(stringifyWithIndent(2)(id(v.value0.value0)))])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprArray) {
            return td_([pre_([text(stringifyWithIndent(2)(id(v.value0.value0)))])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprAtom) {
            return td_([code_([text(showAtom(v.value0.value0))])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprLink) {
            return td_([pre_([a([href(v.value0.value0)])([text(v.value0.value0)])])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprImage) {
            return td_([img([src(v.value0.value0)])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprProgressBar) {
            return td_([div2([css("progress-bar")])([div2([style("width:" + (toString2(v.value0.value0) + "%;"))])([])])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprColorDot) {
            return td_([div2([css("color-dot")])([div2([style("background-color:" + (v.value0.value0 + ";"))])([])])]);
          }
          ;
          if (v instanceof Right && v.value0 instanceof ExprAjaxCall) {
            return td_([strong_([text("ajax")]), pre_([text(stringifyWithIndent(2)(id(unwrap15(v.value0.value0))))]), button([css("mini-button"), disabled(true)])([text("exec")])]);
          }
          ;
          if (v instanceof Left && v.value0 instanceof ConversionError) {
            return td_([pre([css("warn")])([text("conversion error")])]);
          }
          ;
          if (v instanceof Left && v.value0 instanceof Uncoercible) {
            return td_([pre([css("warn")])([text(unwrap15(v.value0.value0) + " is not coercible")])]);
          }
          ;
          if (v instanceof Left && v.value0 instanceof ArgError) {
            return td_([pre([css("warn")])([text("argument error: " + v.value0.value0)])]);
          }
          ;
          if (v instanceof Left && v.value0 instanceof NotEvaluated) {
            return td_([pre([css("error")])([text("evaluation missing")])]);
          }
          ;
          if (v instanceof Left && v.value0 instanceof NotImplemented) {
            return td_([pre([css("warn")])([text("not implemented (please raise your voice)")])]);
          }
          ;
          throw new Error("Failed pattern match at Postgrest.Perspective (line 849, column 11 - line 901, column 18): " + [v.constructor.name]);
        };
        var renderRow = function(ctx) {
          return tr_([renderRow$prime(ctx)]);
        };
        var datarows = contextualizeDataRows(state3.dataRows.value0)(singleton5(new Tuple(state3.editingComputedField.name, expr)));
        var datarow = take(3)(datarows);
        return div_([strong_([text("preview")]), table_(map117(renderRow)(datarow))]);
      }
      ;
      throw new Error("Failed pattern match at Postgrest.Perspective (line 839, column 3 - line 907, column 10): " + [state3.dataRows.constructor.name]);
    };
  };
  var renderNumberOfColumns = function(dictMonadAff) {
    return function(state3) {
      var l3 = length7(state3.charts);
      var l2 = length7(state3.computedFields);
      var l1 = length7(nub3(map34(fst)(state3.nestedFields)));
      var l0 = length7(state3.fieldsSelection);
      return div_([p_([text(show110(l0) + " main columns")]), p_([text(show110(l1) + " embedded models")]), p_([text(show110(l2) + " computed columns")]), p_([text(show110(l3) + " connected charts")])]);
    };
  };
  var renderNumberOfAjaxCells = function(dictMonadAff) {
    return function(state3) {
      var l0 = length1(state3.ajaxRows);
      return div_([p_([text(show110(l0) + " ajax results")])]);
    };
  };
  var renderFetch = function(dictMonadAff) {
    return function(state3) {
      var dlUrl = urlForRows(state3.source.baseUrl)(state3.path)(append15(state3.queryBuilderSelectors)(state3.selectors))(state3.pagination)(state3.fieldsSelection)(state3.nestedFields)(state3.order);
      return div_([button([onClick($$const(RequestDownload.value)), css("mini-button")])([text("dl CSV")]), a([target("_blank"), href(dlUrl)])([button([css("mini-button")])([text("open json")])])]);
    };
  };
  var newState5 = function(input3) {
    return {
      source: input3.source,
      index: input3.index,
      path: input3.path,
      pathJson: input3.pathJson,
      dataRows: Nothing.value,
      ajaxRows: emptyResults,
      selectors: mempty7,
      queryBuilderSelectors: mempty7,
      tableSelection: mempty7,
      pagination: {
        limit: new Just(defaultLimit),
        skip: Nothing.value
      },
      fieldsSelection: mempty7,
      nestedFields: mempty7,
      computedFields: mempty7,
      order: mempty7,
      refreshOnChange: true,
      refreshSeconds: 0,
      polling: Nothing.value,
      charts: mempty7,
      editingComputedField: emptyComputedField,
      isEditingComputedField: false,
      draggedSelector: Nothing.value,
      overledSelector: Nothing.value,
      newChartTitle: "new-chart",
      debugMsg: Nothing.value
    };
  };
  var newComputedColumnForm = function(state3) {
    return div_([form([action(""), onSubmit(AddComputedColumn.create)])([label([$$for("new-expression-name")])([text("name")]), div_([input([id3("new-expression-name"), name3("new-expression-name"), type_6(InputText.value), value5(unwrap15(state3.editingComputedField.name)), onValueInput(SetComputedColumnName.create), onBlur(function(v) {
      return new SetEditComputedColumn(false);
    })])]), label([$$for("new-expression")])([text("expression")]), div_([textarea([css("new-expression"), rows(12), cols(66), id3("new-expression"), name3("new-expression"), value5(state3.editingComputedField.source), onValueInput(SetComputedColumnExpression.create), onBlur(function(v) {
      return new SetEditComputedColumn(false);
    })])]), function() {
      if (state3.editingComputedField.computation instanceof Right) {
        return div_([p_([text("ok")]), renderPreview(state3)(state3.editingComputedField.computation.value0)]);
      }
      ;
      if (state3.editingComputedField.computation instanceof Left) {
        return p([css("warn")])([function() {
          var $250 = state3.editingComputedField.source === "";
          if ($250) {
            return text("");
          }
          ;
          return text(showError(state3.editingComputedField.computation.value0));
        }()]);
      }
      ;
      throw new Error("Failed pattern match at Postgrest.Perspective (line 823, column 9 - line 828, column 134): " + [state3.editingComputedField.computation.constructor.name]);
    }(), input([type_6(InputSubmit.value), value5("add computed column"), disabled(isLeft(state3.editingComputedField.computation))])])]);
  };
  var mkrequest = function(reqinfo) {
    var json2 = unwrap15(reqinfo);
    return bind16(preview(function() {
      var $469 = ix8("url")(strongForget)(choiceForget8);
      return function($470) {
        return $469(_String5($470));
      };
    }())(json2))(function(url) {
      return bind16(map212(fromString)(preview(function() {
        var $471 = ix8("method")(strongForget)(choiceForget8);
        return function($472) {
          return $471(_String5($472));
        };
      }())(json2)))(function(method2) {
        return pure110({
          content: defaultRequest.content,
          headers: defaultRequest.headers,
          password: defaultRequest.password,
          responseFormat: defaultRequest.responseFormat,
          timeout: defaultRequest.timeout,
          username: defaultRequest.username,
          withCredentials: defaultRequest.withCredentials,
          method: method2,
          url
        });
      });
    });
  };
  var runrequest = function(trigger) {
    var v = mkrequest(trigger.req);
    if (v instanceof Nothing) {
      return pure23(NotRun.value);
    }
    ;
    if (v instanceof Just) {
      return bind22(request(driver)(v.value0))(function(ret) {
        return pure23(either(PerformedFailure.create)(PerformedSuccess.create)(ret));
      });
    }
    ;
    throw new Error("Failed pattern match at Postgrest.Perspective (line 912, column 3 - line 916, column 58): " + [v.constructor.name]);
  };
  var extractFields = function(state3) {
    return map34(makeFieldSpec(state3.source.baseUrl)(state3.source.schema)(state3.path))(extractRefs(state3.pathJson));
  };
  var cssNumberOfRows = function(state3) {
    var v = preview(function() {
      var $473 = to(length22);
      return function($474) {
        return _Just2(_Array4($473($474)));
      };
    }())(state3.dataRows);
    if (v instanceof Nothing) {
      return "warn";
    }
    ;
    if (v instanceof Just && v.value0 === 0) {
      return "notice";
    }
    ;
    if (v instanceof Just) {
      return "info";
    }
    ;
    throw new Error("Failed pattern match at Postgrest.Perspective (line 599, column 3 - line 602, column 21): " + [v.constructor.name]);
  };
  var renderNumberOfRows = function(dictMonadAff) {
    return function(state3) {
      var msg = function() {
        var v = preview(function() {
          var $475 = to(length22);
          return function($476) {
            return _Just2(_Array4($475($476)));
          };
        }())(state3.dataRows);
        if (v instanceof Nothing) {
          return "no response received";
        }
        ;
        if (v instanceof Just && v.value0 === 0) {
          return "no matches";
        }
        ;
        if (v instanceof Just) {
          return show110(v.value0) + " data rows";
        }
        ;
        throw new Error("Failed pattern match at Postgrest.Perspective (line 608, column 11 - line 611, column 45): " + [v.constructor.name]);
      }();
      return p([css(cssNumberOfRows(state3))])([text(msg)]);
    };
  };
  var renderStatistics = function(dictMonadAff) {
    var renderNumberOfRows1 = renderNumberOfRows(dictMonadAff);
    var renderFetch1 = renderFetch(dictMonadAff);
    var renderNumberOfColumns1 = renderNumberOfColumns(dictMonadAff);
    var renderNumberOfAjaxCells1 = renderNumberOfAjaxCells(dictMonadAff);
    return function(state3) {
      return div_([renderNumberOfRows1(state3), renderFetch1(state3), renderNumberOfColumns1(state3), renderNumberOfAjaxCells1(state3)]);
    };
  };
  var _tableDisplay = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var _queryBuilder = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var _chartDisplay2 = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var handleAction5 = function(dictMonadAff) {
    var liftAff2 = liftAff(monadAffHalogenM(dictMonadAff));
    var liftEffect12 = liftEffect(monadEffectHalogenM(dictMonadAff.MonadEffect0()));
    var refresh = function(st) {
      return raise({
        selectors: append15(st.queryBuilderSelectors)(st.selectors),
        pagination: st.pagination,
        request: Refresh.value,
        fieldsSelection: st.fieldsSelection,
        nestedFields: st.nestedFields,
        order: st.order
      });
    };
    var dorefresh = bind32(get8)(function(st) {
      return refresh(st);
    });
    var dodownload = bind32(get8)(function(st) {
      return raise({
        selectors: append15(st.queryBuilderSelectors)(st.selectors),
        pagination: st.pagination,
        request: DownloadCSV.value,
        fieldsSelection: st.fieldsSelection,
        nestedFields: st.nestedFields,
        order: st.order
      });
    });
    var condrefresh = bind32(get8)(function(st) {
      return when2(st.refreshOnChange)(refresh(st));
    });
    return function(v) {
      if (v instanceof HandleQueryBuilder) {
        return discard23(modify_7(function(v1) {
          var $261 = {};
          for (var $262 in v1) {
            if ({}.hasOwnProperty.call(v1, $262)) {
              $261[$262] = v1[$262];
            }
            ;
          }
          ;
          $261.queryBuilderSelectors = v.value0;
          $261.pagination = v.value1;
          $261.fieldsSelection = v.value2;
          $261.order = v.value3;
          $261.nestedFields = v.value4;
          return $261;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof HandleTableDisplay && v.value0 instanceof AddSelector) {
        return discard23(modify_7(function(st) {
          var $269 = {};
          for (var $270 in st) {
            if ({}.hasOwnProperty.call(st, $270)) {
              $269[$270] = st[$270];
            }
            ;
          }
          ;
          $269.selectors = insert8(v.value0.value0)(st.selectors);
          return $269;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof HandleTableDisplay && v.value0 instanceof AddFilter) {
        var newSelector = new LeafSelector({
          column: v.value0.value0.field,
          operator: v.value0.value0.op,
          val: v.value0.value0.val
        });
        return discard23(modify_7(function(st) {
          var $274 = {};
          for (var $275 in st) {
            if ({}.hasOwnProperty.call(st, $275)) {
              $274[$275] = st[$275];
            }
            ;
          }
          ;
          $274.selectors = insert8(newSelector)(st.selectors);
          return $274;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof HandleTableDisplay && v.value0 instanceof SelectionChanged) {
        return modify_7(function(st) {
          var $279 = {};
          for (var $280 in st) {
            if ({}.hasOwnProperty.call(st, $280)) {
              $279[$280] = st[$280];
            }
            ;
          }
          ;
          $279.tableSelection = v.value0.value0;
          return $279;
        });
      }
      ;
      if (v instanceof HandleTableDisplay && v.value0 instanceof EditionStarted) {
        return modify_7(function(st) {
          var $284 = {};
          for (var $285 in st) {
            if ({}.hasOwnProperty.call(st, $285)) {
              $284[$285] = st[$285];
            }
            ;
          }
          ;
          $284.editingComputedField = v.value0.value0;
          $284.isEditingComputedField = true;
          return $284;
        });
      }
      ;
      if (v instanceof HandleTableDisplay && v.value0 instanceof TriggerAjax) {
        var run3 = function(t) {
          return map35(Tuple.create({
            field: t.field.name,
            index: t.ctx.rownum
          }))(runrequest(t));
        };
        return bind32(liftAff2(traverse4(run3)(v.value0.value0)))(function(pairs) {
          return bind32(get8)(function(st0) {
            var results = union3(fromFoldable7(pairs))(st0.ajaxRows);
            return discard23(put5(function() {
              var $289 = {};
              for (var $290 in st0) {
                if ({}.hasOwnProperty.call(st0, $290)) {
                  $289[$290] = st0[$290];
                }
                ;
              }
              ;
              $289.ajaxRows = results;
              return $289;
            }()))(function() {
              return bind32(query1(_tableDisplay)(unit)(new ReceiveAjaxRows(results, unit)))(function() {
                return pure32(unit);
              });
            });
          });
        });
      }
      ;
      if (v instanceof HandleChartDisplay2 && v.value1 instanceof AddSelector2) {
        return discard23(modify_7(function(st) {
          var $294 = {};
          for (var $295 in st) {
            if ({}.hasOwnProperty.call(st, $295)) {
              $294[$295] = st[$295];
            }
            ;
          }
          ;
          $294.selectors = insert8(v.value1.value0)(st.selectors);
          return $294;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof HandleChartDisplay2 && v.value1 instanceof AddFilter2) {
        var newSelector = new LeafSelector({
          column: v.value1.value0.field,
          operator: v.value1.value0.op,
          val: v.value1.value0.val
        });
        return discard23(modify_7(function(st) {
          var $300 = {};
          for (var $301 in st) {
            if ({}.hasOwnProperty.call(st, $301)) {
              $300[$301] = st[$301];
            }
            ;
          }
          ;
          $300.selectors = insert8(newSelector)(st.selectors);
          return $300;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof HandleChartDisplay2 && v.value1 instanceof DeleteMe) {
        var kept = function(v1) {
          return v1.value0 !== v.value0;
        };
        return modify_7(function(st) {
          var $309 = {};
          for (var $310 in st) {
            if ({}.hasOwnProperty.call(st, $310)) {
              $309[$310] = st[$310];
            }
            ;
          }
          ;
          $309.charts = filter(kept)(st.charts);
          return $309;
        });
      }
      ;
      if (v instanceof SetRefreshOnChange) {
        return discard23(modify_7(function(st) {
          var $314 = {};
          for (var $315 in st) {
            if ({}.hasOwnProperty.call(st, $315)) {
              $314[$315] = st[$315];
            }
            ;
          }
          ;
          $314.refreshOnChange = v.value0;
          return $314;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof SetRefreshSeconds && v.value0 === 0) {
        return bind32(get8)(function(state3) {
          return discard23(maybe(pure32(unit))(unsubscribe2)(state3.polling))(function() {
            return modify_7(function(st) {
              var $318 = {};
              for (var $319 in st) {
                if ({}.hasOwnProperty.call(st, $319)) {
                  $318[$319] = st[$319];
                }
                ;
              }
              ;
              $318.refreshSeconds = 0;
              $318.polling = Nothing.value;
              return $318;
            });
          });
        });
      }
      ;
      if (v instanceof SetRefreshSeconds) {
        return bind32(get8)(function(state3) {
          return discard23(maybe(pure32(unit))(unsubscribe2)(state3.polling))(function() {
            return bind32(subscribe2(timer(1e3 * toNumber2(v.value0))))(function(sid) {
              return modify_7(function(st) {
                var $322 = {};
                for (var $323 in st) {
                  if ({}.hasOwnProperty.call(st, $323)) {
                    $322[$323] = st[$323];
                  }
                  ;
                }
                ;
                $322.refreshSeconds = v.value0;
                $322.polling = new Just(sid);
                return $322;
              });
            });
          });
        });
      }
      ;
      if (v instanceof RequestFetch) {
        return dorefresh;
      }
      ;
      if (v instanceof RequestDownload) {
        return dodownload;
      }
      ;
      if (v instanceof ClearEditingSelector) {
        var runFilter = filter(function(old) {
          return notEq14(old)(new LeafSelector({
            column: v.value0,
            operator: v.value1,
            val: v.value2
          }));
        });
        return discard23(modify_7(function(st) {
          var $326 = {};
          for (var $327 in st) {
            if ({}.hasOwnProperty.call(st, $327)) {
              $326[$327] = st[$327];
            }
            ;
          }
          ;
          $326.queryBuilderSelectors = runFilter(st.queryBuilderSelectors);
          return $326;
        }))(function() {
          return bind32(query22(_queryBuilder)(unit)(new ClearSelector(v.value0, v.value1, unit)))(function() {
            return condrefresh;
          });
        });
      }
      ;
      if (v instanceof PromoteEditingSelector) {
        var newSelector = new LeafSelector({
          column: v.value0,
          operator: v.value1,
          val: v.value2
        });
        var runFilter = filter(function(old) {
          return notEq14(old)(newSelector);
        });
        return discard23(modify_7(function(st) {
          var $332 = {};
          for (var $333 in st) {
            if ({}.hasOwnProperty.call(st, $333)) {
              $332[$333] = st[$333];
            }
            ;
          }
          ;
          $332.selectors = insert8(newSelector)(st.selectors);
          $332.queryBuilderSelectors = runFilter(st.queryBuilderSelectors);
          return $332;
        }))(function() {
          return bind32(query22(_queryBuilder)(unit)(new ClearSelector(v.value0, v.value1, unit)))(function() {
            return condrefresh;
          });
        });
      }
      ;
      if (v instanceof RemoveSelector) {
        var runFilter = filter(function(old) {
          return notEq14(old)(v.value0);
        });
        return discard23(modify_7(function(st) {
          var $338 = {};
          for (var $339 in st) {
            if ({}.hasOwnProperty.call(st, $339)) {
              $338[$339] = st[$339];
            }
            ;
          }
          ;
          $338.selectors = runFilter(st.selectors);
          return $338;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof DisableSelector) {
        var runFilter = filter(function(old) {
          return notEq14(old)(v.value0);
        });
        return discard23(modify_7(function(st) {
          var $342 = {};
          for (var $343 in st) {
            if ({}.hasOwnProperty.call(st, $343)) {
              $342[$343] = st[$343];
            }
            ;
          }
          ;
          $342.selectors = new Cons(new DisableClause(v.value0), runFilter(st.selectors));
          return $342;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof NegateSelector) {
        var runFilter = filter(function(old) {
          return notEq14(old)(v.value0);
        });
        return discard23(modify_7(function(st) {
          var $346 = {};
          for (var $347 in st) {
            if ({}.hasOwnProperty.call(st, $347)) {
              $346[$347] = st[$347];
            }
            ;
          }
          ;
          $346.selectors = new Cons(new NotClause(v.value0), runFilter(st.selectors));
          return $346;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof SplitSelector && v.value0 instanceof DisableClause) {
        var runFilter = filter(function(old) {
          return notEq14(old)(v.value0);
        });
        return discard23(modify_7(function(st) {
          var $350 = {};
          for (var $351 in st) {
            if ({}.hasOwnProperty.call(st, $351)) {
              $350[$351] = st[$351];
            }
            ;
          }
          ;
          $350.selectors = new Cons(v.value0.value0, runFilter(st.selectors));
          return $350;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof SplitSelector && v.value0 instanceof NotClause) {
        var runFilter = filter(function(old) {
          return notEq14(old)(v.value0);
        });
        return discard23(modify_7(function(st) {
          var $355 = {};
          for (var $356 in st) {
            if ({}.hasOwnProperty.call(st, $356)) {
              $355[$356] = st[$356];
            }
            ;
          }
          ;
          $355.selectors = new Cons(v.value0.value0, runFilter(st.selectors));
          return $355;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof SplitSelector && v.value0 instanceof AndClause) {
        var runFilter = filter(function(old) {
          return notEq14(old)(v.value0);
        });
        return discard23(modify_7(function(st) {
          var $360 = {};
          for (var $361 in st) {
            if ({}.hasOwnProperty.call(st, $361)) {
              $360[$361] = st[$361];
            }
            ;
          }
          ;
          $360.selectors = append15(v.value0.value0)(runFilter(st.selectors));
          return $360;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof SplitSelector && v.value0 instanceof OrClause) {
        var runFilter = filter(function(old) {
          return notEq14(old)(v.value0);
        });
        return discard23(modify_7(function(st) {
          var $365 = {};
          for (var $366 in st) {
            if ({}.hasOwnProperty.call(st, $366)) {
              $365[$366] = st[$366];
            }
            ;
          }
          ;
          $365.selectors = append15(v.value0.value0)(runFilter(st.selectors));
          return $365;
        }))(function() {
          return condrefresh;
        });
      }
      ;
      if (v instanceof SplitSelector) {
        return pure32(unit);
      }
      ;
      if (v instanceof SetNewChartTitle) {
        return modify_7(function(st) {
          var $371 = {};
          for (var $372 in st) {
            if ({}.hasOwnProperty.call(st, $372)) {
              $371[$372] = st[$372];
            }
            ;
          }
          ;
          $371.newChartTitle = v.value0;
          return $371;
        });
      }
      ;
      if (v instanceof AddChart) {
        return bind32(get8)(function(st0) {
          var exprs = catMaybes2(map34(toExpressionTuple)(st0.computedFields));
          var idx = maybe(0)(function(x2) {
            return 1 + fst(x2.head) | 0;
          })(uncons2(st0.charts));
          var input3 = bind16(pathToModelName(st0.path))(function(model) {
            return pure110({
              htmlID: unwrap15(model) + ("-" + (show110(st0.index) + ("-" + show110(idx)))),
              dataRows: map212(function(json2) {
                return contextualizeDataRows(json2)(exprs);
              })(st0.dataRows),
              fields: catMaybes2(extractFields(st0)),
              computedFields: st0.computedFields,
              prefillFields: st0.tableSelection,
              title: st0.newChartTitle
            });
          });
          return discard23(maybe(pure32(unit))(function(i2) {
            return put5({
              ajaxRows: st0.ajaxRows,
              computedFields: st0.computedFields,
              dataRows: st0.dataRows,
              debugMsg: st0.debugMsg,
              draggedSelector: st0.draggedSelector,
              editingComputedField: st0.editingComputedField,
              fieldsSelection: st0.fieldsSelection,
              index: st0.index,
              isEditingComputedField: st0.isEditingComputedField,
              nestedFields: st0.nestedFields,
              newChartTitle: st0.newChartTitle,
              order: st0.order,
              overledSelector: st0.overledSelector,
              pagination: st0.pagination,
              path: st0.path,
              pathJson: st0.pathJson,
              polling: st0.polling,
              queryBuilderSelectors: st0.queryBuilderSelectors,
              refreshOnChange: st0.refreshOnChange,
              refreshSeconds: st0.refreshSeconds,
              selectors: st0.selectors,
              source: st0.source,
              tableSelection: st0.tableSelection,
              charts: new Cons(new Tuple(idx, i2), st0.charts)
            });
          })(input3))(function() {
            if (st0.dataRows instanceof Nothing) {
              return pure32(unit);
            }
            ;
            if (st0.dataRows instanceof Just) {
              return bind32(query32(_chartDisplay2)(idx)(new ReceiveRows3(contextualizeDataRows(st0.dataRows.value0)(exprs), st0.computedFields, unit)))(function() {
                return pure32(unit);
              });
            }
            ;
            throw new Error("Failed pattern match at Postgrest.Perspective (line 320, column 7 - line 324, column 20): " + [st0.dataRows.constructor.name]);
          });
        });
      }
      ;
      if (v instanceof SetEditComputedColumn) {
        return modify_7(function(v1) {
          var $377 = {};
          for (var $378 in v1) {
            if ({}.hasOwnProperty.call(v1, $378)) {
              $377[$378] = v1[$378];
            }
            ;
          }
          ;
          $377.isEditingComputedField = v.value0;
          return $377;
        });
      }
      ;
      if (v instanceof AddComputedColumn) {
        return discard23(liftEffect12(preventDefault(v.value0)))(function() {
          return bind32(get8)(function(st) {
            var newList = new Cons(st.editingComputedField, filter(function(old) {
              return notEq23(old.name)(st.editingComputedField.name);
            })(st.computedFields));
            return discard23(put5(function() {
              var $381 = {};
              for (var $382 in st) {
                if ({}.hasOwnProperty.call(st, $382)) {
                  $381[$382] = st[$382];
                }
                ;
              }
              ;
              $381.computedFields = newList;
              $381.editingComputedField = emptyComputedField;
              $381.isEditingComputedField = false;
              return $381;
            }()))(function() {
              return condrefresh;
            });
          });
        });
      }
      ;
      if (v instanceof SetComputedColumnName) {
        return modify_7(function(st) {
          var $385 = {};
          for (var $386 in st) {
            if ({}.hasOwnProperty.call(st, $386)) {
              $385[$386] = st[$386];
            }
            ;
          }
          ;
          $385.editingComputedField = newComputedField(v.value0)(st.editingComputedField.source);
          $385.isEditingComputedField = true;
          return $385;
        });
      }
      ;
      if (v instanceof SetComputedColumnExpression) {
        return modify_7(function(st) {
          var $389 = {};
          for (var $390 in st) {
            if ({}.hasOwnProperty.call(st, $390)) {
              $389[$390] = st[$390];
            }
            ;
          }
          ;
          $389.editingComputedField = newComputedField(st.editingComputedField.name)(v.value0);
          $389.isEditingComputedField = true;
          return $389;
        });
      }
      ;
      if (v instanceof DraggingSelector) {
        if (v.value0) {
          return modify_7(function(v1) {
            var $394 = {};
            for (var $395 in v1) {
              if ({}.hasOwnProperty.call(v1, $395)) {
                $394[$395] = v1[$395];
              }
              ;
            }
            ;
            $394.draggedSelector = new Just(v.value1);
            return $394;
          });
        }
        ;
        return modify_7(function(v1) {
          var $397 = {};
          for (var $398 in v1) {
            if ({}.hasOwnProperty.call(v1, $398)) {
              $397[$398] = v1[$398];
            }
            ;
          }
          ;
          $397.draggedSelector = Nothing.value;
          return $397;
        });
      }
      ;
      if (v instanceof DraggingOver) {
        return discard23(liftEffect12(preventDefault(toEvent2(v.value0))))(function() {
          if (v.value1) {
            return modify_7(function(v1) {
              var $403 = {};
              for (var $404 in v1) {
                if ({}.hasOwnProperty.call(v1, $404)) {
                  $403[$404] = v1[$404];
                }
                ;
              }
              ;
              $403.overledSelector = new Just(v.value2);
              return $403;
            });
          }
          ;
          return modify_7(function(v1) {
            var $406 = {};
            for (var $407 in v1) {
              if ({}.hasOwnProperty.call(v1, $407)) {
                $406[$407] = v1[$407];
              }
              ;
            }
            ;
            $406.overledSelector = Nothing.value;
            return $406;
          });
        });
      }
      ;
      if (v instanceof DraggingDone) {
        return discard23(liftEffect12(preventDefault(toEvent2(v.value0))))(function() {
          return bind32(get8)(function(st0) {
            var v1 = apply5(map212(Tuple.create)(st0.draggedSelector))(st0.overledSelector);
            if (v1 instanceof Nothing) {
              return put5(function() {
                var $413 = {};
                for (var $414 in st0) {
                  if ({}.hasOwnProperty.call(st0, $414)) {
                    $413[$414] = st0[$414];
                  }
                  ;
                }
                ;
                $413.debugMsg = new Just("no tuple");
                return $413;
              }());
            }
            ;
            if (v1 instanceof Just && (v1.value0.value0 instanceof AndClause && v1.value0.value1 instanceof AndClause)) {
              var newsel = v.value1(append15(v1.value0.value0.value0)(v1.value0.value1.value0));
              var remove = function(sel2) {
                return notEq14(sel2)(v1.value0.value0) && notEq14(sel2)(v1.value0.value1);
              };
              return discard23(put5(function() {
                var $416 = {};
                for (var $417 in st0) {
                  if ({}.hasOwnProperty.call(st0, $417)) {
                    $416[$417] = st0[$417];
                  }
                  ;
                }
                ;
                $416.selectors = new Cons(newsel, filter(remove)(st0.selectors));
                $416.draggedSelector = Nothing.value;
                $416.overledSelector = Nothing.value;
                return $416;
              }()))(function() {
                return condrefresh;
              });
            }
            ;
            if (v1 instanceof Just && (v1.value0.value0 instanceof OrClause && v1.value0.value1 instanceof OrClause)) {
              var newsel = v.value1(append15(v1.value0.value0.value0)(v1.value0.value1.value0));
              var remove = function(sel2) {
                return notEq14(sel2)(v1.value0.value0) && notEq14(sel2)(v1.value0.value1);
              };
              return discard23(put5(function() {
                var $424 = {};
                for (var $425 in st0) {
                  if ({}.hasOwnProperty.call(st0, $425)) {
                    $424[$425] = st0[$425];
                  }
                  ;
                }
                ;
                $424.selectors = new Cons(newsel, filter(remove)(st0.selectors));
                $424.draggedSelector = Nothing.value;
                $424.overledSelector = Nothing.value;
                return $424;
              }()))(function() {
                return condrefresh;
              });
            }
            ;
            if (v1 instanceof Just) {
              var newsel = v.value1(fromFoldable1([v1.value0.value0, v1.value0.value1]));
              var remove = function(sel2) {
                return notEq14(sel2)(v1.value0.value0) && notEq14(sel2)(v1.value0.value1);
              };
              return discard23(put5(function() {
                var $432 = {};
                for (var $433 in st0) {
                  if ({}.hasOwnProperty.call(st0, $433)) {
                    $432[$433] = st0[$433];
                  }
                  ;
                }
                ;
                $432.selectors = new Cons(newsel, filter(remove)(st0.selectors));
                $432.draggedSelector = Nothing.value;
                $432.overledSelector = Nothing.value;
                return $432;
              }()))(function() {
                return condrefresh;
              });
            }
            ;
            throw new Error("Failed pattern match at Postgrest.Perspective (line 356, column 7 - line 382, column 22): " + [v1.constructor.name]);
          });
        });
      }
      ;
      throw new Error("Failed pattern match at Postgrest.Perspective (line 215, column 3 - line 382, column 22): " + [v.constructor.name]);
    };
  };
  var handleQuery5 = function(dictMonadAff) {
    return function(v) {
      if (v instanceof ReceiveRows4) {
        return discard23(modify_7(function(v1) {
          var $441 = {};
          for (var $442 in v1) {
            if ({}.hasOwnProperty.call(v1, $442)) {
              $441[$442] = v1[$442];
            }
            ;
          }
          ;
          $441.dataRows = new Just(v.value0);
          $441.ajaxRows = emptyResults;
          return $441;
        }))(function() {
          return bind32(get8)(function(st) {
            var exprs = catMaybes2(map34(toExpressionTuple)(st.computedFields));
            var datarows = contextualizeDataRows(v.value0)(exprs);
            return bind32(traverse12(function(v1) {
              return query32(_chartDisplay2)(v1.value0)(new ReceiveRows3(datarows, st.computedFields, v.value2));
            })(st.charts))(function() {
              return query1(_tableDisplay)(unit)(new ReceiveRows2(datarows, v.value1, st.computedFields, v.value2));
            });
          });
        });
      }
      ;
      if (v instanceof ClearRows) {
        return discard23(modify_7(function(v1) {
          var $450 = {};
          for (var $451 in v1) {
            if ({}.hasOwnProperty.call(v1, $451)) {
              $450[$451] = v1[$451];
            }
            ;
          }
          ;
          $450.dataRows = Nothing.value;
          $450.ajaxRows = emptyResults;
          return $450;
        }))(function() {
          return bind32(get8)(function(st) {
            return bind32(traverse12(function(v1) {
              return query32(_chartDisplay2)(v1.value0)(new Clear3(v.value0));
            })(st.charts))(function() {
              return query1(_tableDisplay)(unit)(new Clear2(v.value0));
            });
          });
        });
      }
      ;
      throw new Error("Failed pattern match at Postgrest.Perspective (line 196, column 15 - line 208, column 54): " + [v.constructor.name]);
    };
  };
  var render5 = function(dictMonadAff) {
    var renderStatistics1 = renderStatistics(dictMonadAff);
    var renderRefresh1 = renderRefresh(dictMonadAff);
    var queryBuilder2 = queryBuilder(dictMonadAff);
    var tableDisplay2 = tableDisplay(dictMonadAff);
    var chart2 = chart(dictMonadAff);
    return function(state3) {
      var fields = extractFields(state3);
      var queryBuilderInput = {
        fields,
        schema: state3.source.schema,
        path: state3.path
      };
      var tableDisplayInput = {
        fields
      };
      var datarows = toListOf(function($477) {
        return _Just1(_Array12(traversed3(_Object6($477))));
      })(state3.dataRows);
      var chartBuilderInput = {
        fields
      };
      return section([css("perspective")])([div2([css("perspective-bar")])([div2([css("perspective-sub-bar")])([div2([css("controls-title")])([h4_([text(unwrap15(state3.path)), button([css("mini-button " + cssNumberOfRows(state3)), onClick($$const(RequestFetch.value))])([text("load")])]), div_([strong_([text("stats")]), renderStatistics1(state3), strong_([text("refresh policy")]), renderRefresh1(state3)])]), div2([css("controls-qb")])([slot1(_queryBuilder)(unit)(queryBuilder2)(queryBuilderInput)(function(xyz) {
        return new HandleQueryBuilder(xyz.selectors, {
          limit: xyz.limit,
          skip: xyz.skip
        }, xyz.selection, xyz.order, xyz.nestedFields);
      })])]), div2([css("perspective-sub-bar")])([div2([css("controls-dashing")])([h4_([text("dashboard")]), div_([label([$$for("new-chart-name")])([text("title")]), div_([input([id3("new-chart-name"), name3("new-chart-name"), type_6(InputText.value), value5(state3.newChartTitle), onValueInput(SetNewChartTitle.create)])]), button([onClick(function(v) {
        return AddChart.value;
      })])([text("add chart")])])]), div2([css("controls-computing" + function() {
        if (state3.isEditingComputedField) {
          return " editing";
        }
        ;
        return "";
      }())])([h4_([text("compute")]), div_([newComputedColumnForm(state3)])])]), div2([css("perspective-sub-bar")])([div2([css("perspective-filters")])(toUnfoldable13(fold5([renderQueryBuilderSelectors(state3.queryBuilderSelectors), map34(renderSelector(state3)(0))(state3.selectors)])))])]), div2([css("perspective-display")])([div2([css("display-table")])([slot22(_tableDisplay)(unit)(tableDisplay2)(tableDisplayInput)(HandleTableDisplay.create)]), div2([css("display-charts")])(toUnfoldable13(map34(function(v) {
        return slot32(_chartDisplay2)(v.value0)(chart2)(v.value1)(function(o) {
          return new HandleChartDisplay2(v.value0, o);
        });
      })(state3.charts)))]), div2([css("debug-zone")])([function() {
        var v = bind16(state3.draggedSelector)(column);
        if (v instanceof Nothing) {
          return text("");
        }
        ;
        if (v instanceof Just) {
          return text(unwrap15(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Postgrest.Perspective (line 511, column 8 - line 513, column 42): " + [v.constructor.name]);
      }(), function() {
        var v = bind16(state3.overledSelector)(column);
        if (v instanceof Nothing) {
          return text("");
        }
        ;
        if (v instanceof Just) {
          return text(unwrap15(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Postgrest.Perspective (line 514, column 8 - line 516, column 42): " + [v.constructor.name]);
      }(), function() {
        if (state3.debugMsg instanceof Nothing) {
          return text("");
        }
        ;
        if (state3.debugMsg instanceof Just) {
          return strong([css("warn")])([text(state3.debugMsg.value0)]);
        }
        ;
        throw new Error("Failed pattern match at Postgrest.Perspective (line 517, column 8 - line 519, column 62): " + [state3.debugMsg.constructor.name]);
      }()])]);
    };
  };
  var perspective = function(dictMonadAff) {
    return mkComponent({
      initialState: newState5,
      render: render5(dictMonadAff),
      "eval": mkEval({
        receive: defaultEval.receive,
        initialize: defaultEval.initialize,
        finalize: defaultEval.finalize,
        handleAction: handleAction5(dictMonadAff),
        handleQuery: handleQuery5(dictMonadAff)
      })
    });
  };

  // output/Postgrest.UrlPicker/index.js
  var type_7 = /* @__PURE__ */ type_(isPropInputType);
  var value6 = /* @__PURE__ */ value2(isPropString);
  var mapWithIndex4 = /* @__PURE__ */ mapWithIndex(functorWithIndexArray);
  var modify_8 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var bind11 = /* @__PURE__ */ bind(bindHalogenM);
  var get9 = /* @__PURE__ */ get(monadStateHalogenM);
  var pure21 = /* @__PURE__ */ pure(applicativeHalogenM);
  var discard7 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var append9 = /* @__PURE__ */ append(semigroupArray);
  var PreloadSchema = /* @__PURE__ */ function() {
    function PreloadSchema2() {
    }
    ;
    PreloadSchema2.value = new PreloadSchema2();
    return PreloadSchema2;
  }();
  var SetUrl = /* @__PURE__ */ function() {
    function SetUrl2(value0) {
      this.value0 = value0;
    }
    ;
    SetUrl2.create = function(value0) {
      return new SetUrl2(value0);
    };
    return SetUrl2;
  }();
  var LoadSchema = /* @__PURE__ */ function() {
    function LoadSchema2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    LoadSchema2.create = function(value0) {
      return function(value1) {
        return new LoadSchema2(value0, value1);
      };
    };
    return LoadSchema2;
  }();
  var NewHeader = /* @__PURE__ */ function() {
    function NewHeader2(value0) {
      this.value0 = value0;
    }
    ;
    NewHeader2.create = function(value0) {
      return new NewHeader2(value0);
    };
    return NewHeader2;
  }();
  var RemoveHeader = /* @__PURE__ */ function() {
    function RemoveHeader2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RemoveHeader2.create = function(value0) {
      return function(value1) {
        return new RemoveHeader2(value0, value1);
      };
    };
    return RemoveHeader2;
  }();
  var EditHeaderName = /* @__PURE__ */ function() {
    function EditHeaderName2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    EditHeaderName2.create = function(value0) {
      return function(value1) {
        return new EditHeaderName2(value0, value1);
      };
    };
    return EditHeaderName2;
  }();
  var EditHeaderValue = /* @__PURE__ */ function() {
    function EditHeaderValue2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    EditHeaderValue2.create = function(value0) {
      return function(value1) {
        return new EditHeaderValue2(value0, value1);
      };
    };
    return EditHeaderValue2;
  }();
  var renderHeader = function(v) {
    return function(n) {
      return function(v1) {
        return li_([input([type_7(InputText.value), value6(v1.value0), onValueInput(EditHeaderName.create(n))]), strong_([text(": ")]), input([type_7(InputText.value), value6(v1.value1), onValueInput(EditHeaderValue.create(n))]), button([onClick(function(ev) {
          return new RemoveHeader(n, ev);
        })])([text("remove")])]);
      };
    };
  };
  var renderHeaders = function(state3) {
    return ul_(mapWithIndex4(renderHeader(state3))(state3.baseUrl.extraHeaders));
  };
  var renderUrlPicker = function(state3) {
    return div2([css("url-picker-form")])([form([action(""), onSubmit(LoadSchema.create(state3.baseUrl))])([label([$$for("postgrest")])([text("PostgREST url: ")]), div2([css("url-picker-form-fields")])([input([id3("postgrest"), name3("postgrest"), type_7(InputText.value), onValueInput(SetUrl.create)]), input([type_7(InputSubmit.value), value6("go")])]), renderHeaders(state3), button([onClick(function(ev) {
      return new NewHeader(ev);
    })])([text("add header")])]), function() {
      if (state3.error instanceof Nothing) {
        return text("");
      }
      ;
      if (state3.error instanceof Just) {
        return pre_([text(printError(state3.error.value0))]);
      }
      ;
      throw new Error("Failed pattern match at Postgrest.UrlPicker (line 126, column 9 - line 128, column 62): " + [state3.error.constructor.name]);
    }()]);
  };
  var normalizeUrl = function(baseUrl) {
    var url = fromMaybe(baseUrl.url)(stripSuffix("/")(baseUrl.url));
    return {
      extraHeaders: baseUrl.extraHeaders,
      url
    };
  };
  var handlePickerAction = function(dictMonadAff) {
    var liftAff2 = liftAff(monadAffHalogenM(dictMonadAff));
    var liftEffect9 = liftEffect(monadEffectHalogenM(dictMonadAff.MonadEffect0()));
    return function(v) {
      if (v instanceof SetUrl) {
        return modify_8(function(st) {
          var $45 = {};
          for (var $46 in st) {
            if ({}.hasOwnProperty.call(st, $46)) {
              $45[$46] = st[$46];
            }
            ;
          }
          ;
          $45.baseUrl = normalizeUrl({
            extraHeaders: st.baseUrl.extraHeaders,
            url: v.value0
          });
          $45.error = Nothing.value;
          return $45;
        });
      }
      ;
      if (v instanceof PreloadSchema) {
        return bind11(get9)(function(st) {
          var $49 = $$null2(st.baseUrl.url);
          if ($49) {
            return pure21(unit);
          }
          ;
          return bind11(liftAff2(request(driver)(fetchSchema(st.baseUrl))))(function(ret) {
            if (ret instanceof Left) {
              return modify_8(function(v1) {
                var $51 = {};
                for (var $52 in v1) {
                  if ({}.hasOwnProperty.call(v1, $52)) {
                    $51[$52] = v1[$52];
                  }
                  ;
                }
                ;
                $51.error = new Just(ret.value0);
                return $51;
              });
            }
            ;
            if (ret instanceof Right) {
              return raise(new Tuple(st.baseUrl, ret.value0.body));
            }
            ;
            throw new Error("Failed pattern match at Postgrest.UrlPicker (line 79, column 7 - line 81, column 66): " + [ret.constructor.name]);
          });
        });
      }
      ;
      if (v instanceof LoadSchema) {
        return discard7(liftEffect9(preventDefault(v.value1)))(function() {
          return bind11(liftAff2(request(driver)(fetchSchema(v.value0))))(function(ret) {
            if (ret instanceof Left) {
              return modify_8(function(v1) {
                var $57 = {};
                for (var $58 in v1) {
                  if ({}.hasOwnProperty.call(v1, $58)) {
                    $57[$58] = v1[$58];
                  }
                  ;
                }
                ;
                $57.error = new Just(ret.value0);
                return $57;
              });
            }
            ;
            if (ret instanceof Right) {
              return raise(new Tuple(v.value0, ret.value0.body));
            }
            ;
            throw new Error("Failed pattern match at Postgrest.UrlPicker (line 85, column 5 - line 87, column 61): " + [ret.constructor.name]);
          });
        });
      }
      ;
      if (v instanceof NewHeader) {
        return discard7(liftEffect9(preventDefault(toEvent(v.value0))))(function() {
          var newHeader = [new Tuple("Authorization", "bearer:<jwt>")];
          return modify_8(function(st) {
            var $67 = {};
            for (var $68 in st) {
              if ({}.hasOwnProperty.call(st, $68)) {
                $67[$68] = st[$68];
              }
              ;
            }
            ;
            $67.baseUrl = function() {
              var $64 = {};
              for (var $65 in st.baseUrl) {
                if ({}.hasOwnProperty.call(st.baseUrl, $65)) {
                  $64[$65] = st["baseUrl"][$65];
                }
                ;
              }
              ;
              $64.extraHeaders = append9(newHeader)(st.baseUrl.extraHeaders);
              return $64;
            }();
            return $67;
          });
        });
      }
      ;
      if (v instanceof RemoveHeader) {
        return discard7(liftEffect9(preventDefault(toEvent(v.value1))))(function() {
          var f2 = function(xs) {
            return fromMaybe(xs)(deleteAt(v.value0)(xs));
          };
          return modify_8(function(st) {
            var $74 = {};
            for (var $75 in st) {
              if ({}.hasOwnProperty.call(st, $75)) {
                $74[$75] = st[$75];
              }
              ;
            }
            ;
            $74.baseUrl = function() {
              var $71 = {};
              for (var $72 in st.baseUrl) {
                if ({}.hasOwnProperty.call(st.baseUrl, $72)) {
                  $71[$72] = st["baseUrl"][$72];
                }
                ;
              }
              ;
              $71.extraHeaders = f2(st.baseUrl.extraHeaders);
              return $71;
            }();
            return $74;
          });
        });
      }
      ;
      if (v instanceof EditHeaderName) {
        var f = function(xs) {
          return fromMaybe(xs)(modifyAt(v.value0)(function(v1) {
            return new Tuple(v.value1, v1.value1);
          })(xs));
        };
        return modify_8(function(st) {
          var $85 = {};
          for (var $86 in st) {
            if ({}.hasOwnProperty.call(st, $86)) {
              $85[$86] = st[$86];
            }
            ;
          }
          ;
          $85.baseUrl = function() {
            var $82 = {};
            for (var $83 in st.baseUrl) {
              if ({}.hasOwnProperty.call(st.baseUrl, $83)) {
                $82[$83] = st["baseUrl"][$83];
              }
              ;
            }
            ;
            $82.extraHeaders = f(st.baseUrl.extraHeaders);
            return $82;
          }();
          return $85;
        });
      }
      ;
      if (v instanceof EditHeaderValue) {
        var f = function(xs) {
          return fromMaybe(xs)(modifyAt(v.value0)(function(v2) {
            return new Tuple(v2.value0, v.value1);
          })(xs));
        };
        return modify_8(function(st) {
          var $96 = {};
          for (var $97 in st) {
            if ({}.hasOwnProperty.call(st, $97)) {
              $96[$97] = st[$97];
            }
            ;
          }
          ;
          $96.baseUrl = function() {
            var $93 = {};
            for (var $94 in st.baseUrl) {
              if ({}.hasOwnProperty.call(st.baseUrl, $94)) {
                $93[$94] = st["baseUrl"][$94];
              }
              ;
            }
            ;
            $93.extraHeaders = f(st.baseUrl.extraHeaders);
            return $93;
          }();
          return $96;
        });
      }
      ;
      throw new Error("Failed pattern match at Postgrest.UrlPicker (line 70, column 22 - line 101, column 96): " + [v.constructor.name]);
    };
  };
  var urlPickerComponent = function(dictMonadAff) {
    return mkComponent({
      initialState: function(x2) {
        return {
          baseUrl: normalizeUrl(fromMaybe(mereUrl(""))(x2)),
          error: Nothing.value
        };
      },
      render: renderUrlPicker,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handlePickerAction(dictMonadAff),
        initialize: new Just(PreloadSchema.value)
      })
    });
  };

  // output/Web.File.Blob/foreign.js
  function blobImpl(args) {
    return function(mediaType) {
      return new Blob(args, { type: mediaType });
    };
  }

  // output/Web.File.Blob/index.js
  var fromString4 = function(str) {
    return function(ct) {
      return blobImpl([str])(ct);
    };
  };

  // output/Web.File.Url/foreign.js
  function createObjectURL(blob) {
    return function() {
      return URL.createObjectURL(blob);
    };
  }
  function revokeObjectURL(url) {
    return function() {
      URL.revokeObjectURL(url);
    };
  }

  // output/Web.HTML/foreign.js
  var windowImpl = function() {
    return window;
  };

  // output/Web.HTML.HTMLDocument/foreign.js
  function _readyState(doc) {
    return doc.readyState;
  }

  // output/Web.HTML.HTMLDocument.ReadyState/index.js
  var Loading = /* @__PURE__ */ function() {
    function Loading2() {
    }
    ;
    Loading2.value = new Loading2();
    return Loading2;
  }();
  var Interactive = /* @__PURE__ */ function() {
    function Interactive2() {
    }
    ;
    Interactive2.value = new Interactive2();
    return Interactive2;
  }();
  var Complete = /* @__PURE__ */ function() {
    function Complete2() {
    }
    ;
    Complete2.value = new Complete2();
    return Complete2;
  }();
  var parse2 = function(v) {
    if (v === "loading") {
      return new Just(Loading.value);
    }
    ;
    if (v === "interactive") {
      return new Just(Interactive.value);
    }
    ;
    if (v === "complete") {
      return new Just(Complete.value);
    }
    ;
    return Nothing.value;
  };

  // output/Web.HTML.HTMLDocument/index.js
  var map36 = /* @__PURE__ */ map(functorEffect);
  var toParentNode = unsafeCoerce2;
  var toDocument = unsafeCoerce2;
  var readyState = function(doc) {
    return map36(function() {
      var $4 = fromMaybe(Loading.value);
      return function($5) {
        return $4(parse2($5));
      };
    }())(function() {
      return _readyState(doc);
    });
  };

  // output/Web.HTML.HTMLElement/foreign.js
  function _read(nothing, just, value17) {
    var tag = Object.prototype.toString.call(value17);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value17);
    } else {
      return nothing;
    }
  }

  // output/Web.HTML.HTMLElement/index.js
  var toNode2 = unsafeCoerce2;
  var fromElement = function(x2) {
    return _read(Nothing.value, Just.create, x2);
  };

  // output/Web.HTML.Location/foreign.js
  function search(location2) {
    return function() {
      return location2.search;
    };
  }
  function replace3(url) {
    return function(location2) {
      return function() {
        location2.replace(url);
      };
    };
  }

  // output/Web.HTML.Window/foreign.js
  function document(window2) {
    return function() {
      return window2.document;
    };
  }
  function location(window2) {
    return function() {
      return window2.location;
    };
  }

  // output/Web.HTML.Window/index.js
  var toEventTarget = unsafeCoerce2;

  // output/Application/index.js
  var mempty8 = /* @__PURE__ */ mempty(monoidList);
  var unwrap16 = /* @__PURE__ */ unwrap();
  var toUnfoldable14 = /* @__PURE__ */ toUnfoldable3(unfoldableArray);
  var map37 = /* @__PURE__ */ map(functorList);
  var notEq5 = /* @__PURE__ */ notEq(newtypePathEq);
  var modify_9 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var notEq24 = /* @__PURE__ */ notEq(eqInt);
  var bind17 = /* @__PURE__ */ bind(bindHalogenM);
  var get10 = /* @__PURE__ */ get(monadStateHalogenM);
  var put6 = /* @__PURE__ */ put(monadStateHalogenM);
  var perspectiveIsSymbol = {
    reflectSymbol: function() {
      return "perspective";
    }
  };
  var query4 = /* @__PURE__ */ query()(perspectiveIsSymbol)(ordInt);
  var pure24 = /* @__PURE__ */ pure(applicativeHalogenM);
  var bindFlipped8 = /* @__PURE__ */ bindFlipped(bindEffect);
  var slot4 = /* @__PURE__ */ slot();
  var slot12 = /* @__PURE__ */ slot4(perspectiveIsSymbol)(ordInt);
  var type_23 = /* @__PURE__ */ type_(isPropInputType);
  var slot23 = /* @__PURE__ */ slot4({
    reflectSymbol: function() {
      return "urlpicker";
    }
  })(ordUnit);
  var HandleUrlPicker = /* @__PURE__ */ function() {
    function HandleUrlPicker2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    HandleUrlPicker2.create = function(value0) {
      return function(value1) {
        return new HandleUrlPicker2(value0, value1);
      };
    };
    return HandleUrlPicker2;
  }();
  var DeleteSource = /* @__PURE__ */ function() {
    function DeleteSource2(value0) {
      this.value0 = value0;
    }
    ;
    DeleteSource2.create = function(value0) {
      return new DeleteSource2(value0);
    };
    return DeleteSource2;
  }();
  var HandlePerspective = /* @__PURE__ */ function() {
    function HandlePerspective2(value0, value1, value22, value32, value42, value52, value62, value72, value82) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
      this.value6 = value62;
      this.value7 = value72;
      this.value8 = value82;
    }
    ;
    HandlePerspective2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return function(value62) {
                  return function(value72) {
                    return function(value82) {
                      return new HandlePerspective2(value0, value1, value22, value32, value42, value52, value62, value72, value82);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
    return HandlePerspective2;
  }();
  var AddPerspective = /* @__PURE__ */ function() {
    function AddPerspective2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    AddPerspective2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new AddPerspective2(value0, value1, value22);
        };
      };
    };
    return AddPerspective2;
  }();
  var DelPerspective = /* @__PURE__ */ function() {
    function DelPerspective2(value0) {
      this.value0 = value0;
    }
    ;
    DelPerspective2.create = function(value0) {
      return new DelPerspective2(value0);
    };
    return DelPerspective2;
  }();
  var SetEditingName = /* @__PURE__ */ function() {
    function SetEditingName2(value0) {
      this.value0 = value0;
    }
    ;
    SetEditingName2.create = function(value0) {
      return new SetEditingName2(value0);
    };
    return SetEditingName2;
  }();
  var initialState = {
    editingBaseUrl: /* @__PURE__ */ mereUrl(""),
    sources: mempty8,
    perspectives: mempty8,
    editingName: "unnamed"
  };
  var addPerspectiveButton = function(dictMonadAff) {
    return function(state3) {
      return function(source3) {
        return function(v) {
          return div_([button([onClick(function(v1) {
            return new AddPerspective(source3, v.value0, v.value1);
          })])([text(unwrap16(v.value0))])]);
        };
      };
    };
  };
  var renderSource = function(dictMonadAff) {
    var addPerspectiveButton1 = addPerspectiveButton(dictMonadAff);
    return function(state3) {
      return function(source3) {
        return div2([css("source")])([strong_([text(source3.name)]), button([css("mini-button"), onClick($$const(new DeleteSource(source3)))])([text("del")]), function() {
          var v = lookupPathsInfos(source3.schema);
          if (v instanceof Nothing) {
            return p([css("warn")])([text("no paths exposed in the schema")]);
          }
          ;
          if (v instanceof Just) {
            return div2([css("pg-paths")])(toUnfoldable14(map37(addPerspectiveButton1(state3)(source3))(filter(function() {
              var $115 = notEq5(rootPath);
              return function($116) {
                return $115(fst($116));
              };
            }())(filter(function($117) {
              return hasTags(snd($117));
            })(v.value0)))));
          }
          ;
          throw new Error("Failed pattern match at Application (line 129, column 5 - line 136, column 21): " + [v.constructor.name]);
        }()]);
      };
    };
  };
  var _urlpicker = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var _perspective = /* @__PURE__ */ function() {
    return $$Proxy.value;
  }();
  var handleAction6 = function(dictMonadAff) {
    var liftAff2 = liftAff(monadAffHalogenM(dictMonadAff));
    var liftEffect9 = liftEffect(monadEffectHalogenM(dictMonadAff.MonadEffect0()));
    return function(v) {
      if (v instanceof HandleUrlPicker) {
        var newSource = {
          name: v.value0,
          baseUrl: v.value1.value0,
          schema: v.value1.value1
        };
        return modify_9(function(state3) {
          var $67 = {};
          for (var $68 in state3) {
            if ({}.hasOwnProperty.call(state3, $68)) {
              $67[$68] = state3[$68];
            }
            ;
          }
          ;
          $67.editingBaseUrl = mereUrl("");
          $67.sources = new Cons(newSource, state3.sources);
          return $67;
        });
      }
      ;
      if (v instanceof DeleteSource) {
        return modify_9(function(state3) {
          var $74 = {};
          for (var $75 in state3) {
            if ({}.hasOwnProperty.call(state3, $75)) {
              $74[$75] = state3[$75];
            }
            ;
          }
          ;
          $74.sources = filter(function(src22) {
            return src22.name !== v.value0.name;
          })(state3.sources);
          return $74;
        });
      }
      ;
      if (v instanceof DelPerspective) {
        return modify_9(function(st0) {
          var $78 = {};
          for (var $79 in st0) {
            if ({}.hasOwnProperty.call(st0, $79)) {
              $78[$79] = st0[$79];
            }
            ;
          }
          ;
          $78.perspectives = filter(function() {
            var $118 = notEq24(v.value0);
            return function($119) {
              return $118(fst($119));
            };
          }())(st0.perspectives);
          return $78;
        });
      }
      ;
      if (v instanceof AddPerspective) {
        return bind17(get10)(function(st0) {
          var idx = maybe(0)(function(x2) {
            return 1 + fst(x2.head) | 0;
          })(uncons2(st0.perspectives));
          var input3 = {
            source: v.value0,
            index: idx,
            path: v.value1,
            pathJson: v.value2
          };
          return put6(function() {
            var $82 = {};
            for (var $83 in st0) {
              if ({}.hasOwnProperty.call(st0, $83)) {
                $82[$83] = st0[$83];
              }
              ;
            }
            ;
            $82.perspectives = new Cons(new Tuple(idx, input3), st0.perspectives);
            return $82;
          }());
        });
      }
      ;
      if (v instanceof HandlePerspective && v.value2 instanceof Refresh) {
        return bind17(liftAff2(request(driver)(fetchRows(v.value1)(v.value3)(v.value4)(v.value5)(v.value6)(v.value8)(v.value7))))(function(ret) {
          var dat = hush(ret);
          var q2 = maybe(ClearRows.create)(function(x2) {
            return ReceiveRows4.create(x2.body)(v.value8);
          })(dat);
          return bind17(query4(_perspective)(v.value0)(q2(unit)))(function() {
            return pure24(unit);
          });
        });
      }
      ;
      if (v instanceof HandlePerspective && v.value2 instanceof DownloadCSV) {
        return bind17(liftAff2(request(driver)(fetchCSV(v.value1)(v.value3)(v.value4)(v.value5)(v.value6)(v.value8)(v.value7))))(function(ret) {
          var dat = hush(ret);
          if (dat instanceof Nothing) {
            return pure24(unit);
          }
          ;
          if (dat instanceof Just) {
            return liftEffect9(function __do2() {
              var objecturl = createObjectURL(fromString4(dat.value0.body)("text/csv"))();
              var loc = bindFlipped8(location)(windowImpl)();
              replace3(objecturl)(loc)();
              return revokeObjectURL(objecturl)();
            });
          }
          ;
          throw new Error("Failed pattern match at Application (line 195, column 7 - line 201, column 36): " + [dat.constructor.name]);
        });
      }
      ;
      if (v instanceof SetEditingName) {
        return modify_9(function(v1) {
          var $108 = {};
          for (var $109 in v1) {
            if ({}.hasOwnProperty.call(v1, $109)) {
              $108[$109] = v1[$109];
            }
            ;
          }
          ;
          $108.editingName = v.value0;
          return $108;
        });
      }
      ;
      throw new Error("Failed pattern match at Application (line 166, column 16 - line 204, column 40): " + [v.constructor.name]);
    };
  };
  var renderPerspective = function(dictMonadAff) {
    var perspective2 = perspective(dictMonadAff);
    return function(n) {
      return function(input3) {
        var handlePerspective = function(o) {
          return new HandlePerspective(n, input3.source.baseUrl, o.request, input3.path, o.selectors, o.pagination, o.fieldsSelection, o.order, o.nestedFields);
        };
        return div2([css("path")])([slot12(_perspective)(n)(perspective2)(input3)(handlePerspective), button([onClick(function(v) {
          return new DelPerspective(n);
        })])([text("del")])]);
      };
    };
  };
  var render6 = function(dictMonadAff) {
    var renderSource1 = renderSource(dictMonadAff);
    var renderPerspective1 = renderPerspective(dictMonadAff);
    var urlPickerComponent2 = urlPickerComponent(dictMonadAff);
    return function(preloadurl) {
      return function(state3) {
        return div_([div2([css("sources")])(toUnfoldable14(map37(renderSource1(state3))(state3.sources))), div2([css("pg-tables")])(toUnfoldable14(map37(function(v) {
          return renderPerspective1(v.value0)(v.value1);
        })(reverse2(state3.perspectives)))), div2([css("new-source")])([strong_([text("new source")]), div2([css("new-source-name-label")])([label([$$for("new-source-name")])([text("Name:")]), div2([css("new-source-name-input")])([input([type_23(InputText.value), id3("new-source-name"), onValueInput(SetEditingName.create)])])]), div2([css("url-picker")])([slot23(_urlpicker)(unit)(urlPickerComponent2)(preloadurl)(HandleUrlPicker.create(state3.editingName))])])]);
      };
    };
  };
  var applicationComponent = function(dictMonadAff) {
    var render1 = render6(dictMonadAff);
    var handleAction1 = handleAction6(dictMonadAff);
    return function(url) {
      return mkComponent({
        initialState: $$const(initialState),
        render: render1(url),
        "eval": mkEval({
          handleQuery: defaultEval.handleQuery,
          receive: defaultEval.receive,
          initialize: defaultEval.initialize,
          finalize: defaultEval.finalize,
          handleAction: handleAction1
        })
      });
    };
  };

  // output/Effect.Console/foreign.js
  var log2 = function(s) {
    return function() {
      console.log(s);
    };
  };
  var warn = function(s) {
    return function() {
      console.warn(s);
    };
  };

  // output/Halogen.Aff.Util/index.js
  var bind18 = /* @__PURE__ */ bind(bindAff);
  var liftEffect4 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var bindFlipped9 = /* @__PURE__ */ bindFlipped(bindEffect);
  var composeKleisliFlipped4 = /* @__PURE__ */ composeKleisliFlipped(bindEffect);
  var pure25 = /* @__PURE__ */ pure(applicativeAff);
  var bindFlipped1 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var pure111 = /* @__PURE__ */ pure(applicativeEffect);
  var map38 = /* @__PURE__ */ map(functorEffect);
  var discard8 = /* @__PURE__ */ discard(discardUnit);
  var throwError3 = /* @__PURE__ */ throwError(monadThrowAff);
  var selectElement = function(query5) {
    return bind18(liftEffect4(bindFlipped9(composeKleisliFlipped4(function() {
      var $16 = querySelector(query5);
      return function($17) {
        return $16(toParentNode($17));
      };
    }())(document))(windowImpl)))(function(mel) {
      return pure25(bindFlipped1(fromElement)(mel));
    });
  };
  var runHalogenAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure111(unit))));
  var awaitLoad = /* @__PURE__ */ makeAff(function(callback) {
    return function __do2() {
      var rs = bindFlipped9(readyState)(bindFlipped9(document)(windowImpl))();
      if (rs instanceof Loading) {
        var et = map38(toEventTarget)(windowImpl)();
        var listener = eventListener(function(v) {
          return callback(new Right(unit));
        })();
        addEventListener2(domcontentloaded)(listener)(false)(et)();
        return effectCanceler(removeEventListener2(domcontentloaded)(listener)(false)(et));
      }
      ;
      callback(new Right(unit))();
      return nonCanceler;
    };
  });
  var awaitBody = /* @__PURE__ */ discard8(bindAff)(awaitLoad)(function() {
    return bind18(selectElement("body"))(function(body2) {
      return maybe(throwError3(error("Could not find body")))(pure25)(body2);
    });
  });

  // output/Control.Monad.Fork.Class/index.js
  var monadForkAff = {
    suspend: suspendAff,
    fork: forkAff,
    join: joinFiber,
    Monad0: function() {
      return monadAff;
    },
    Functor1: function() {
      return functorFiber;
    }
  };
  var fork = function(dict) {
    return dict.fork;
  };

  // output/Halogen.Aff.Driver.State/index.js
  var unRenderStateX = unsafeCoerce2;
  var unDriverStateX = unsafeCoerce2;
  var renderStateX_ = function(dictApplicative) {
    var traverse_7 = traverse_(dictApplicative)(foldableMaybe);
    return function(f) {
      return unDriverStateX(function(st) {
        return traverse_7(f)(st.rendering);
      });
    };
  };
  var mkRenderStateX = unsafeCoerce2;
  var renderStateX = function(dictFunctor) {
    return function(f) {
      return unDriverStateX(function(st) {
        return mkRenderStateX(f(st.rendering));
      });
    };
  };
  var mkDriverStateXRef = unsafeCoerce2;
  var mapDriverState = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var initDriverState = function(component) {
    return function(input3) {
      return function(handler3) {
        return function(lchs) {
          return function __do2() {
            var selfRef = $$new({})();
            var childrenIn = $$new(empty4)();
            var childrenOut = $$new(empty4)();
            var handlerRef = $$new(handler3)();
            var pendingQueries = $$new(new Just(Nil.value))();
            var pendingOuts = $$new(new Just(Nil.value))();
            var pendingHandlers = $$new(Nothing.value)();
            var fresh2 = $$new(1)();
            var subscriptions = $$new(new Just(empty3))();
            var forks = $$new(empty3)();
            var ds = {
              component,
              state: component.initialState(input3),
              refs: empty3,
              children: empty4,
              childrenIn,
              childrenOut,
              selfRef,
              handlerRef,
              pendingQueries,
              pendingOuts,
              pendingHandlers,
              rendering: Nothing.value,
              fresh: fresh2,
              subscriptions,
              forks,
              lifecycleHandlers: lchs
            };
            write(ds)(selfRef)();
            return mkDriverStateXRef(selfRef);
          };
        };
      };
    };
  };

  // output/Halogen.Aff.Driver.Eval/index.js
  var traverse_4 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var bindFlipped10 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var lookup7 = /* @__PURE__ */ lookup2(ordSubscriptionId);
  var bind19 = /* @__PURE__ */ bind(bindAff);
  var liftEffect5 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard9 = /* @__PURE__ */ discard(discardUnit);
  var discard12 = /* @__PURE__ */ discard9(bindAff);
  var traverse_12 = /* @__PURE__ */ traverse_(applicativeAff);
  var traverse_22 = /* @__PURE__ */ traverse_12(foldableList);
  var fork3 = /* @__PURE__ */ fork(monadForkAff);
  var parSequence_2 = /* @__PURE__ */ parSequence_(parallelAff)(applicativeParAff)(foldableList);
  var pure26 = /* @__PURE__ */ pure(applicativeAff);
  var map39 = /* @__PURE__ */ map(functorCoyoneda);
  var parallel3 = /* @__PURE__ */ parallel(parallelAff);
  var map118 = /* @__PURE__ */ map(functorAff);
  var sequential2 = /* @__PURE__ */ sequential(parallelAff);
  var map213 = /* @__PURE__ */ map(functorMaybe);
  var insert9 = /* @__PURE__ */ insert3(ordSubscriptionId);
  var retractFreeAp2 = /* @__PURE__ */ retractFreeAp(applicativeParAff);
  var $$delete7 = /* @__PURE__ */ $$delete4(ordForkId);
  var unlessM2 = /* @__PURE__ */ unlessM(monadEffect);
  var insert12 = /* @__PURE__ */ insert3(ordForkId);
  var traverse_32 = /* @__PURE__ */ traverse_12(foldableMaybe);
  var lookup12 = /* @__PURE__ */ lookup2(ordForkId);
  var lookup22 = /* @__PURE__ */ lookup2(ordString);
  var foldFree2 = /* @__PURE__ */ foldFree(monadRecAff);
  var alter3 = /* @__PURE__ */ alter2(ordString);
  var unsubscribe3 = function(sid) {
    return function(ref2) {
      return function __do2() {
        var v = read(ref2)();
        var subs = read(v.subscriptions)();
        return traverse_4(unsubscribe)(bindFlipped10(lookup7(sid))(subs))();
      };
    };
  };
  var queueOrRun = function(ref2) {
    return function(au) {
      return bind19(liftEffect5(read(ref2)))(function(v) {
        if (v instanceof Nothing) {
          return au;
        }
        ;
        if (v instanceof Just) {
          return liftEffect5(write(new Just(new Cons(au, v.value0)))(ref2));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 188, column 33 - line 190, column 57): " + [v.constructor.name]);
      });
    };
  };
  var handleLifecycle = function(lchs) {
    return function(f) {
      return discard12(liftEffect5(write({
        initializers: Nil.value,
        finalizers: Nil.value
      })(lchs)))(function() {
        return bind19(liftEffect5(f))(function(result) {
          return bind19(liftEffect5(read(lchs)))(function(v) {
            return discard12(traverse_22(fork3)(v.finalizers))(function() {
              return discard12(parSequence_2(v.initializers))(function() {
                return pure26(result);
              });
            });
          });
        });
      });
    };
  };
  var handleAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure(applicativeEffect)(unit))));
  var fresh = function(f) {
    return function(ref2) {
      return bind19(liftEffect5(read(ref2)))(function(v) {
        return liftEffect5(modify$prime(function(i2) {
          return {
            state: i2 + 1 | 0,
            value: f(i2)
          };
        })(v.fresh));
      });
    };
  };
  var evalQ = function(render7) {
    return function(ref2) {
      return function(q2) {
        return bind19(liftEffect5(read(ref2)))(function(v) {
          return evalM(render7)(ref2)(v["component"]["eval"](new Query(map39(Just.create)(liftCoyoneda(q2)), $$const(Nothing.value))));
        });
      };
    };
  };
  var evalM = function(render7) {
    return function(initRef) {
      return function(v) {
        var evalChildQuery = function(ref2) {
          return function(cqb) {
            return bind19(liftEffect5(read(ref2)))(function(v1) {
              return unChildQueryBox(function(v2) {
                var evalChild = function(v3) {
                  return parallel3(bind19(liftEffect5(read(v3)))(function(dsx) {
                    return unDriverStateX(function(ds) {
                      return evalQ(render7)(ds.selfRef)(v2.value1);
                    })(dsx);
                  }));
                };
                return map118(v2.value2)(sequential2(v2.value0(applicativeParAff)(evalChild)(v1.children)));
              })(cqb);
            });
          };
        };
        var go2 = function(ref2) {
          return function(v1) {
            if (v1 instanceof State) {
              return bind19(liftEffect5(read(ref2)))(function(v2) {
                var v3 = v1.value0(v2.state);
                if (unsafeRefEq(v2.state)(v3.value1)) {
                  return pure26(v3.value0);
                }
                ;
                if (otherwise) {
                  return discard12(liftEffect5(write({
                    component: v2.component,
                    refs: v2.refs,
                    children: v2.children,
                    childrenIn: v2.childrenIn,
                    childrenOut: v2.childrenOut,
                    selfRef: v2.selfRef,
                    handlerRef: v2.handlerRef,
                    pendingQueries: v2.pendingQueries,
                    pendingOuts: v2.pendingOuts,
                    pendingHandlers: v2.pendingHandlers,
                    rendering: v2.rendering,
                    fresh: v2.fresh,
                    subscriptions: v2.subscriptions,
                    forks: v2.forks,
                    lifecycleHandlers: v2.lifecycleHandlers,
                    state: v3.value1
                  })(ref2)))(function() {
                    return discard12(handleLifecycle(v2.lifecycleHandlers)(render7(v2.lifecycleHandlers)(ref2)))(function() {
                      return pure26(v3.value0);
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [v3.constructor.name]);
              });
            }
            ;
            if (v1 instanceof Subscribe) {
              return bind19(fresh(SubscriptionId)(ref2))(function(sid) {
                return bind19(liftEffect5(subscribe(v1.value0(sid))(function(act) {
                  return handleAff(evalF(render7)(ref2)(new Action(act)));
                })))(function(finalize) {
                  return bind19(liftEffect5(read(ref2)))(function(v2) {
                    return discard12(liftEffect5(modify_(map213(insert9(sid)(finalize)))(v2.subscriptions)))(function() {
                      return pure26(v1.value1(sid));
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Unsubscribe) {
              return discard12(liftEffect5(unsubscribe3(v1.value0)(ref2)))(function() {
                return pure26(v1.value1);
              });
            }
            ;
            if (v1 instanceof Lift2) {
              return v1.value0;
            }
            ;
            if (v1 instanceof ChildQuery2) {
              return evalChildQuery(ref2)(v1.value0);
            }
            ;
            if (v1 instanceof Raise) {
              return bind19(liftEffect5(read(ref2)))(function(v2) {
                return bind19(liftEffect5(read(v2.handlerRef)))(function(handler3) {
                  return discard12(queueOrRun(v2.pendingOuts)(handler3(v1.value0)))(function() {
                    return pure26(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Par) {
              return sequential2(retractFreeAp2(hoistFreeAp(function() {
                var $119 = evalM(render7)(ref2);
                return function($120) {
                  return parallel3($119($120));
                };
              }())(v1.value0)));
            }
            ;
            if (v1 instanceof Fork) {
              return bind19(fresh(ForkId)(ref2))(function(fid) {
                return bind19(liftEffect5(read(ref2)))(function(v2) {
                  return bind19(liftEffect5($$new(false)))(function(doneRef) {
                    return bind19(fork3($$finally(liftEffect5(function __do2() {
                      modify_($$delete7(fid))(v2.forks)();
                      return write(true)(doneRef)();
                    }))(evalM(render7)(ref2)(v1.value0))))(function(fiber) {
                      return discard12(liftEffect5(unlessM2(read(doneRef))(modify_(insert12(fid)(fiber))(v2.forks))))(function() {
                        return pure26(v1.value1(fid));
                      });
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Join) {
              return bind19(liftEffect5(read(ref2)))(function(v2) {
                return bind19(liftEffect5(read(v2.forks)))(function(forkMap) {
                  return discard12(traverse_32(joinFiber)(lookup12(v1.value0)(forkMap)))(function() {
                    return pure26(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Kill) {
              return bind19(liftEffect5(read(ref2)))(function(v2) {
                return bind19(liftEffect5(read(v2.forks)))(function(forkMap) {
                  return discard12(traverse_32(killFiber(error("Cancelled")))(lookup12(v1.value0)(forkMap)))(function() {
                    return pure26(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof GetRef) {
              return bind19(liftEffect5(read(ref2)))(function(v2) {
                return pure26(v1.value1(lookup22(v1.value0)(v2.refs)));
              });
            }
            ;
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 139, column 33): " + [v1.constructor.name]);
          };
        };
        return foldFree2(go2(initRef))(v);
      };
    };
  };
  var evalF = function(render7) {
    return function(ref2) {
      return function(v) {
        if (v instanceof RefUpdate) {
          return liftEffect5(flip(modify_)(ref2)(mapDriverState(function(st) {
            return {
              component: st.component,
              state: st.state,
              children: st.children,
              childrenIn: st.childrenIn,
              childrenOut: st.childrenOut,
              selfRef: st.selfRef,
              handlerRef: st.handlerRef,
              pendingQueries: st.pendingQueries,
              pendingOuts: st.pendingOuts,
              pendingHandlers: st.pendingHandlers,
              rendering: st.rendering,
              fresh: st.fresh,
              subscriptions: st.subscriptions,
              forks: st.forks,
              lifecycleHandlers: st.lifecycleHandlers,
              refs: alter3($$const(v.value1))(v.value0)(st.refs)
            };
          })));
        }
        ;
        if (v instanceof Action) {
          return bind19(liftEffect5(read(ref2)))(function(v1) {
            return evalM(render7)(ref2)(v1["component"]["eval"](new Action2(v.value0, unit)));
          });
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [v.constructor.name]);
      };
    };
  };

  // output/Halogen.Aff.Driver/index.js
  var bind20 = /* @__PURE__ */ bind(bindEffect);
  var discard10 = /* @__PURE__ */ discard(discardUnit);
  var for_2 = /* @__PURE__ */ for_(applicativeEffect)(foldableMaybe);
  var traverse_5 = /* @__PURE__ */ traverse_(applicativeAff)(foldableList);
  var fork4 = /* @__PURE__ */ fork(monadForkAff);
  var bindFlipped11 = /* @__PURE__ */ bindFlipped(bindEffect);
  var traverse_13 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_23 = /* @__PURE__ */ traverse_13(foldableMaybe);
  var traverse_33 = /* @__PURE__ */ traverse_13(foldableMap);
  var discard24 = /* @__PURE__ */ discard10(bindAff);
  var parSequence_3 = /* @__PURE__ */ parSequence_(parallelAff)(applicativeParAff)(foldableList);
  var liftEffect6 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure27 = /* @__PURE__ */ pure(applicativeEffect);
  var map40 = /* @__PURE__ */ map(functorEffect);
  var pure112 = /* @__PURE__ */ pure(applicativeAff);
  var when3 = /* @__PURE__ */ when(applicativeEffect);
  var renderStateX2 = /* @__PURE__ */ renderStateX(functorEffect);
  var $$void7 = /* @__PURE__ */ $$void(functorAff);
  var foreachSlot2 = /* @__PURE__ */ foreachSlot(applicativeEffect);
  var renderStateX_2 = /* @__PURE__ */ renderStateX_(applicativeEffect);
  var tailRecM4 = /* @__PURE__ */ tailRecM(monadRecEffect);
  var voidLeft5 = /* @__PURE__ */ voidLeft(functorEffect);
  var bind110 = /* @__PURE__ */ bind(bindAff);
  var liftEffect1 = /* @__PURE__ */ liftEffect(monadEffectEffect);
  var newLifecycleHandlers = /* @__PURE__ */ function() {
    return $$new({
      initializers: Nil.value,
      finalizers: Nil.value
    });
  }();
  var handlePending = function(ref2) {
    return function __do2() {
      var queue = read(ref2)();
      write(Nothing.value)(ref2)();
      return for_2(queue)(function() {
        var $59 = traverse_5(fork4);
        return function($60) {
          return handleAff($59(reverse2($60)));
        };
      }())();
    };
  };
  var cleanupSubscriptionsAndForks = function(v) {
    return function __do2() {
      bindFlipped11(traverse_23(traverse_33(unsubscribe)))(read(v.subscriptions))();
      write(Nothing.value)(v.subscriptions)();
      bindFlipped11(traverse_33(function() {
        var $61 = killFiber(error("finalized"));
        return function($62) {
          return handleAff($61($62));
        };
      }()))(read(v.forks))();
      return write(empty3)(v.forks)();
    };
  };
  var runUI = function(renderSpec2) {
    return function(component) {
      return function(i2) {
        var squashChildInitializers = function(lchs) {
          return function(preInits) {
            return unDriverStateX(function(st) {
              var parentInitializer = evalM(render7)(st.selfRef)(st["component"]["eval"](new Initialize(unit)));
              return modify_(function(handlers) {
                return {
                  initializers: new Cons(discard24(parSequence_3(reverse2(handlers.initializers)))(function() {
                    return discard24(parentInitializer)(function() {
                      return liftEffect6(function __do2() {
                        handlePending(st.pendingQueries)();
                        return handlePending(st.pendingOuts)();
                      });
                    });
                  }), preInits),
                  finalizers: handlers.finalizers
                };
              })(lchs);
            });
          };
        };
        var runComponent = function(lchs) {
          return function(handler3) {
            return function(j) {
              return unComponent(function(c) {
                return function __do2() {
                  var lchs$prime = newLifecycleHandlers();
                  var $$var2 = initDriverState(c)(j)(handler3)(lchs$prime)();
                  var pre2 = read(lchs)();
                  write({
                    initializers: Nil.value,
                    finalizers: pre2.finalizers
                  })(lchs)();
                  bindFlipped11(unDriverStateX(function() {
                    var $63 = render7(lchs);
                    return function($64) {
                      return $63(function(v) {
                        return v.selfRef;
                      }($64));
                    };
                  }()))(read($$var2))();
                  bindFlipped11(squashChildInitializers(lchs)(pre2.initializers))(read($$var2))();
                  return $$var2;
                };
              });
            };
          };
        };
        var renderChild = function(lchs) {
          return function(handler3) {
            return function(childrenInRef) {
              return function(childrenOutRef) {
                return unComponentSlot(function(slot5) {
                  return function __do2() {
                    var childrenIn = map40(slot5.pop)(read(childrenInRef))();
                    var $$var2 = function() {
                      if (childrenIn instanceof Just) {
                        write(childrenIn.value0.value1)(childrenInRef)();
                        var dsx = read(childrenIn.value0.value0)();
                        unDriverStateX(function(st) {
                          return function __do3() {
                            flip(write)(st.handlerRef)(function() {
                              var $65 = maybe(pure112(unit))(handler3);
                              return function($66) {
                                return $65(slot5.output($66));
                              };
                            }())();
                            return handleAff(evalM(render7)(st.selfRef)(st["component"]["eval"](new Receive(slot5.input, unit))))();
                          };
                        })(dsx)();
                        return childrenIn.value0.value0;
                      }
                      ;
                      if (childrenIn instanceof Nothing) {
                        return runComponent(lchs)(function() {
                          var $67 = maybe(pure112(unit))(handler3);
                          return function($68) {
                            return $67(slot5.output($68));
                          };
                        }())(slot5.input)(slot5.component)();
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 213, column 14 - line 222, column 98): " + [childrenIn.constructor.name]);
                    }();
                    var isDuplicate = map40(function($69) {
                      return isJust(slot5.get($69));
                    })(read(childrenOutRef))();
                    when3(isDuplicate)(warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                    modify_(slot5.set($$var2))(childrenOutRef)();
                    return bind20(read($$var2))(renderStateX2(function(v) {
                      if (v instanceof Nothing) {
                        return $$throw("Halogen internal error: child was not initialized in renderChild");
                      }
                      ;
                      if (v instanceof Just) {
                        return pure27(renderSpec2.renderChild(v.value0));
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 227, column 37 - line 229, column 50): " + [v.constructor.name]);
                    }))();
                  };
                });
              };
            };
          };
        };
        var render7 = function(lchs) {
          return function($$var2) {
            return function __do2() {
              var v = read($$var2)();
              var shouldProcessHandlers = map40(isNothing)(read(v.pendingHandlers))();
              when3(shouldProcessHandlers)(write(new Just(Nil.value))(v.pendingHandlers))();
              write(empty4)(v.childrenOut)();
              write(v.children)(v.childrenIn)();
              var handler3 = function() {
                var $70 = queueOrRun(v.pendingHandlers);
                var $71 = evalF(render7)(v.selfRef);
                return function($72) {
                  return $70($$void7($71($72)));
                };
              }();
              var childHandler = function() {
                var $73 = queueOrRun(v.pendingQueries);
                return function($74) {
                  return $73(handler3(Action.create($74)));
                };
              }();
              var rendering = renderSpec2.render(function($75) {
                return handleAff(handler3($75));
              })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
              var children2 = read(v.childrenOut)();
              var childrenIn = read(v.childrenIn)();
              foreachSlot2(childrenIn)(function(v1) {
                return function __do3() {
                  var childDS = read(v1)();
                  renderStateX_2(renderSpec2.removeChild)(childDS)();
                  return finalize(lchs)(childDS)();
                };
              })();
              flip(modify_)(v.selfRef)(mapDriverState(function(ds$prime) {
                return {
                  component: ds$prime.component,
                  state: ds$prime.state,
                  refs: ds$prime.refs,
                  childrenIn: ds$prime.childrenIn,
                  childrenOut: ds$prime.childrenOut,
                  selfRef: ds$prime.selfRef,
                  handlerRef: ds$prime.handlerRef,
                  pendingQueries: ds$prime.pendingQueries,
                  pendingOuts: ds$prime.pendingOuts,
                  pendingHandlers: ds$prime.pendingHandlers,
                  fresh: ds$prime.fresh,
                  subscriptions: ds$prime.subscriptions,
                  forks: ds$prime.forks,
                  lifecycleHandlers: ds$prime.lifecycleHandlers,
                  rendering: new Just(rendering),
                  children: children2
                };
              }))();
              return when3(shouldProcessHandlers)(flip(tailRecM4)(unit)(function(v1) {
                return function __do3() {
                  var handlers = read(v.pendingHandlers)();
                  write(new Just(Nil.value))(v.pendingHandlers)();
                  traverse_23(function() {
                    var $76 = traverse_5(fork4);
                    return function($77) {
                      return handleAff($76(reverse2($77)));
                    };
                  }())(handlers)();
                  var mmore = read(v.pendingHandlers)();
                  var $52 = maybe(false)($$null3)(mmore);
                  if ($52) {
                    return voidLeft5(write(Nothing.value)(v.pendingHandlers))(new Done(unit))();
                  }
                  ;
                  return new Loop(unit);
                };
              }))();
            };
          };
        };
        var finalize = function(lchs) {
          return unDriverStateX(function(st) {
            return function __do2() {
              cleanupSubscriptionsAndForks(st)();
              var f = evalM(render7)(st.selfRef)(st["component"]["eval"](new Finalize(unit)));
              modify_(function(handlers) {
                return {
                  initializers: handlers.initializers,
                  finalizers: new Cons(f, handlers.finalizers)
                };
              })(lchs)();
              return foreachSlot2(st.children)(function(v) {
                return function __do3() {
                  var dsx = read(v)();
                  return finalize(lchs)(dsx)();
                };
              })();
            };
          });
        };
        var evalDriver = function(disposed) {
          return function(ref2) {
            return function(q2) {
              return bind110(liftEffect6(read(disposed)))(function(v) {
                if (v) {
                  return pure112(Nothing.value);
                }
                ;
                return evalQ(render7)(ref2)(q2);
              });
            };
          };
        };
        var dispose = function(disposed) {
          return function(lchs) {
            return function(dsx) {
              return handleLifecycle(lchs)(function __do2() {
                var v = read(disposed)();
                if (v) {
                  return unit;
                }
                ;
                write(true)(disposed)();
                finalize(lchs)(dsx)();
                return unDriverStateX(function(v1) {
                  return function __do3() {
                    var v2 = liftEffect1(read(v1.selfRef))();
                    return for_2(v2.rendering)(renderSpec2.dispose)();
                  };
                })(dsx)();
              });
            };
          };
        };
        return bind110(liftEffect6(newLifecycleHandlers))(function(lchs) {
          return bind110(liftEffect6($$new(false)))(function(disposed) {
            return handleLifecycle(lchs)(function __do2() {
              var sio = create();
              var dsx = bindFlipped11(read)(runComponent(lchs)(function() {
                var $78 = notify(sio.listener);
                return function($79) {
                  return liftEffect6($78($79));
                };
              }())(i2)(component))();
              return unDriverStateX(function(st) {
                return pure27({
                  query: evalDriver(disposed)(st.selfRef),
                  messages: sio.emitter,
                  dispose: dispose(disposed)(lchs)(dsx)
                });
              })(dsx)();
            });
          });
        });
      };
    };
  };

  // output/Web.DOM.Node/foreign.js
  var getEffProp2 = function(name18) {
    return function(node) {
      return function() {
        return node[name18];
      };
    };
  };
  var baseURI = getEffProp2("baseURI");
  var _ownerDocument = getEffProp2("ownerDocument");
  var _parentNode = getEffProp2("parentNode");
  var _parentElement = getEffProp2("parentElement");
  var childNodes = getEffProp2("childNodes");
  var _firstChild = getEffProp2("firstChild");
  var _lastChild = getEffProp2("lastChild");
  var _previousSibling = getEffProp2("previousSibling");
  var _nextSibling = getEffProp2("nextSibling");
  var _nodeValue = getEffProp2("nodeValue");
  var textContent = getEffProp2("textContent");
  function insertBefore(node1) {
    return function(node2) {
      return function(parent2) {
        return function() {
          parent2.insertBefore(node1, node2);
        };
      };
    };
  }
  function appendChild(node) {
    return function(parent2) {
      return function() {
        parent2.appendChild(node);
      };
    };
  }
  function removeChild2(node) {
    return function(parent2) {
      return function() {
        parent2.removeChild(node);
      };
    };
  }

  // output/Web.DOM.Node/index.js
  var map41 = /* @__PURE__ */ map(functorEffect);
  var parentNode2 = /* @__PURE__ */ function() {
    var $6 = map41(toMaybe);
    return function($7) {
      return $6(_parentNode($7));
    };
  }();
  var nextSibling = /* @__PURE__ */ function() {
    var $15 = map41(toMaybe);
    return function($16) {
      return $15(_nextSibling($16));
    };
  }();

  // output/Halogen.VDom.Driver/index.js
  var $runtime_lazy12 = function(name18, moduleName, init3) {
    var state3 = 0;
    var val2;
    return function(lineNumber) {
      if (state3 === 2)
        return val2;
      if (state3 === 1)
        throw new ReferenceError(name18 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val2 = init3();
      state3 = 2;
      return val2;
    };
  };
  var $$void8 = /* @__PURE__ */ $$void(functorEffect);
  var pure28 = /* @__PURE__ */ pure(applicativeEffect);
  var traverse_6 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var unwrap17 = /* @__PURE__ */ unwrap();
  var when4 = /* @__PURE__ */ when(applicativeEffect);
  var not2 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean)));
  var identity17 = /* @__PURE__ */ identity(categoryFn);
  var bind111 = /* @__PURE__ */ bind(bindAff);
  var liftEffect7 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var map43 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped12 = /* @__PURE__ */ bindFlipped(bindEffect);
  var substInParent = function(v) {
    return function(v1) {
      return function(v2) {
        if (v1 instanceof Just && v2 instanceof Just) {
          return $$void8(insertBefore(v)(v1.value0)(v2.value0));
        }
        ;
        if (v1 instanceof Nothing && v2 instanceof Just) {
          return $$void8(appendChild(v)(v2.value0));
        }
        ;
        return pure28(unit);
      };
    };
  };
  var removeChild3 = function(v) {
    return function __do2() {
      var npn = parentNode2(v.node)();
      return traverse_6(function(pn) {
        return removeChild2(v.node)(pn);
      })(npn)();
    };
  };
  var mkSpec = function(handler3) {
    return function(renderChildRef) {
      return function(document2) {
        var getNode = unRenderStateX(function(v) {
          return v.node;
        });
        var done = function(st) {
          if (st instanceof Just) {
            return halt(st.value0);
          }
          ;
          return unit;
        };
        var buildWidget2 = function(spec) {
          var buildThunk2 = buildThunk(unwrap17)(spec);
          var $lazy_patch = $runtime_lazy12("patch", "Halogen.VDom.Driver", function() {
            return function(st, slot5) {
              if (st instanceof Just) {
                if (slot5 instanceof ComponentSlot) {
                  halt(st.value0);
                  return $lazy_renderComponentSlot(100)(slot5.value0);
                }
                ;
                if (slot5 instanceof ThunkSlot) {
                  var step$prime = step(st.value0, slot5.value0);
                  return mkStep(new Step(extract2(step$prime), new Just(step$prime), $lazy_patch(103), done));
                }
                ;
                throw new Error("Failed pattern match at Halogen.VDom.Driver (line 97, column 22 - line 103, column 79): " + [slot5.constructor.name]);
              }
              ;
              return $lazy_render(104)(slot5);
            };
          });
          var $lazy_render = $runtime_lazy12("render", "Halogen.VDom.Driver", function() {
            return function(slot5) {
              if (slot5 instanceof ComponentSlot) {
                return $lazy_renderComponentSlot(86)(slot5.value0);
              }
              ;
              if (slot5 instanceof ThunkSlot) {
                var step4 = buildThunk2(slot5.value0);
                return mkStep(new Step(extract2(step4), new Just(step4), $lazy_patch(89), done));
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 84, column 7 - line 89, column 75): " + [slot5.constructor.name]);
            };
          });
          var $lazy_renderComponentSlot = $runtime_lazy12("renderComponentSlot", "Halogen.VDom.Driver", function() {
            return function(cs) {
              var renderChild = read(renderChildRef)();
              var rsx = renderChild(cs)();
              var node = getNode(rsx);
              return mkStep(new Step(node, Nothing.value, $lazy_patch(117), done));
            };
          });
          var patch2 = $lazy_patch(91);
          var render7 = $lazy_render(82);
          var renderComponentSlot = $lazy_renderComponentSlot(109);
          return render7;
        };
        var buildAttributes = buildProp(handler3);
        return {
          buildWidget: buildWidget2,
          buildAttributes,
          document: document2
        };
      };
    };
  };
  var renderSpec = function(document2) {
    return function(container) {
      var render7 = function(handler3) {
        return function(child) {
          return function(v) {
            return function(v1) {
              if (v1 instanceof Nothing) {
                return function __do2() {
                  var renderChildRef = $$new(child)();
                  var spec = mkSpec(handler3)(renderChildRef)(document2);
                  var machine = buildVDom(spec)(v);
                  var node = extract2(machine);
                  $$void8(appendChild(node)(toNode2(container)))();
                  return {
                    machine,
                    node,
                    renderChildRef
                  };
                };
              }
              ;
              if (v1 instanceof Just) {
                return function __do2() {
                  write(child)(v1.value0.renderChildRef)();
                  var parent2 = parentNode2(v1.value0.node)();
                  var nextSib = nextSibling(v1.value0.node)();
                  var machine$prime = step(v1.value0.machine, v);
                  var newNode = extract2(machine$prime);
                  when4(not2(unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent2))();
                  return {
                    machine: machine$prime,
                    node: newNode,
                    renderChildRef: v1.value0.renderChildRef
                  };
                };
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 157, column 5 - line 173, column 80): " + [v1.constructor.name]);
            };
          };
        };
      };
      return {
        render: render7,
        renderChild: identity17,
        removeChild: removeChild3,
        dispose: removeChild3
      };
    };
  };
  var runUI2 = function(component) {
    return function(i2) {
      return function(element3) {
        return bind111(liftEffect7(map43(toDocument)(bindFlipped12(document)(windowImpl))))(function(document2) {
          return runUI(renderSpec(document2)(element3))(component)(i2);
        });
      };
    };
  };

  // output/Main/index.js
  var bind21 = /* @__PURE__ */ bind(bindAff);
  var liftEffect8 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var bindFlipped13 = /* @__PURE__ */ bindFlipped(bindEffect);
  var map44 = /* @__PURE__ */ map(functorMaybe);
  var discard11 = /* @__PURE__ */ discard(discardUnit)(bindAff);
  var applicationComponent2 = /* @__PURE__ */ applicationComponent(monadAffAff);
  var main2 = /* @__PURE__ */ runHalogenAff(/* @__PURE__ */ bind21(/* @__PURE__ */ liftEffect8(/* @__PURE__ */ bindFlipped13(search)(/* @__PURE__ */ bindFlipped13(location)(windowImpl))))(function(loc) {
    var url = map44(mereUrl)(stripPrefix("?postgrest=")(loc));
    return bind21(awaitBody)(function(body2) {
      return bind21(selectElement("#spa"))(function(elem6) {
        return discard11(liftEffect8(function() {
          if (elem6 instanceof Nothing) {
            return log2("no ui elem");
          }
          ;
          if (elem6 instanceof Just) {
            return log2("ui elem found");
          }
          ;
          throw new Error("Failed pattern match at Main (line 31, column 20 - line 33, column 36): " + [elem6.constructor.name]);
        }()))(function() {
          var tgt = fromMaybe(body2)(elem6);
          return runUI2(applicationComponent2(url))(unit)(tgt);
        });
      });
    });
  }));

  // <stdin>
  main2();
})();
