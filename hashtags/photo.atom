<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">
        Lucas DiCioccio's blog
    </title>
    <id>
        https://dicioccio.fr/atom.xml
    </id>
    <updated>
        2023-07-12T01:00:00Z
    </updated>
    <entry>
        <id>
            https://dicioccio.fr/photoclub-judgment-tips.html
        </id>
        <title type="text">
            Photo Competitions from the inside
        </title>
        <updated>
            2023-07-12T01:00:00Z
        </updated>
        <author>
            <name>
                Lucas DiCioccio
            </name>
        </author>
        <content type="html">
            &lt;div class="main-article"&gt;&lt;section class="main-section"&gt;&lt;p&gt;Every year the photo-club I’m part of organizes an international &lt;a href="/hashtags/photo.html"&gt;&lt;span class="hashtag" data-hashtag="photo"&gt;#photo&lt;/span&gt;&lt;/a&gt; competition, &lt;a href="https://www.salondaguerre.paris/en/"&gt;Salon Daguerre&lt;/a&gt;. This year was the second time in a row I contribute to the organization of the Salon. My contribution is not much: I contribute as tech support. I attend the judgment but I do not take part in scoring images. I am around to fix the computer if something breaks. Since the technicals aspects always are flawless (haha), I get to spend time and observe how the photo contest is judged.&lt;/p&gt; &lt;p&gt;This article summarizes what I think could be of interest to contestants. First, this article discusses technical aspects of how photos are shown. Second, the articles discusses the judgment process, and finally I’ll give my personal opinion about the process and some strategies when preparing your entry. Disclaimer: everything in this article is specific to one competition and other competitions will have different rules.&lt;/p&gt; &lt;h1 id="technical-aspects"&gt;Technical aspects&lt;/h1&gt; &lt;p&gt;The main technical aspect influencing how judges will perceive photos is the way photos are shown. In our case, photos are shown on a screen. Judges sit in front of the screen in a same room.&lt;/p&gt; &lt;p&gt;Have you been to a TV shop? all those different TVs showing the same movie but you do not get the same feeling from one TV to another one. The same is true when looking at photos on a screen. Resolution, crispness, brightness, coloration etc. all vary. Our screen is calibrated. Although our screen is calibrated and we can somewhat reproduce the display experience, your screen may not. Also, keep in mind that your own screen and other factors are hard to control (e.g., the ambient light in the room).&lt;/p&gt; &lt;p&gt;The display resolution is set to the maximum-size of submitted photos, which happens to be 1920x1080 pixels so that a maximal photo takes the whole screen. Modern computers, TVs, laptop screens typically have higher resolution than HD. Our TV is 4K for instance (recall. HD is 1920x1080, 4K is 3840x2160) for something like one meter diagonal. Further, many people now consume photos on handheld devices, with screens much smaller than a TV like ours. Hence, it is better to assume that the screen and even individual pixels will be “larger” than you are used to for watching photos. If you prepare your photos on a small device (e.g., on a laptop or smaller), my recommendation is to watch how your pictures render on a large screen.&lt;/p&gt; &lt;p&gt;While you look at pictures on a TV-sized screen, keep in mind that screens will want to make their own brightness, crispness, what-have-you adjustments. Thus, go play in the settings and experience how your photo “degrades” along a range of settings. If you do this exercise you’ll realize that a good way to destroy your photo is to increase the sharpness cursor. Indeed, judges sit in front of the TV at some distance so that they can comfortably see the whole screen at a glance yet still see a fair amount of details.&lt;/p&gt; &lt;p&gt;If your photo does not match the maximal resolution of the contest, the photo is not arbitrarily stretched (for obvious reasons). Instead, the photo is centered and laid over a black background. Conversely, if your photo matches the maximal resolution, the TV-frame will be the immediate background. Like most TVs, ours has a dark frame. As a result, images with dark around corners will appear to blend in the background so that the exact frame size may not be clear to the viewer. If your composition uses proportions and is dark around borders, your image may lose impact. Alternatively, you might want to deliberately take the absence of clear border as an artistic choice. However keep in mind that this effect will not show in a gallery/catalogue (our catalogue historically has a gray background). To completely remove lisibility issues my recommendations are to do one of (or both): Expand the canvas of your photo to fill the maximal size with the color of your choice (note: pay attention to monochrome). Add a few-pixels of light border as a clear delimitation. With these, the border of your picture will become clear.&lt;/p&gt; &lt;p&gt;Only photos are shown. In particular, we do not show author names nor image titles. In particular, I want to stress that the title will not save an hard-to-understand photography by adding extra context or giving away some subtle hidden pun. You still want to spend some time on your titles as titles are shown in the catalogue if your entry is accepted.&lt;/p&gt; &lt;p&gt;Summarizing, the effort you owe yourself is to try your pictures on a TV screen with black background. Let’s now discuss the judgment process.&lt;/p&gt; &lt;h1 id="on-the-judgment-itself"&gt;On the judgment itself&lt;/h1&gt; &lt;p&gt;The judgment takes place in a couple of days. During these days, three judges have to gauge the merit of thousands of photos. That is, overall the average time &lt;a href="/hashtags/budget.html"&gt;&lt;span class="hashtag" data-hashtag="budget"&gt;#budget&lt;/span&gt;&lt;/a&gt; for a single photo is only a few seconds. However, judges are explicitly told they can pause and discuss if they want. Such discussions occur a handful of times over a judgment. Most of the photos, however, are voted for while judges operate at some “cruise speed”.&lt;/p&gt; &lt;p&gt;Sections are judged one by one (e.g., all “open-theme color”, then all “trees” photos). Photos of a same section are shown in a random order. Each photo is judged before the next photo is shown. Thus judges vote for a photo as a standalone artifact rather than by judging a photo as part of a whole. The judgment attributes a &lt;em&gt;score&lt;/em&gt; rather than a binary &lt;em&gt;accept/reject&lt;/em&gt; choice. The score is the sum of all grades given by individual judges. At the end of the section, photos are ranked by score and tie breaking may occur where it matters (i.e., at the top of the charts and at the accept/reject score boundary). The vast majority of photos need no tie-break and thus will be scored once with three grades.&lt;/p&gt; &lt;p&gt;Sections have rules. Read the rules. The two broad rules are about meeting the theme (e.g., “trees”, “open”) and constraints (e.g., “monochrome vs. color”). Mistakes occur, and you just lose a chance. Neither organizers, nor judges, nor you want to feel bad to disqualify a good photo because you misread whether a section is monochrome or not. Judging whether an image corresponds to a theme on subjects (e.g., “trees”) or technical (e.g., “negative space”) is not always a clear cut. Judges have to decide reasonably. However, if it is unclear whether a photo is in the theme they may decide to penalize your photo because the photo does not adhere well to the theme. What happens in general is some judge asks others about how they feel about a photo and some consensus emerges. However since this discussion takes time, judges end up expediting border-line and average photos. For a border-line photo to be accepted, it must be &lt;em&gt;good&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;Avoid submitting series. The shuffling of photos destroys the consistency of photo series. Not only a photo may be accepted and another one may be rejected. But also the effect of seeing two related images with a dozen of unrelated image in between is not nice. If the series is “intellectual” (e.g., a same allegory with different subjects) the link will be too tenuous and you will have spent this effort for no reward. If the series is “graphical”, you leave the impression that you do not know what is your best entry and let the judges pick (boredom born from repetition may reduce your chances). My recommendation is: no series if the contest randomizes photo order. For contests which judge a body of work, of course do make series. An option could be to make a diptych or triptych photomontage, but keep in mind that your are pixel-constrained.&lt;/p&gt; &lt;p&gt;In summary in Salon Daguerre, you are submitting a collection of standalone photos rather than a body of work. Keep in mind that photos must fit the theme. The next section is more personal and contains suggestions of how to approach contests with similar rules than in our photo-club.&lt;/p&gt; &lt;h1 id="personal-opinion-and-strategies"&gt;Personal opinion and strategies&lt;/h1&gt; &lt;p&gt;As a spectator, you can see what photos get accepted on the catalogue, however you cannot see photos which were rejected. My vantage point allows me to form an opinion on what gets accepted versus what not.&lt;/p&gt; &lt;p&gt;First, I think that the judgment process is rather fair. Top-ranked photos emerge as “good photos”. Although judging thousands of photos in a few days seems like a difficult task, judges do a good job while keeping a rather fast rythm. I think there is a minimal amount of “luck” in the process. I’d say the first one or two dozens of photos in a series get votes that are a bit more contrasted (i.e., being pushed up or pushed down, but rarely changing the accept/reject decision). Further, since photos are shown in a random order, no-one can take advantage of this behavior.&lt;/p&gt; &lt;p&gt;Second, I would say that you can aim for two very different goals when participating to a photo contest like Salon Daguerre. A first goal would be to get top-ranked photos, another goal would be to get many accepted photo. For the first goal, top-ranked photos, you’ll need to focus on producing a few really good photos. For the second goal, you’ll &lt;a href="/hashtags/budget.html"&gt;&lt;span class="hashtag" data-hashtag="budget"&gt;#budget&lt;/span&gt;&lt;/a&gt; your time on producing multiple acceptably good photos.&lt;/p&gt; &lt;p&gt;My personal characterization of &lt;em&gt;good photos&lt;/em&gt; – which can get a high score – is as follows. From most important to less important:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;subject and story of the photos are clear &lt;/li&gt; &lt;li&gt;some novelty / originality / leaves some impression &lt;/li&gt; &lt;li&gt;technically good &lt;/li&gt; &lt;li&gt;fair amount of time has been spent on post-processing &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Whereas my personal characterization of photos that stand a good chance are to get &lt;em&gt;accepted&lt;/em&gt; is:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;subject and story of the photos are clear &lt;/li&gt; &lt;li&gt;technically good &lt;/li&gt; &lt;li&gt;not “overdone” (see below) &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Two characteristics are shared among accepted photos: the subject and the story of the photos are clear and they are technically good. An explanation is that the judgment-speed plays a major role and ten seconds staring at a photo does not allow an in-depth explanation. As a result, a photo where the subject is not clear will get disadvantaged. I would even say that a photo with alternative framing choices that could hypothetically work are at a disadvantage. If you put yourself in the shoes of the judge, you need to look at a photo and say “I cannot change anything”. Conversely, a photo that has technical flaws (e.g., poor framing, camera shake) or where a judge would say “I would have framed it this way instead” will get voted down.&lt;/p&gt; &lt;p&gt;Some photo belong to “canonical categories” (e.g., standard portraits, sports, animals, landscapes) and are generally welcome in multiple sections. Similarly, some photos have been done and done-again (e.g., partial desaturation, tone-mapped HDR, un-original scenic spots). For these photos, you less likely to rank high but you can still get a photo accepted if you bring an interesting twist. For these photos, keep in mind that the photo-shot has to be technically flawless but that only will not suffice.&lt;/p&gt; &lt;p&gt;In summary. Keep in mind that photos get judged fast. They need to leave a lasting impression as photos you remember and which are technically flawless.&lt;/p&gt; &lt;h1 id="conclusion"&gt;conclusion&lt;/h1&gt; &lt;p&gt;As a participant of photo contests, your reward is visibility and peer recognition. Participating as co-organizer, the reward I get is to be able to attend to photo judgments and build an intuition of what makes a “winning photo”. My recommendation is that if you participate to a photo contest do it with the intent to win from the start of the process. If you look at your catalogue of good photos and cherry-pick some you will not be putting the right amount of effort in selecting or processing the photo. Photos need to be technically good and give a lasting impression in a few seconds. At a same time, photos need no obvious flaws. In short, winning photos are simple to undersand, easy to remember, impossible to discard.&lt;/p&gt; &lt;/section&gt;&lt;/div&gt;
        </content>
        <link href="https://dicioccio.fr/photoclub-judgment-tips.html" rel="alternate"/>
        <summary type="text">
            Recently I was co-organizing [Salon Daguerre](https://www.salondaguerre.paris/en/), an international photo competition, as a tech helper. In this article I give you a sneak peek of how the judgment works.
        </summary>
    </entry>
    <entry>
        <id>
            https://dicioccio.fr/dhall-section-demo.html
        </id>
        <title type="text">
            Scripting subsets of page contents in Dhall.
        </title>
        <updated>
            2022-05-03T01:00:00Z
        </updated>
        <author>
            <name>
                Lucas DiCioccio
            </name>
        </author>
        <content type="html">
            &lt;div class="main-article"&gt;&lt;section class="main-section"&gt;&lt;p&gt;Since I’ve started building my own blog engine, I wanted some limited &lt;a href="/hashtags/scripting.html"&gt;&lt;span class="hashtag" data-hashtag="scripting"&gt;#scripting&lt;/span&gt;&lt;/a&gt; capabilities in the text-processing engine. A specific case I had in mind was to generate some tables or listings for what you currently find on the &lt;a href="/readings.html"&gt;/readings.html&lt;/a&gt; or on the &lt;a href="/tips.html"&gt;/tips.html&lt;/a&gt; page. I would like something like &lt;a href="http://microformats.org/"&gt;Microformats&lt;/a&gt;, but tactically applied to individual articles, with little ceremony.&lt;/p&gt; &lt;p&gt;A more telling example could be a &lt;a href="/hashtags/photo.html"&gt;&lt;span class="hashtag" data-hashtag="photo"&gt;#photo&lt;/span&gt;&lt;/a&gt; gallery where we list a dozen of images. For each image you’d want a title, an URL, a preferred background color for the frame, maybe a caption etc. Hand-editing such galleries is a lot of work, and the extra ceremony to store less than 100 records in a DB is not worth it. There’s a gap to fill&lt;/p&gt; &lt;p&gt;This article demonstrates and discusses a PoC using the Dhall programming language as a specific step.&lt;/p&gt; &lt;h2 id="high-level-need"&gt;high-level need&lt;/h2&gt; &lt;p&gt;What is common in the type of pages where I would like some minimal templating is:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I want to reference and organize a moderately large amount of items. &lt;/li&gt; &lt;li&gt;items within a collection have a common structure (e.g., a link to a page would have a title, an URL, some language, and some description from myself). &lt;/li&gt; &lt;li&gt;I want to present, ideally with some mechanical template to keep the styling/HTML-structure consistent. &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Thus I have &lt;strong&gt;three distinct characteristics to carve out&lt;/strong&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;ol&gt; &lt;li&gt;define the structure of items &lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;li&gt;&lt;ol start="2"&gt; &lt;li&gt;list a collection of items &lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;li&gt;&lt;ol start="3"&gt; &lt;li&gt;implement some template I use to present these &lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Separating 1. and 2. is a matter of getting some type and some syntax to write values. Separating 3. requires a novel feature in my blog-engine: to interpret some structure into some HTML chunk to embed in a longer article. Current generators only produce targets as fully-contained output objects (that then must be embedded via other HTML primitives like &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags).&lt;/p&gt; &lt;h2 id="mini-design"&gt;mini design&lt;/h2&gt; &lt;p&gt;Let’s go through my design process. This is a retroactive recount of the process I took rather than an upfront design-doc.&lt;/p&gt; &lt;h3 id="current-situation"&gt;current situation&lt;/h3&gt; &lt;p&gt;Absent a proper solution for this need, I so far hand-write all these pages. A downside is that I need to carefully write CommonMark if I want to apply some CSS uniformly. More annoying is if I want to add a non-trivial and verbose annotations (e.g., adding a &lt;code&gt;mailto:&lt;/code&gt; link). This process is &lt;em&gt;fastidious&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;I do not want to trade fastidiousness for significant extra complexity. Indeed, in these tasks there is a risk to end up for a similarly-fastidious process involving more moving bits… What I want to avoid is:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;a. having a separate database, connectors, and section capable of reading the database at production-time &lt;/li&gt; &lt;li&gt;b. writing data structures in the Haskell-side of the blog-engine, including templates just for each type of listing &lt;/li&gt; &lt;li&gt;c. writing some JS that fetches a JSON-list and render only in the client &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Adding a database (a.) is the latest thing I would like to do because of all the deployment and extra changes required. I know this time will come if I want to do things like comments, but let me push it further. At this point, even SQLite would be too much overhead to add schemas, populate data etc.&lt;/p&gt; &lt;p&gt;Writing Haskell-code (b.) and would be fine regarding the structure definition, however I do not like to “split” an article between multiple sources. A reason why I wrote a blog-engine was to avoid distractions while focusing on writing an article.&lt;/p&gt; &lt;p&gt;Of the three, I think that writing all the logic client-side (c.) probably would be the least intrusive to my writing flow. However, clients that do not support JavaScript would miss the content. I’m fine with JavaScript when it is &lt;em&gt;required&lt;/em&gt; or when it is a &lt;em&gt;nice to have&lt;/em&gt;. Usage of JS for just laying-out the meaty-content is something I frown upon.&lt;/p&gt; &lt;p&gt;Summarizing, I was searching for some way to embed logic that would return some HTML provided some type locally-defined and locally-filled in an article document.&lt;/p&gt; &lt;h3 id="filling-in-the-gap"&gt;filling in the gap&lt;/h3&gt; &lt;p&gt;To fill the gap, there are a two key decisions to make:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;a. what scripting language(s) to support? &lt;/li&gt; &lt;li&gt;b. at which point of the computation pipeline should I incorporate this engine? &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For the first question (a), I want some minimal and non-trivial language. I do not want to invest much time on the particular choice because I want to try different things rather than do some proper analysis to answer the second (b) question. Indeed, if the cost for demonstrating (a) happens to be small, then I get a pretty good starting point to answer or try &lt;a href="/hashtags/trade-off.html"&gt;&lt;span class="hashtag" data-hashtag="trade-off"&gt;#trade-off&lt;/span&gt;&lt;/a&gt; in (b).&lt;/p&gt; &lt;p&gt;Working on the &lt;a href="/halogen-demo.html"&gt;Halogen demo article&lt;/a&gt; I was reminded about &lt;a href="https://dhall-lang.org/"&gt;Dhall&lt;/a&gt; as an improved YAML/JavaScript for configuration. Configurations are very similar to Microformats, so why no try Dhall first?&lt;/p&gt; &lt;p&gt;Rather than providing a lengthy discussion, I’ll leave only bullet points around pro/cons (note that I realize that these bullet points for pro/cons could themselves become microformats).&lt;/p&gt; &lt;h4 id="advantages"&gt;Advantages&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;incorporating Dhall is a full demonstration of how scripted evaluations (I want some opaque IO returning some CommonMark) &lt;/li&gt; &lt;li&gt;still a first stone in some more advanced form of pipeline/build-system &lt;/li&gt; &lt;li&gt;Dhall has the ability to import libraries with little package management pain, I could use this to re-use parts across articles, it’s a good nice to have &lt;/li&gt; &lt;li&gt;interoperability between Dhall and Haskell is a bliss (the &lt;a href="https://twitter.com/GabriellaG439"&gt;Dhall author&lt;/a&gt; is a &lt;a href="https://www.haskellforall.com/"&gt;prolific Haskell engineer&lt;/a&gt;) &lt;/li&gt; &lt;/ul&gt; &lt;h4 id="limitations"&gt;Limitations&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;so far, no extra environment is passed to the Dhall interpreter (the Dhall code does not know about its surroundings, article title or any other data &lt;span class="emoji" data-emoji="arrow_right"&gt;➡️&lt;/span&gt; for later) &lt;/li&gt; &lt;li&gt;no dependency between sections are planned (need to do detection cycles or find other approaches &lt;span class="emoji" data-emoji="arrow_right"&gt;➡️&lt;/span&gt; for later) &lt;/li&gt; &lt;/ul&gt; &lt;h4 id="drawbacks"&gt;Drawbacks&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;evaluating Dhall code costs extra time, CPUs, and file-descriptors (especially important while I care about automatic reloads of previews when editing articles) &lt;/li&gt; &lt;li&gt;intermediary results are opaque and hidden, if some final HTML is wrong, I need to know what has been generated as intermediary &lt;/li&gt; &lt;li&gt;risk of adding non-deterministic content generation (e.g., breaking because I’ve no network, some hackers inserting duck picks or spam because the evaluator fetches from the Internet) &lt;/li&gt; &lt;/ul&gt; &lt;h4 id="summary"&gt;Summary&lt;/h4&gt; &lt;p&gt;Dhall still seems a darn-good choice. None of the drawbacks are fatal flaws and can be mitigated. The most dangerous in my opinion is the evaluation costs. I will likely mitigate it using some cacheing in the future. I need to keep in mind that there are two evaluation phases in my blog engine: one computing targets and another one rendering targets. Both have their trade-offs.&lt;/p&gt; &lt;p&gt;Non-determinism is heavily mitigated while sticking to Dhall, so I expect no big surprises. When adapting the pattern to other languages (e.g., if I ever want to run some python) then I will have to be more careful.&lt;/p&gt; &lt;h2 id="result"&gt;result&lt;/h2&gt; &lt;p&gt;I spent less than two hours, including family interruptions &lt;span class="emoji" data-emoji="baby"&gt;👶&lt;/span&gt; and babbling-around time. The implementation so far is extremely primitive, though.&lt;/p&gt; &lt;p&gt;I decided to interpret the Dhall code while loading the Site targets rather than while generating targets. As much as I wanted to avoid this option, it is the pragmatic choice: on the one hand, I interpret sections’ Commonmark in different places (e.g., for rendering HTML but also when analyzing content or generating a JSON AST). On the other hand, cache control and idempotency is more obvious to control at this early phase: one execution of the script gives one website-worth of recipes.&lt;/p&gt; &lt;p&gt;Overall I had to do the following changes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;add a new format (defining a new pattern, and parser pattern) in my section-files &lt;/li&gt; &lt;li&gt;import the Dhall package and runtime (it’s a Haskell library, nothing different from importing an HTTP-client here) &lt;/li&gt; &lt;li&gt;insert some case-switch on the section format in the code that loads an Article &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;And that’s all.&lt;/p&gt; &lt;p&gt;You can see for yourself in &lt;a href="/gen/out/dhall-section-demo.cmark__full-diff"&gt;the commit diff&lt;/a&gt; . And you can see this &lt;a href="/gen/out/dhall-section-demo.cmark__source-cmark"&gt;whole article source&lt;/a&gt; including the &lt;code&gt;dhall&lt;/code&gt; section.&lt;/p&gt; &lt;p&gt;Later, I added a local “cache” of the Dhall prelude so that live-reloading my Dhall-code does not reload the Dhall prelude from the internet each time. Since Dhall supports cached import, the local cache requires little extra work: I just have this &lt;a href="/gen/out/dhall-section-demo.cmark__local-dhall-prelude-cache"&gt;file with a checksum-verified network import&lt;/a&gt;, which I then import as a filesystem-local import with &lt;code&gt;let prelude = ./dhall/Prelude.dhall&lt;/code&gt;.&lt;/p&gt; &lt;h3 id="future"&gt;future&lt;/h3&gt; &lt;p&gt;In the future, the Dhall object to return will be a beefier record rather than just a blob &lt;code&gt;List Text&lt;/code&gt;. For instance, we could return extra information as metadata or as extra instructions that do not find their way in the HTML. Also, the Dhall code could return something else than Commonmark, we could &lt;a href="https://github.com/andrewthad/dhall-html"&gt;directly generate HTML&lt;/a&gt; or JSON values.&lt;/p&gt; &lt;/section&gt;&lt;section class="main-section"&gt;&lt;div id="generated-section"&gt; &lt;p&gt;–– start of generated section ––&lt;/p&gt; &lt;h1 id="this-section-is-generated"&gt;this section is generated&lt;/h1&gt; &lt;p&gt;This whole &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; is interpreted from Dhall to Cmark to HTML. The content likely is the boundary at which point I enjoy having some templating mechanism over repeating the same thing many times. Indeed, if my data-type changes (adding columns) I need some help. Same if the template changes (adding fields, changing the markup).&lt;/p&gt; &lt;p&gt;In this example, I use two Dhall functions as two templates for a same dataset. Styling is then done in CSS.&lt;/p&gt; &lt;h2 id="table-layout"&gt;table layout&lt;/h2&gt; &lt;table&gt; &lt;thead&gt; &lt;th&gt;author&lt;/th&gt; &lt;th&gt;note&lt;/th&gt; &lt;th&gt;website&lt;/th&gt; &lt;th&gt;personal comment&lt;/th&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Alice&lt;/td&gt; &lt;td&gt;7/10&lt;/td&gt; &lt;td&gt;&lt;a href=https://www.example.com&gt;secret santa barbara&lt;/a&gt;&lt;/td&gt; &lt;td&gt;good to learn about the city&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Bob&lt;/td&gt; &lt;td&gt;8/10&lt;/td&gt; &lt;td&gt;&lt;a href=https://www.example.com&gt;sponge's den&lt;/a&gt;&lt;/td&gt; &lt;td&gt;other cartoons are funnier but okay&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Cindy&lt;/td&gt; &lt;td&gt;3/10&lt;/td&gt; &lt;td&gt;&lt;a href=https://www.example.com&gt;hello world I'm Cindy&lt;/a&gt;&lt;/td&gt; &lt;td&gt;abandonned site&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Dave&lt;/td&gt; &lt;td&gt;9/10&lt;/td&gt; &lt;td&gt;&lt;a href=https://www.example.com&gt;blog of a developer&lt;/a&gt;&lt;/td&gt; &lt;td&gt;he sings so well&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Emil&lt;/td&gt; &lt;td&gt;2/10&lt;/td&gt; &lt;td&gt;&lt;a href=https://www.example.com&gt;eating some chewing gum&lt;/a&gt;&lt;/td&gt; &lt;td&gt;French movies...&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Felicia&lt;/td&gt; &lt;td&gt;6/10&lt;/td&gt; &lt;td&gt;&lt;a href=https://www.example.com&gt;yet another a website&lt;/a&gt;&lt;/td&gt; &lt;td&gt;average&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Gerard&lt;/td&gt; &lt;td&gt;3/10&lt;/td&gt; &lt;td&gt;&lt;a href=https://www.example.com&gt;tech lead lead leader&lt;/a&gt;&lt;/td&gt; &lt;td&gt;lots of words to say nothing&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Hortense&lt;/td&gt; &lt;td&gt;8/10&lt;/td&gt; &lt;td&gt;&lt;a href=https://www.example.com&gt;lotta tasty recipes&lt;/a&gt;&lt;/td&gt; &lt;td&gt;miam miam&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id="tiles-layout"&gt;tiles layout&lt;/h2&gt; &lt;div class="tileset"&gt; &lt;div class="tile" draggable="true"&gt; &lt;div class="heading"&gt; &lt;span class="name"&gt;Alice&lt;/span&gt; &lt;span class="note"&gt;7/10&lt;/span&gt; &lt;/div&gt; &lt;div class="link"&gt;&lt;a href=https://www.example.com&gt;secret santa barbara&lt;/a&gt;&lt;/div&gt; &lt;div class="commnet"&gt;good to learn about the city&lt;/div&gt; &lt;/div&gt; &lt;div class="tile" draggable="true"&gt; &lt;div class="heading"&gt; &lt;span class="name"&gt;Bob&lt;/span&gt; &lt;span class="note"&gt;8/10&lt;/span&gt; &lt;/div&gt; &lt;div class="link"&gt;&lt;a href=https://www.example.com&gt;sponge's den&lt;/a&gt;&lt;/div&gt; &lt;div class="commnet"&gt;other cartoons are funnier but okay&lt;/div&gt; &lt;/div&gt; &lt;div class="tile" draggable="true"&gt; &lt;div class="heading"&gt; &lt;span class="name"&gt;Cindy&lt;/span&gt; &lt;span class="note"&gt;3/10&lt;/span&gt; &lt;/div&gt; &lt;div class="link"&gt;&lt;a href=https://www.example.com&gt;hello world I'm Cindy&lt;/a&gt;&lt;/div&gt; &lt;div class="commnet"&gt;abandonned site&lt;/div&gt; &lt;/div&gt; &lt;div class="tile" draggable="true"&gt; &lt;div class="heading"&gt; &lt;span class="name"&gt;Dave&lt;/span&gt; &lt;span class="note"&gt;&lt;i class="heart"/&gt;&amp;hearts;&lt;/i&gt;9/10&lt;/span&gt; &lt;/div&gt; &lt;div class="link"&gt;&lt;a href=https://www.example.com&gt;blog of a developer&lt;/a&gt;&lt;/div&gt; &lt;div class="commnet"&gt;he sings so well&lt;/div&gt; &lt;/div&gt; &lt;div class="tile" draggable="true"&gt; &lt;div class="heading"&gt; &lt;span class="name"&gt;Emil&lt;/span&gt; &lt;span class="note"&gt;2/10&lt;/span&gt; &lt;/div&gt; &lt;div class="link"&gt;&lt;a href=https://www.example.com&gt;eating some chewing gum&lt;/a&gt;&lt;/div&gt; &lt;div class="commnet"&gt;French movies...&lt;/div&gt; &lt;/div&gt; &lt;div class="tile" draggable="true"&gt; &lt;div class="heading"&gt; &lt;span class="name"&gt;Felicia&lt;/span&gt; &lt;span class="note"&gt;6/10&lt;/span&gt; &lt;/div&gt; &lt;div class="link"&gt;&lt;a href=https://www.example.com&gt;yet another a website&lt;/a&gt;&lt;/div&gt; &lt;div class="commnet"&gt;average&lt;/div&gt; &lt;/div&gt; &lt;div class="tile" draggable="true"&gt; &lt;div class="heading"&gt; &lt;span class="name"&gt;Gerard&lt;/span&gt; &lt;span class="note"&gt;3/10&lt;/span&gt; &lt;/div&gt; &lt;div class="link"&gt;&lt;a href=https://www.example.com&gt;tech lead lead leader&lt;/a&gt;&lt;/div&gt; &lt;div class="commnet"&gt;lots of words to say nothing&lt;/div&gt; &lt;/div&gt; &lt;div class="tile" draggable="true"&gt; &lt;div class="heading"&gt; &lt;span class="name"&gt;Hortense&lt;/span&gt; &lt;span class="note"&gt;8/10&lt;/span&gt; &lt;/div&gt; &lt;div class="link"&gt;&lt;a href=https://www.example.com&gt;lotta tasty recipes&lt;/a&gt;&lt;/div&gt; &lt;div class="commnet"&gt;miam miam&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt;–– end of generated section ––&lt;/p&gt; &lt;/div&gt; &lt;/section&gt;&lt;/div&gt;
        </content>
        <link href="https://dicioccio.fr/dhall-section-demo.html" rel="alternate"/>
        <summary type="text">
            A demo of using Dhall as an intermediary step for my blog-engine sections.
        </summary>
    </entry>
</feed>
